{
	"kind": "List",
	"apiVersion": "odo.dev/v1alpha1",
	"metadata": {
		"creationTimestamp": null
	},
	"operators": {
		"metadata": {
			"resourceVersion": "633657031"
		},
		"items": [
			{
				"kind": "ClusterServiceVersion",
				"apiVersion": "operators.coreos.com/v1alpha1",
				"metadata": {
					"name": "devworkspace-operator.v0.12.0",
					"namespace": "jmaury-dev",
					"uid": "ad1d3d83-1401-4c08-bacf-079504be7430",
					"resourceVersion": "618252620",
					"generation": 1,
					"creationTimestamp": "2022-01-26T00:42:55Z",
					"labels": {
						"olm.api.1f69fff9af26fa19": "provided",
						"olm.api.36a457d04937a574": "provided",
						"olm.api.853988a042d5bcb": "provided",
						"olm.api.b757f8eb6c7f290a": "provided",
						"olm.api.e4fffb40fe6ac452": "provided",
						"olm.api.e966aad7e3dc1ed0": "provided",
						"olm.copiedFrom": "crw"
					},
					"annotations": {
						"alm-examples": "[]",
						"capabilities": "Basic Install",
						"olm.operatorGroup": "devworkspace-operator",
						"olm.operatorNamespace": "crw",
						"operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"controller.devfile.io\",\"kind\":\"DevWorkspaceOperatorConfig\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"controller.devfile.io\",\"kind\":\"DevWorkspaceRouting\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"workspace.devfile.io\",\"kind\":\"DevWorkspace\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"workspace.devfile.io\",\"kind\":\"DevWorkspace\",\"version\":\"v1alpha2\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"workspace.devfile.io\",\"kind\":\"DevWorkspaceTemplate\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"workspace.devfile.io\",\"kind\":\"DevWorkspaceTemplate\",\"version\":\"v1alpha2\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"devworkspace-operator\",\"version\":\"0.12.0\"}}]}",
						"operators.operatorframework.io/builder": "operator-sdk-v1.7.1+git",
						"operators.operatorframework.io/internal-objects": "[\"devworkspaceroutings.controller.devfile.io\"]",
						"operators.operatorframework.io/project_layout": "go.kubebuilder.io/v2"
					},
					"managedFields": [
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-01-26T00:42:55Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:metadata": {
									"f:annotations": {
										".": {},
										"f:alm-examples": {},
										"f:capabilities": {},
										"f:olm.operatorGroup": {},
										"f:olm.operatorNamespace": {},
										"f:operatorframework.io/properties": {},
										"f:operators.operatorframework.io/builder": {},
										"f:operators.operatorframework.io/internal-objects": {},
										"f:operators.operatorframework.io/project_layout": {}
									},
									"f:labels": {
										".": {},
										"f:olm.api.1f69fff9af26fa19": {},
										"f:olm.api.36a457d04937a574": {},
										"f:olm.api.853988a042d5bcb": {},
										"f:olm.api.b757f8eb6c7f290a": {},
										"f:olm.api.e4fffb40fe6ac452": {},
										"f:olm.api.e966aad7e3dc1ed0": {},
										"f:olm.copiedFrom": {}
									}
								},
								"f:spec": {
									".": {},
									"f:apiservicedefinitions": {},
									"f:cleanup": {
										".": {},
										"f:enabled": {}
									},
									"f:customresourcedefinitions": {
										".": {},
										"f:owned": {}
									},
									"f:description": {},
									"f:displayName": {},
									"f:install": {
										".": {},
										"f:spec": {
											".": {},
											"f:clusterPermissions": {},
											"f:deployments": {},
											"f:permissions": {}
										},
										"f:strategy": {}
									},
									"f:installModes": {},
									"f:keywords": {},
									"f:links": {},
									"f:maintainers": {},
									"f:maturity": {},
									"f:provider": {
										".": {},
										"f:name": {},
										"f:url": {}
									},
									"f:relatedImages": {},
									"f:replaces": {},
									"f:version": {},
									"f:webhookdefinitions": {}
								}
							}
						},
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-01-26T00:45:48Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:status": {
									".": {},
									"f:certsLastUpdated": {},
									"f:certsRotateAt": {},
									"f:cleanup": {},
									"f:conditions": {},
									"f:lastTransitionTime": {},
									"f:lastUpdateTime": {},
									"f:message": {},
									"f:phase": {},
									"f:reason": {},
									"f:requirementStatus": {}
								}
							},
							"subresource": "status"
						}
					]
				},
				"spec": {
					"install": {
						"strategy": "deployment",
						"spec": {
							"deployments": [
								{
									"name": "devworkspace-controller-manager",
									"spec": {
										"replicas": 1,
										"selector": {
											"matchLabels": {
												"app.kubernetes.io/name": "devworkspace-controller",
												"app.kubernetes.io/part-of": "devworkspace-operator"
											}
										},
										"template": {
											"metadata": {
												"creationTimestamp": null,
												"labels": {
													"app.kubernetes.io/name": "devworkspace-controller",
													"app.kubernetes.io/part-of": "devworkspace-operator"
												}
											},
											"spec": {
												"containers": [
													{
														"name": "devworkspace-controller",
														"image": "quay.io/devfile/devworkspace-controller:v0.12.0",
														"args": [
															"/usr/local/bin/devworkspace-controller",
															"--enable-leader-election",
															"--metrics-addr=127.0.0.1:8080"
														],
														"ports": [
															{
																"name": "conversion",
																"containerPort": 9443,
																"protocol": "TCP"
															},
															{
																"name": "liveness-port",
																"containerPort": 6789,
																"protocol": "TCP"
															}
														],
														"env": [
															{
																"name": "WEBHOOK_SECRET_NAME",
																"value": "devworkspace-webhookserver-tls"
															},
															{
																"name": "RELATED_IMAGE_devworkspace_webhook_server",
																"value": "quay.io/devfile/devworkspace-controller:v0.12.0"
															},
															{
																"name": "RELATED_IMAGE_kube_rbac_proxy",
																"value": "registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.8"
															},
															{
																"name": "RELATED_IMAGE_project_clone",
																"value": "quay.io/devfile/project-clone:v0.12.0"
															},
															{
																"name": "WATCH_NAMESPACE",
																"valueFrom": {
																	"fieldRef": {
																		"fieldPath": "metadata.annotations['olm.targetNamespaces']"
																	}
																}
															},
															{
																"name": "POD_NAME",
																"valueFrom": {
																	"fieldRef": {
																		"fieldPath": "metadata.name"
																	}
																}
															},
															{
																"name": "OPERATOR_NAME",
																"value": "devworkspace-operator"
															},
															{
																"name": "CONTROLLER_SERVICE_ACCOUNT_NAME",
																"valueFrom": {
																	"fieldRef": {
																		"fieldPath": "spec.serviceAccountName"
																	}
																}
															},
															{
																"name": "MAX_CONCURRENT_RECONCILES",
																"value": "5"
															},
															{
																"name": "WEBHOOKS_SERVER_MEMORY_LIMIT",
																"value": "300Mi"
															},
															{
																"name": "WEBHOOKS_SERVER_MEMORY_REQUEST",
																"value": "20Mi"
															},
															{
																"name": "WEBHOOKS_SERVER_CPU_LIMIT",
																"value": "200m"
															},
															{
																"name": "WEBHOOKS_SERVER_CPU_REQUEST",
																"value": "100m"
															},
															{
																"name": "RELATED_IMAGE_plugin_redhat_developer_web_terminal_4_5_0",
																"value": "quay.io/eclipse/che-machine-exec:nightly"
															},
															{
																"name": "RELATED_IMAGE_web_terminal_tooling",
																"value": "quay.io/wto/web-terminal-tooling:latest"
															},
															{
																"name": "RELATED_IMAGE_pvc_cleanup_job",
																"value": "registry.access.redhat.com/ubi8-micro:8.4-81"
															},
															{
																"name": "RELATED_IMAGE_async_storage_server",
																"value": "quay.io/eclipse/che-workspace-data-sync-storage:0.0.1"
															},
															{
																"name": "RELATED_IMAGE_async_storage_sidecar",
																"value": "quay.io/eclipse/che-sidecar-workspace-data-sync:0.0.1"
															}
														],
														"resources": {
															"limits": {
																"cpu": "1",
																"memory": "1Gi"
															},
															"requests": {
																"cpu": "250m",
																"memory": "100Mi"
															}
														},
														"livenessProbe": {
															"httpGet": {
																"path": "/healthz",
																"port": "liveness-port",
																"scheme": "HTTP"
															},
															"initialDelaySeconds": 15,
															"timeoutSeconds": 5,
															"periodSeconds": 10,
															"successThreshold": 1,
															"failureThreshold": 5
														},
														"readinessProbe": {
															"httpGet": {
																"path": "/readyz",
																"port": "liveness-port",
																"scheme": "HTTP"
															},
															"initialDelaySeconds": 10,
															"timeoutSeconds": 5,
															"periodSeconds": 10,
															"successThreshold": 1,
															"failureThreshold": 3
														},
														"imagePullPolicy": "Always"
													},
													{
														"name": "kube-rbac-proxy",
														"image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.8",
														"args": [
															"--secure-listen-address=0.0.0.0:8443",
															"--upstream=http://127.0.0.1:8080/",
															"--logtostderr=true",
															"--v=10"
														],
														"ports": [
															{
																"name": "metrics",
																"containerPort": 8443,
																"protocol": "TCP"
															}
														],
														"resources": {}
													}
												],
												"terminationGracePeriodSeconds": 10,
												"serviceAccountName": "devworkspace-controller-serviceaccount"
											}
										},
										"strategy": {}
									}
								}
							],
							"permissions": [
								{
									"serviceAccountName": "devworkspace-controller-serviceaccount",
									"rules": [
										{
											"verbs": [
												"get",
												"list",
												"watch",
												"create",
												"update",
												"patch",
												"delete"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"configmaps"
											]
										},
										{
											"verbs": [
												"get",
												"update",
												"patch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"configmaps/status"
											]
										},
										{
											"verbs": [
												"create",
												"patch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"events"
											]
										}
									]
								}
							],
							"clusterPermissions": [
								{
									"serviceAccountName": "devworkspace-controller-serviceaccount",
									"rules": [
										{
											"verbs": [
												"create"
											],
											"apiGroups": [
												"authentication.k8s.io"
											],
											"resources": [
												"tokenreviews"
											]
										},
										{
											"verbs": [
												"create"
											],
											"apiGroups": [
												"authorization.k8s.io"
											],
											"resources": [
												"subjectaccessreviews"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"patch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"configmaps"
											],
											"resourceNames": [
												"workspace-preferences-configmap"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"configmaps",
												"persistentvolumeclaims",
												"pods",
												"secrets",
												"serviceaccounts"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"watch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"events",
												"namespaces"
											]
										},
										{
											"verbs": [
												"create"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"pods/exec"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"patch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"secrets"
											],
											"resourceNames": [
												"workspace-credentials-secret"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"services"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"admissionregistration.k8s.io"
											],
											"resources": [
												"mutatingwebhookconfigurations",
												"validatingwebhookconfigurations"
											]
										},
										{
											"verbs": [
												"update"
											],
											"apiGroups": [
												"apps"
											],
											"resources": [
												"deployments/finalizers"
											],
											"resourceNames": [
												"devworkspace-controller"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"watch"
											],
											"apiGroups": [
												"apps",
												"extensions"
											],
											"resources": [
												"deployments"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"apps",
												"extensions"
											],
											"resources": [
												"deployments",
												"replicasets"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"watch"
											],
											"apiGroups": [
												"apps",
												"extensions"
											],
											"resources": [
												"replicasets"
											]
										},
										{
											"verbs": [
												"create"
											],
											"apiGroups": [
												"authorization.k8s.io"
											],
											"resources": [
												"localsubjectaccessreviews",
												"subjectaccessreviews"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"batch"
											],
											"resources": [
												"jobs"
											]
										},
										{
											"verbs": [
												"get"
											],
											"apiGroups": [
												"config.openshift.io"
											],
											"resources": [
												"proxies"
											],
											"resourceNames": [
												"cluster"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"controller.devfile.io"
											],
											"resources": [
												"*"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"controller.devfile.io"
											],
											"resources": [
												"devworkspaceroutings"
											]
										},
										{
											"verbs": [
												"get",
												"patch",
												"update"
											],
											"apiGroups": [
												"controller.devfile.io"
											],
											"resources": [
												"devworkspaceroutings/status"
											]
										},
										{
											"verbs": [
												"create",
												"get",
												"update"
											],
											"apiGroups": [
												"coordination.k8s.io"
											],
											"resources": [
												"leases"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"watch"
											],
											"apiGroups": [
												"metrics.k8s.io"
											],
											"resources": [
												"pods"
											]
										},
										{
											"verbs": [
												"create",
												"get"
											],
											"apiGroups": [
												"monitoring.coreos.com"
											],
											"resources": [
												"servicemonitors"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"networking.k8s.io"
											],
											"resources": [
												"ingresses"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"deletecollection",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"oauth.openshift.io"
											],
											"resources": [
												"oauthclients"
											]
										},
										{
											"verbs": [
												"create",
												"get",
												"list",
												"update",
												"watch"
											],
											"apiGroups": [
												"rbac.authorization.k8s.io"
											],
											"resources": [
												"clusterrolebindings",
												"clusterroles",
												"rolebindings",
												"roles"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"route.openshift.io"
											],
											"resources": [
												"routes"
											]
										},
										{
											"verbs": [
												"create"
											],
											"apiGroups": [
												"route.openshift.io"
											],
											"resources": [
												"routes/custom-host"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"workspace.devfile.io"
											],
											"resources": [
												"*"
											]
										}
									]
								}
							]
						}
					},
					"version": "0.12.0",
					"maturity": "alpha",
					"customresourcedefinitions": {
						"owned": [
							{
								"name": "devworkspaceoperatorconfigs.controller.devfile.io",
								"version": "v1alpha1",
								"kind": "DevWorkspaceOperatorConfig"
							},
							{
								"name": "devworkspaceroutings.controller.devfile.io",
								"version": "v1alpha1",
								"kind": "DevWorkspaceRouting"
							},
							{
								"name": "devworkspaces.workspace.devfile.io",
								"version": "v1alpha1",
								"kind": "DevWorkspace"
							},
							{
								"name": "devworkspaces.workspace.devfile.io",
								"version": "v1alpha2",
								"kind": "DevWorkspace"
							},
							{
								"name": "devworkspacetemplates.workspace.devfile.io",
								"version": "v1alpha1",
								"kind": "DevWorkspaceTemplate"
							},
							{
								"name": "devworkspacetemplates.workspace.devfile.io",
								"version": "v1alpha2",
								"kind": "DevWorkspaceTemplate"
							}
						]
					},
					"apiservicedefinitions": {},
					"webhookdefinitions": [
						{
							"generateName": "cdevworkspaces.kb.io",
							"type": "ConversionWebhook",
							"deploymentName": "devworkspace-controller-manager",
							"containerPort": 443,
							"targetPort": "conversion",
							"sideEffects": "None",
							"admissionReviewVersions": [
								"v1"
							],
							"webhookPath": "/convert",
							"conversionCRDs": [
								"devworkspaces.workspace.devfile.io"
							]
						},
						{
							"generateName": "cdevworkspacetemplates.kb.io",
							"type": "ConversionWebhook",
							"deploymentName": "devworkspace-controller-manager",
							"containerPort": 443,
							"targetPort": "conversion",
							"sideEffects": "None",
							"admissionReviewVersions": [
								"v1"
							],
							"webhookPath": "/convert",
							"conversionCRDs": [
								"devworkspacetemplates.workspace.devfile.io"
							]
						}
					],
					"displayName": "DevWorkspace Operator",
					"description": "The DevWorkspace Operator enables cluster-level support for the\n[Devfile 2.0 spec](https://docs.devfile.io), enabling static, reproducible\nconfigurations for launching cloud-based editors and IDEs in OpenShift and\nKubernetes clusters.\n\nLeveraging the language server protocol and the Eclipse Theia web IDE, the\nDevWorkspace operator provides easy configuration of full development\nenvironments on the cloud with support for a wide variety of languages and\ntechnologies, including Go, Java, Typescript/Javascript, Python, and more.\n\nThe DevWorkspace Operator is also used in the Web Terminal Operator to\nautomatically provision Web Terminal environments.\n\n## Installing the operator\nThe DevWorkspace Operator can be installed directly from the OperatorHub UI and\nwill be available in all namespaces on the cluster. DevWorkspace creation is\ndriven by the DevWorkspace custom resource, which can be created in any\nnamespace to provision a full development environment. To get started, browse\nthe DevWorkspace [spec](https://docs.devfile.io/devfile/2.1.0/user-guide/api-reference.html).\n\nOnce a DevWorkspace is started, it can be accessed via the URL in its\n`.status.mainUrl` field.\n\nIt's recommended to install the DevWorkspace Operator to the\n`openshift-operators` namespace for compatibility.\n\n## Uninstalling the operator\nThe DevWorkspace Operator utilizes finalizers on resources it creates and\nwebhooks to restrict access to development resources. As a result, manual steps\nare required in uninstalling the operator. See the\n[documentation](https://github.com/devfile/devworkspace-operator/blob/main/docs/uninstall.md)\nfor details.\n",
					"keywords": [
						"Devworkspace Operator",
						"DevWorkspaces",
						"Devfile"
					],
					"maintainers": [
						{
							"name": "Angel Misevski",
							"email": "amisevsk@redhat.com"
						},
						{
							"name": "Josh Pinkney",
							"email": "jpinkney@redhat.com"
						}
					],
					"provider": {
						"name": "Devfile",
						"url": "https://devfile.io"
					},
					"links": [
						{
							"name": "Devworkspace Operator",
							"url": "https://github.com/devfile/devworkspace-operator"
						}
					],
					"installModes": [
						{
							"type": "OwnNamespace",
							"supported": false
						},
						{
							"type": "SingleNamespace",
							"supported": false
						},
						{
							"type": "MultiNamespace",
							"supported": false
						},
						{
							"type": "AllNamespaces",
							"supported": true
						}
					],
					"replaces": "devworkspace-operator.v0.11.0"
				},
				"status": {
					"phase": "Succeeded",
					"message": "The operator is running in crw but is managing this namespace",
					"reason": "Copied",
					"lastUpdateTime": "2022-02-04T11:05:41Z",
					"lastTransitionTime": "2022-02-04T11:05:41Z",
					"conditions": [
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:34:01Z",
							"lastTransitionTime": "2022-02-04T10:34:01Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:34:13Z",
							"lastTransitionTime": "2022-02-04T10:34:13Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment devworkspace-controller-manager to become ready: deployment \"devworkspace-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:34:16Z",
							"lastTransitionTime": "2022-02-04T10:34:13Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:38:58Z",
							"lastTransitionTime": "2022-02-04T10:38:58Z"
						},
						{
							"phase": "Failed",
							"message": "installing: waiting for deployment devworkspace-controller-manager to become ready: deployment \"devworkspace-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "ComponentUnhealthy",
							"lastUpdateTime": "2022-02-04T10:52:58Z",
							"lastTransitionTime": "2022-02-04T10:52:58Z"
						},
						{
							"phase": "Pending",
							"message": "installing: waiting for deployment devworkspace-controller-manager to become ready: deployment \"devworkspace-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-04T10:53:04Z",
							"lastTransitionTime": "2022-02-04T10:53:04Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:53:06Z",
							"lastTransitionTime": "2022-02-04T10:53:06Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:53:08Z",
							"lastTransitionTime": "2022-02-04T10:53:08Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment devworkspace-controller-manager to become ready: deployment \"devworkspace-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:53:11Z",
							"lastTransitionTime": "2022-02-04T10:53:08Z"
						},
						{
							"phase": "Failed",
							"message": "install timeout",
							"reason": "InstallCheckFailed",
							"lastUpdateTime": "2022-02-04T10:58:07Z",
							"lastTransitionTime": "2022-02-04T10:58:07Z"
						},
						{
							"phase": "Pending",
							"message": "installing: waiting for deployment devworkspace-controller-manager to become ready: deployment \"devworkspace-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-04T10:58:10Z",
							"lastTransitionTime": "2022-02-04T10:58:10Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:58:11Z",
							"lastTransitionTime": "2022-02-04T10:58:11Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:58:12Z",
							"lastTransitionTime": "2022-02-04T10:58:12Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment devworkspace-controller-manager to become ready: deployment \"devworkspace-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:58:14Z",
							"lastTransitionTime": "2022-02-04T10:58:12Z"
						},
						{
							"phase": "Failed",
							"message": "install timeout",
							"reason": "InstallCheckFailed",
							"lastUpdateTime": "2022-02-04T11:03:11Z",
							"lastTransitionTime": "2022-02-04T11:03:11Z"
						},
						{
							"phase": "Pending",
							"message": "installing: waiting for deployment devworkspace-controller-manager to become ready: deployment \"devworkspace-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-04T11:03:13Z",
							"lastTransitionTime": "2022-02-04T11:03:13Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T11:03:14Z",
							"lastTransitionTime": "2022-02-04T11:03:14Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T11:03:16Z",
							"lastTransitionTime": "2022-02-04T11:03:16Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment devworkspace-controller-manager to become ready: deployment \"devworkspace-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T11:03:22Z",
							"lastTransitionTime": "2022-02-04T11:03:16Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T11:05:41Z",
							"lastTransitionTime": "2022-02-04T11:05:41Z"
						}
					],
					"requirementStatus": [
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "devworkspaceoperatorconfigs.controller.devfile.io",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "9ed3f64e-8889-4e26-a1bb-b77bcc6ab793"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "devworkspaceroutings.controller.devfile.io",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "dbc93b9c-9670-4fc0-83fd-458084aa4807"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "devworkspaces.workspace.devfile.io",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "78d3f939-f499-4014-9da2-d041345dfc9a"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "devworkspacetemplates.workspace.devfile.io",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "7b61a652-6c89-4c17-8bce-c0f3fa06b8e0"
						},
						{
							"group": "",
							"version": "v1",
							"kind": "ServiceAccount",
							"name": "devworkspace-controller-serviceaccount",
							"status": "Present",
							"message": "",
							"dependents": [
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"],\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"get\",\"update\",\"patch\"],\"apiGroups\":[\"\"],\"resources\":[\"configmaps/status\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"create\",\"patch\"],\"apiGroups\":[\"\"],\"resources\":[\"events\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\"],\"apiGroups\":[\"authentication.k8s.io\"],\"resources\":[\"tokenreviews\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\"],\"apiGroups\":[\"authorization.k8s.io\"],\"resources\":[\"subjectaccessreviews\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"patch\"],\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"resourceNames\":[\"workspace-preferences-configmap\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"\"],\"resources\":[\"configmaps\",\"persistentvolumeclaims\",\"pods\",\"secrets\",\"serviceaccounts\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"watch\"],\"apiGroups\":[\"\"],\"resources\":[\"events\",\"namespaces\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\"],\"apiGroups\":[\"\"],\"resources\":[\"pods/exec\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"patch\"],\"apiGroups\":[\"\"],\"resources\":[\"secrets\"],\"resourceNames\":[\"workspace-credentials-secret\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"\"],\"resources\":[\"services\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"admissionregistration.k8s.io\"],\"resources\":[\"mutatingwebhookconfigurations\",\"validatingwebhookconfigurations\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"update\"],\"apiGroups\":[\"apps\"],\"resources\":[\"deployments/finalizers\"],\"resourceNames\":[\"devworkspace-controller\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"watch\"],\"apiGroups\":[\"apps\",\"extensions\"],\"resources\":[\"deployments\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"apps\",\"extensions\"],\"resources\":[\"deployments\",\"replicasets\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"watch\"],\"apiGroups\":[\"apps\",\"extensions\"],\"resources\":[\"replicasets\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\"],\"apiGroups\":[\"authorization.k8s.io\"],\"resources\":[\"localsubjectaccessreviews\",\"subjectaccessreviews\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\"],\"apiGroups\":[\"config.openshift.io\"],\"resources\":[\"proxies\"],\"resourceNames\":[\"cluster\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"controller.devfile.io\"],\"resources\":[\"*\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"controller.devfile.io\"],\"resources\":[\"devworkspaceroutings\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"patch\",\"update\"],\"apiGroups\":[\"controller.devfile.io\"],\"resources\":[\"devworkspaceroutings/status\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"get\",\"update\"],\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"watch\"],\"apiGroups\":[\"metrics.k8s.io\"],\"resources\":[\"pods\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"get\"],\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"servicemonitors\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingresses\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"deletecollection\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"oauth.openshift.io\"],\"resources\":[\"oauthclients\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"get\",\"list\",\"update\",\"watch\"],\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"clusterrolebindings\",\"clusterroles\",\"rolebindings\",\"roles\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\"],\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes/custom-host\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"workspace.devfile.io\"],\"resources\":[\"*\"]}"
								}
							]
						}
					],
					"certsLastUpdated": "2022-02-04T11:03:17Z",
					"certsRotateAt": "2024-02-03T11:03:17Z"
				}
			},
			{
				"kind": "ClusterServiceVersion",
				"apiVersion": "operators.coreos.com/v1alpha1",
				"metadata": {
					"name": "gitops-primer.v0.0.5",
					"namespace": "jmaury-dev",
					"uid": "455a8fa3-f238-4c9f-8ea3-9b1b70b3e983",
					"resourceVersion": "629791957",
					"generation": 1,
					"creationTimestamp": "2022-02-03T14:24:32Z",
					"labels": {
						"olm.api.3bcf7fad6bdf5e62": "provided",
						"olm.copiedFrom": "gitops-primer-system"
					},
					"annotations": {
						"alm-examples": "[\n  {\n    \"apiVersion\": \"primer.gitops.io/v1alpha1\",\n    \"kind\": \"Export\",\n    \"metadata\": {\n      \"name\": \"primer\"\n    },\n    \"spec\": {\n      \"method\": \"download\"\n    }\n  }\n]",
						"capabilities": "Basic Install",
						"categories": "OpenShift Optional",
						"containerImage": "quay.io/konveyor/gitops-primer:v0.0.5",
						"olm.operatorGroup": "gitops-primer",
						"olm.operatorNamespace": "gitops-primer-system",
						"operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.package\",\"value\":{\"packageName\":\"gitops-primer\",\"version\":\"0.0.5\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"primer.gitops.io\",\"kind\":\"Export\",\"version\":\"v1alpha1\"}}]}",
						"operatorframework.io/suggested-namespace": "gitops-primer-system",
						"operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
						"operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3"
					},
					"managedFields": [
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-02-03T14:24:32Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:metadata": {
									"f:annotations": {
										".": {},
										"f:alm-examples": {},
										"f:capabilities": {},
										"f:categories": {},
										"f:containerImage": {},
										"f:olm.operatorGroup": {},
										"f:olm.operatorNamespace": {},
										"f:operatorframework.io/properties": {},
										"f:operatorframework.io/suggested-namespace": {},
										"f:operators.operatorframework.io/builder": {},
										"f:operators.operatorframework.io/project_layout": {}
									},
									"f:labels": {
										".": {},
										"f:olm.api.3bcf7fad6bdf5e62": {},
										"f:olm.copiedFrom": {}
									}
								},
								"f:spec": {
									".": {},
									"f:apiservicedefinitions": {},
									"f:cleanup": {
										".": {},
										"f:enabled": {}
									},
									"f:customresourcedefinitions": {
										".": {},
										"f:owned": {}
									},
									"f:description": {},
									"f:displayName": {},
									"f:icon": {},
									"f:install": {
										".": {},
										"f:spec": {
											".": {},
											"f:clusterPermissions": {},
											"f:deployments": {},
											"f:permissions": {}
										},
										"f:strategy": {}
									},
									"f:installModes": {},
									"f:keywords": {},
									"f:links": {},
									"f:maturity": {},
									"f:provider": {
										".": {},
										"f:name": {}
									},
									"f:relatedImages": {},
									"f:replaces": {},
									"f:version": {},
									"f:webhookdefinitions": {}
								}
							}
						},
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-02-03T14:27:49Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:status": {
									".": {},
									"f:certsLastUpdated": {},
									"f:certsRotateAt": {},
									"f:cleanup": {},
									"f:conditions": {},
									"f:lastTransitionTime": {},
									"f:lastUpdateTime": {},
									"f:message": {},
									"f:phase": {},
									"f:reason": {},
									"f:requirementStatus": {}
								}
							},
							"subresource": "status"
						}
					]
				},
				"spec": {
					"install": {
						"strategy": "deployment",
						"spec": {
							"deployments": [
								{
									"name": "gitops-primer-controller-manager",
									"spec": {
										"replicas": 1,
										"selector": {
											"matchLabels": {
												"control-plane": "controller-manager"
											}
										},
										"template": {
											"metadata": {
												"creationTimestamp": null,
												"labels": {
													"control-plane": "controller-manager"
												}
											},
											"spec": {
												"containers": [
													{
														"name": "kube-rbac-proxy",
														"image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6d57bfd91fac9b68eb72d27226bc297472ceb136c996628b845ecc54a48b31cb",
														"args": [
															"--secure-listen-address=0.0.0.0:8443",
															"--upstream=http://127.0.0.1:8080/",
															"--logtostderr=true",
															"--v=10"
														],
														"ports": [
															{
																"name": "https",
																"containerPort": 8443,
																"protocol": "TCP"
															}
														],
														"resources": {}
													},
													{
														"name": "manager",
														"image": "quay.io/konveyor/gitops-primer:v0.0.5",
														"command": [
															"/manager"
														],
														"args": [
															"--health-probe-bind-address=:8081",
															"--metrics-bind-address=127.0.0.1:8080",
															"--leader-elect"
														],
														"env": [
															{
																"name": "DownloaderImageName",
																"value": "quay.io/konveyor/gitops-primer-downloader:v0.0.5"
															},
															{
																"name": "ExportImageName",
																"value": "quay.io/konveyor/gitops-primer-export:v0.0.5"
															},
															{
																"name": "OauthImageName",
																"value": "quay.io/openshift/origin-oauth-proxy:4.9"
															}
														],
														"resources": {
															"limits": {
																"cpu": "100m",
																"memory": "300Mi"
															},
															"requests": {
																"cpu": "100m",
																"memory": "20Mi"
															}
														},
														"livenessProbe": {
															"httpGet": {
																"path": "/healthz",
																"port": 8081
															},
															"initialDelaySeconds": 15,
															"periodSeconds": 20
														},
														"readinessProbe": {
															"httpGet": {
																"path": "/readyz",
																"port": 8081
															},
															"initialDelaySeconds": 5,
															"periodSeconds": 10
														},
														"imagePullPolicy": "IfNotPresent",
														"securityContext": {
															"allowPrivilegeEscalation": false
														}
													}
												],
												"terminationGracePeriodSeconds": 10,
												"serviceAccountName": "gitops-primer-controller-manager",
												"securityContext": {
													"runAsNonRoot": true
												}
											}
										},
										"strategy": {}
									}
								},
								{
									"name": "gitops-primer-mutating-webhook-deployment",
									"spec": {
										"replicas": 1,
										"selector": {
											"matchLabels": {
												"app": "export-webhook"
											}
										},
										"template": {
											"metadata": {
												"creationTimestamp": null,
												"labels": {
													"app": "export-webhook"
												}
											},
											"spec": {
												"volumes": [
													{
														"name": "export-tls-secret",
														"secret": {
															"secretName": "gitops-primer-mutating-webhook-deployment-service-cert"
														}
													}
												],
												"containers": [
													{
														"name": "export-webhook",
														"image": "quay.io/konveyor/gitops-primer-webhook:v0.0.5",
														"ports": [
															{
																"containerPort": 8000,
																"protocol": "TCP"
															}
														],
														"resources": {
															"limits": {
																"cpu": "500m",
																"memory": "128Mi"
															}
														},
														"volumeMounts": [
															{
																"name": "export-tls-secret",
																"readOnly": true,
																"mountPath": "/tls"
															}
														],
														"imagePullPolicy": "IfNotPresent"
													}
												]
											}
										},
										"strategy": {}
									}
								}
							],
							"permissions": [
								{
									"serviceAccountName": "gitops-primer-controller-manager",
									"rules": [
										{
											"verbs": [
												"get",
												"list",
												"watch",
												"create",
												"update",
												"patch",
												"delete"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"configmaps"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"watch",
												"create",
												"update",
												"patch",
												"delete"
											],
											"apiGroups": [
												"coordination.k8s.io"
											],
											"resources": [
												"leases"
											]
										},
										{
											"verbs": [
												"create",
												"patch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"events"
											]
										}
									]
								}
							],
							"clusterPermissions": [
								{
									"serviceAccountName": "gitops-primer-controller-manager",
									"rules": [
										{
											"verbs": [
												"impersonate"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"users"
											]
										},
										{
											"verbs": [
												"get",
												"list"
											],
											"apiGroups": [
												"*"
											],
											"resources": [
												"*"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"apps"
											],
											"resources": [
												"deployments"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"batch"
											],
											"resources": [
												"jobs"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"persistentvolumeclaims"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"secrets"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"serviceaccounts"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"services"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"networking.k8s.io"
											],
											"resources": [
												"networkpolicies"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"primer.gitops.io"
											],
											"resources": [
												"exports"
											]
										},
										{
											"verbs": [
												"update"
											],
											"apiGroups": [
												"primer.gitops.io"
											],
											"resources": [
												"exports/finalizers"
											]
										},
										{
											"verbs": [
												"get",
												"patch",
												"update"
											],
											"apiGroups": [
												"primer.gitops.io"
											],
											"resources": [
												"exports/status"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"rbac.authorization.k8s.io"
											],
											"resources": [
												"clusterrolebindings"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"rbac.authorization.k8s.io"
											],
											"resources": [
												"clusterroles"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"route.openshift.io"
											],
											"resources": [
												"routes"
											]
										},
										{
											"verbs": [
												"create"
											],
											"apiGroups": [
												"authentication.k8s.io"
											],
											"resources": [
												"tokenreviews"
											]
										},
										{
											"verbs": [
												"create"
											],
											"apiGroups": [
												"authorization.k8s.io"
											],
											"resources": [
												"subjectaccessreviews"
											]
										}
									]
								}
							]
						}
					},
					"version": "0.0.5",
					"maturity": "alpha",
					"customresourcedefinitions": {
						"owned": [
							{
								"name": "exports.primer.gitops.io",
								"version": "v1alpha1",
								"kind": "Export",
								"displayName": "Export",
								"description": "Export is the Schema for the exports API"
							}
						]
					},
					"apiservicedefinitions": {},
					"webhookdefinitions": [
						{
							"generateName": "mexport.kb.io",
							"type": "MutatingAdmissionWebhook",
							"deploymentName": "gitops-primer-mutating-webhook-deployment",
							"containerPort": 443,
							"targetPort": 8000,
							"rules": [
								{
									"operations": [
										"CREATE",
										"UPDATE"
									],
									"apiGroups": [
										"primer.gitops.io"
									],
									"apiVersions": [
										"v1alpha1"
									],
									"resources": [
										"exports"
									]
								}
							],
							"failurePolicy": "Fail",
							"sideEffects": "None",
							"admissionReviewVersions": [
								"v1",
								"v1beta1"
							],
							"webhookPath": "/mutate"
						}
					],
					"displayName": "gitops-primer",
					"description": "Export and normalize Kubernetes YAML files for GitOps",
					"keywords": [
						"gitops",
						"operator"
					],
					"provider": {
						"name": "Konveyor"
					},
					"links": [
						{
							"name": "Gitops Primer",
							"url": "https://github.com/konveyor/gitops-primer"
						}
					],
					"icon": [
						{
							"base64data": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAIAAAAiOjnJAAATfUlEQVR4nOzdeVgT194H8EkCBEjYA+JVEBRQtKKAXhGCAioutaAttd6ub9Xa7RHfWpfaXrWbbRWXR3tRKy16sbe12l7bioCK7FJxqQKKbEILyE5kCWEJSd5H8z5xcmYyGZBDGvl9Hv+AwyQ5HL6Zc+acMcfEf9pHBACDjWvoCoDHEwQLYAHBAlhAsAAWECyABQQLYAHBAlhAsAAWECyABQQLYAHBAlhAsAAWECyABQQLYAHBAlhAsAAWECyABQQLYAHBAlhAsAAWECyABQQLYAHBAlhAsAAWECyABQQLYAHBAlhAsAAWECyABQQLYAHBAlhAsAAWECyABQQLYAHBAlhAsAAWECyABQQLYAHBAlhAsAAWECyABQQLYAHBAlhAsAAWECyABQQLYAHBAlhAsAAWECyABQQLYAHBAlhAsAAWECyABQQLYAHBAlhAsAAWJoauwNBxspePcuwx1KvLunmlVeYqFcdQFRhiwyhYy8ObBBZKA1bgxDnHO3f5BqzAUBpGXSHfTGXYCpiZKQxbgaE0jIIFhhIEC2ABwQJYDKPBe78UVzT8frNKqWIalo1wsA4L9OJx4c1JA4JFo6W186N9Z+R9+sfaXT29EXN8hqRSRgbebTQ6OrvZpIogCEmrDH91jBKcsWi4jXKIWuiX+/sdhYJp3mu0s13EXDhd0YNg0Vu+2H/5Yn9D18KIQVcIsIBgASwgWAALCBbAAoIFsIBgASwgWAALCBbAAoIFsIBgASwgWAALCBbAAoIFsIBgASwgWAALCBbAAoIFsIBgASwgWAALCBbAAoIFsIBgASwgWAALCBbAAoIFsIBgASwgWAALCBbAAoIFsIBgASwgWAALCNbQGS6bUjwwjD547XaFhadrt6FeXdbNq20aLttSDK9gJebYG7oKwwh0hQAL4zhjWVkqeDzD7ISjUHA6ZDxyCd9MacE32GZPHTKeQmEEozUjCFbA5I7QaW0GrEDOdevsG9bqrx1s+lZGNhgq5QRBNLeaxp0aYahXZ88IukJH2z4DV8BOrvnazqrPgKkiCEJkK+cYwQnLGIIFjBEEC2ABwQJYGMHgvV9UKqKiuqlT1stwjKWF2ThXx6EZqTRLpLWNTFcePB53rIuDhbnZUNRmCD1uwfr6xMWzWUV6Dwud6fX2i7NxV6ag+O72AynMG/LcH4/bCXa//4zA8rGal3/cusJrhX+yOexqYRX+uhA3imr0pur+We1eZ2VNyxDUZyg9bsGaK/Zm08eFi72HoDKB/mMtLfT3cW6jHTzdnIagPkPpcesKoxb4hou9u7rlDMeY801srCyGoDIeYxzjPnuhtb2L4Rgul+NgK+ByjWFuqj8et2ARBGEtNLcWmhu6Fv+Pb2YyQmRl6FoYwOPWFYK/CAgWwAKCBbCAYAEsIFgACwgWwAKCBbCAYAEsIFgACwgWwAKCBbCAYAEsIFgACwgWwAKCBbCAYAEsIFgACwgWwAKCBbCAYAEsIFgACwgWwAKCBbCAYAEsIFgACwgWwAKCBbCAYAEsIFgACwgWwAKCBbAwgmC1dfIMW4FW6cMKdHTyVIbcP4Bolxq4Aixx/Kd9ZOg66MHhqJxs+zgG2g9CqeQ03zNVkl7cRthnYW6wvXRaO0y6e4zgdGAEn+inUnEa7pkauhYPtUlN2qSGrsRfnhFkHxgjCBbAAoIFsDDYGIvH406d6urm5iASWQmFfElLZ2NTe2Hh3aqqx+2j9PGhbcObN+/++afh29AAwXJ3F73yctCsWeOtrWk+NLuisiklufD743ldXUyf1T7MubmJXnklaPYsL2trmg+sr6xsTk4pPH48T8a4pxBWbKcbrKzMP3h/MblEqVS9/8FPyGFPPukTLPZCCv+dcPH27TqCIIRCfnT0vMiIqTyeni64uVkaG3vhdGI+9Udvvx3mMvrhtuGxB9KqqyXUw0aMsH7nf8PJJR3S7u3bEydNGvXSizORgz/59HRnZw/1ScLDJ4WFau1h0dTcsXv32SlTXP6xfAbzr0C2MyZ5wfwnfHxcyIWtrbIvdiRRD54+3f2Zp/2Rwv1fptbWthIEIRDw10bPjYz01duGLS3S2Ni0X0/fQMo5HOLzz6IYHtjdLa+rb8vOLi0qqtX3m+nE9oxlZmYyd+5EcklfHzqX4+Pj8s8PnjI11ZrPTEoqUKdq9Gi7PXuWj3V3ZPNyIpFw27ZInykuO3cmy+UK8o/+Pt190qRRmm89PJxefuVr6ltTIOAjFW5pkW6//25uCgz0sLTU2onkfGrRhQs0Wzste3b61Kmu5JKEhFyCIJydbZAnZxZ7IO1WUe26dfOR8qTkwoKCaqRwxavi6dPdySX5+dXqVI0aZbd3z/KxY1m1oYODcOvWCB8flx07k8htyOFw2FT+tVWzrl+v+vzzMxWVTWxeDjFog3eRSLjjiygkVcXFdds/SyQIwtXF/uiRlSxTpbF0id/OHc8ybwfi5ib68MNI9nvEyWS9GZklSGGw2JN6pLW1xeTJo5HCpOQCtq+kLT+/Oi+vAimMipqGlIx1d5w2zR0pPHAwnSAIF3UbskuVxpIlvrtilg1sSxVfX9f4+BW+vq4DeOzgBMvMzGT3ruccHbX29mhpka5794eenj6BgL9r13O2tpYDeObgYK81a+YyHxMW6v388wHsnzOR0sMGBXlSmz4wcBzS3RQX15WXN7J/IURsbBqyGjNv7kR7ewG5ZNmy6cibJC+v4tq1PwQC/u5dz9nZDaQNg4I810bPG1idhUL+rpjnRo606e8DB2fwvmnjQnL3RBCEXK54b/OPjY3t6p/Svs9aW2WZmSXl5Y2yrl4He4Gf35hp09xNTNCsv/TizLy8ikuX7jBUYG30vDt3mpiP0bh6tbK+vs3Z+WFj2dlZPjFpVEFhDfkwcRA6WExKGuDpSq3odm1ubllQ0MOzo6kpLyJi6tGjF9XfWlqaLVw4GXnUoa8yCILYsH6BrjbMyiotK2uQdfXa2wn8/enb8IUXAvLyKnJ/Kx9AtW1sLKKj523e/GO/HjUIwVq2bHpkpC9SuGNn0vXrVQRBeHk5L1iANpZCoYz7Ouvbb3/rJm3TFX8kx9XFftOmRTNmjEWOj14z5/LlCqVS53Ihl8vZ/unTL70UV1vXqrfCSqUqKblwxaticqE42IscLC6XM3PmOKTOZ8/d0vWczc3Sy5fRnk5Dc2Vw8FBGYKAn+ZwU9cy0hIRc9a+2JNJXINDaDjMru7SwsMbLc8SiRT7U3yIuLvOYdhseOXq/DTduXBgQMA45fs2aOZfy7uhqw8TE/N4H4zATE+7MgHFI5zMnzHvkSJu6OqatYhGPGiwfHxfk4osgiO+P5/3883X116tWBSO9jEKhXL/+RHZOKfXZqqola6L/s2VLxFOLp5DLvbycZ88an55RzFATGxuLmJhlK1bG9/T06a124ukbr/6PmPwHnhXsdeBAmubbKVNcbGy0ruRzc8tbWnSuEVZUNG7d9rPe1y0ursvKKpk9e7ymxNnZJijQMzunlMMhnnlGa8ilUhFfPThdrVxJ04YbNpzIyqZvw+i131Hb0NNzREjIhLS027QV27P3bHt7t/pre3vBiR/eJA9duFxOYKDHTz9d0/sLPnwI+0OpaAfs169X7dt3Xv21ublpUCA6Lo49kEabKjWlUvXZZ4nFxXVIedgc/VtXjh/v/P7mxWxqXlUtuXlTq+Pz8HD620hbzbfiILTaZx6tH9Q4eCgdOW1ERfkTBDEzwGPMGAdyeeqFopKSej7fJIhSmYOH0mlTpaZuQ/XFONmcMFbbf0oknb9RBhWjSVM8bAw8WBwOQR2w19a2bth4QjMTERAwjs/XOik2NLQfP57H/MxyueJfsWlIoTjIU+/MjXoibekSPzb1TzyDDuHFpGtDsfZ1olTak637D/lgns/C39+N+m/8eGfkyPLyxvR0rdNGYKCni4v9smXTyYVKperw4funqxkzxpmba93c0djU8d13l5h/O7lc8eW/LiCFQUGe1OEXLRWlx6SWMBt4V8jjcZEBu0zW++76H1pbZZqSse4i5FEX0m739ir0PvnlyxUSSSf5isnKytzJyYpNN79p06KKyqaOjm7mw86evbnunfnk3AcHe504eUXdPY0bp7WX7rlzN5l7WG/vkV8deplaXlBQvWLlEaTwq8OZoaHemt6NwyHefissMNCDfExKSmFlZfP9NhyLtmHaBVZtePVqZUuL1MFBqCkRCvlOTtb19XraUCjkU4doDQ+uw9gbzCWdB1fjDeQSkSO6uSi1j6OlVKpKSuqR4bOjiFWwTEy4O754Vu+IRyrtycounUeaKvT3d7O0NJPJeqnTWoPVD6pVVDSlphaFh0/SlFAnnw/HZaq/dqRs0Fpc0o82RPLq6GhFG6x178xXD945nPvtgEyCqN/qbF5UYzDvbvDzG4MMP62s0NVAqZRm5YRWhxQ95VjRrYsRBNFO2XRZJBK+v/lJvS+BTGiZmfFm/H0stR+srW2lzo8/okOH0hk2uP/19I2amnvqrx+pDSmnbWsdm2EvXjzl6aV+Ty/1W7rEz9UFHU4VFNaoT5/sDfJtM+veCSd3IvckncgB7Kf4HChvGuqzqe3afVa94kE2erSd3pe4dOlOc7PWhV5wsBefb+Lv70YuTEzMH/TbzKuqJWfP3qT9kVyuOHokR/OthNqGrKeaqSceyT36NmSgUChjYpL7+6hBDpaZmclHH0ZqrhORPxtBEMjSm+7n4Xl7/w0p1NXNt7V1rd9woptx53paCoUyOaWQXCIWewYEaA2WVSpWyzgSSWda+m3qv6vX/tT1kMNxmbQnrZ9+ukaejWumzHGwb0NkEHx/4N/PoZJcrti67WfqBaZejzrGSkouXDD/CfIsy4QJI1evnh374LLuFmV5PDRkwt6956idF2J++BPIOnFjY7tEonMaqbS0fvv2xE8+Wdrf+icm5pNvdrC3F6xcGUw+ID+/StMrMSgvb9i48WS/Xrqm5t6ZMwUREVPJhT09fQkJF8klRbfQNgwJGW9ra0m+SKI1b94ktA2bOpqbOzjsF1YfLDboOrMye6Qz1nffXdq69dR/KJe+r7wcpO5NbtyoamvTypBQyI/Wt/ZnZ2f55puhSGFGRglzf5ScUvjtt7/17xcgiDt3GpHriYnaZ8ozZwZz2I7IySlDSvLzqxqbOsglN/Kr7t3TypBAoL8NbW0t334rDCnMzNTZhpmZJampRVWUG5AWLpxMnt5jb+DB6utT7tl7jiCIgwfTkZEdl8vZti1CKOQrFMrz59FlkCVLfFetmqXraW1sLHbves7JyRopT2Hxvtn/ZWpubr+Xw6gTWhq9vX2pdLfT4ENdclEqVedT0TaMiJi6+rXZuk49utqQ4dzz0ce/vLf5x/c2nUQqYGZmsnatnhDTGoQxVm9v35atp5Dbs/420nbjhoUEQcTHZ1NHP2+8HrKXcm8Wl8sJnzfp22OrkRvi1O9sNtdlSqXqn1v+S3vfH4Pk5ELkli+NjMwSvfNhapMnu5w88ZaufwsWPNGvKiGOHMmh3k+7evXsvXv+gaxMc7mceXMnHjv22pQpaBvm5pbfuFHF/EKlZQ2//oreGDhnzkQ/vzH9rfPgzGMVF9clHMtFlnUXLfLJuVh27tythGO5q1+bjTwkONgrONirvLyxtKxB1tnjIBL6TnWlvbWmt1ex/8tUljVpb+9+Z93xfx9diazmMmhr67p4sSwkZAL1R+z7QQsLU3fKbLAG7Q3E7DU1dSQkXHz99RCkXCz2FIs9B7cNDxxMmzt3olCo1Xrr353/4ktxDDcBUA3aVWFcXGZZWQNSuPm9J52dbb7+Oos6mFDz8HBatHByVNS00JAJum7Y2hmTVFHRj5sY//ijeduHv/RrgiCRLkASSSfL+3CGwDfx2brWlNi0YUxMMss7ySSSzvgj2Uihl5czcpGh16AFSy5XbPvwF6RDtLIy//jjJQRBbNl6qrS0fgBPGx+frblRgr2MjOJvvslif3xOTikyQFZ3kQxzmENMqVRt2XqqpGQgbXjkaM6pn39nf/z33+dRR/FvvRmGnMaYDeY8VmlpPTXsfr5jXng+oKOje+WqI2np9Pds0JLLFZ98elp9V+4AfHU4g/Y2dlp9fcpz59CB7eAu4zw6qbTn1RXxKSn9uPhXKJQ7Y5JjKSv6zORyxf79aL9pby9YsSKY/ZOwHWPJZD3Iajntcnd8fLZM1ovchqBQKLlcTleXfNOmk5GRvqtXhzhR1hARl69U7tt3nvYNeuLkFVG61o1Zf/xBs9qgUhEff3L6VlGtZtqmq4vp/0J9fzyPfJ3f0yNnOMWWltZT7x1gUFBQQ1tefqcReZ7au0xzZg+uk/57+UrFG2+E6m3DK1cq9+1PpS7OqlQqauW7u7WW2DMyinfsSLLUHqfKe/u4XA7LkZYBPm3G3Nw04qmpoaET/PzGIBFsa+vKzi5NTimk/r8DQGZubvrU4imhYd7+lDZsb+/Kzi5LTik07ADRkB9jZGVl7jLaXiQSCq3MW1qkTY0df1a1/HWGNUZBKOS7ujj8BdvQCD4fCxgj+FAQgAUEC2ABwQJYQLAAFhAsgAUEC2ABwQJYQLAAFhAsgAUEC2ABwQJYQLAAFhAsgAUEC2ABwQJYQLAAFhAsgAUEC2ABwQJYQLAAFv8XAAD//xeIBgIYa1MwAAAAAElFTkSuQmCC",
							"mediatype": "image/png"
						}
					],
					"installModes": [
						{
							"type": "OwnNamespace",
							"supported": false
						},
						{
							"type": "SingleNamespace",
							"supported": false
						},
						{
							"type": "MultiNamespace",
							"supported": false
						},
						{
							"type": "AllNamespaces",
							"supported": true
						}
					],
					"replaces": "gitops-primer.v0.0.4"
				},
				"status": {
					"phase": "Succeeded",
					"message": "The operator is running in gitops-primer-system but is managing this namespace",
					"reason": "Copied",
					"lastUpdateTime": "2022-02-07T14:12:14Z",
					"lastTransitionTime": "2022-02-07T14:12:14Z",
					"conditions": [
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-03T14:19:54Z",
							"lastTransitionTime": "2022-02-03T14:19:54Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-03T14:19:55Z",
							"lastTransitionTime": "2022-02-03T14:19:55Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment gitops-primer-controller-manager to become ready: deployment \"gitops-primer-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-03T14:19:56Z",
							"lastTransitionTime": "2022-02-03T14:19:55Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-03T14:20:35Z",
							"lastTransitionTime": "2022-02-03T14:20:35Z"
						},
						{
							"phase": "Failed",
							"message": "Webhooks not installed",
							"reason": "ComponentUnhealthy",
							"lastUpdateTime": "2022-02-04T01:20:49Z",
							"lastTransitionTime": "2022-02-04T01:20:49Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T01:25:15Z",
							"lastTransitionTime": "2022-02-04T01:25:15Z"
						},
						{
							"phase": "Failed",
							"message": "requirements no longer met",
							"reason": "RequirementsNotMet",
							"lastUpdateTime": "2022-02-04T02:43:40Z",
							"lastTransitionTime": "2022-02-04T02:43:40Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T02:48:00Z",
							"lastTransitionTime": "2022-02-04T02:48:00Z"
						},
						{
							"phase": "Failed",
							"message": "Webhooks not installed",
							"reason": "ComponentUnhealthy",
							"lastUpdateTime": "2022-02-04T08:42:36Z",
							"lastTransitionTime": "2022-02-04T08:42:36Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T08:44:14Z",
							"lastTransitionTime": "2022-02-04T08:44:14Z"
						},
						{
							"phase": "Pending",
							"message": "calculated deployment install is bad",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-04T10:31:41Z",
							"lastTransitionTime": "2022-02-04T10:31:41Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:33:28Z",
							"lastTransitionTime": "2022-02-04T10:33:28Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:33:32Z",
							"lastTransitionTime": "2022-02-04T10:33:32Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:33:36Z",
							"lastTransitionTime": "2022-02-04T10:33:36Z"
						},
						{
							"phase": "Failed",
							"message": "installing: waiting for deployment gitops-primer-controller-manager to become ready: deployment \"gitops-primer-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "ComponentUnhealthy",
							"lastUpdateTime": "2022-02-07T14:11:44Z",
							"lastTransitionTime": "2022-02-07T14:11:44Z"
						},
						{
							"phase": "Pending",
							"message": "installing: waiting for deployment gitops-primer-controller-manager to become ready: deployment \"gitops-primer-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-07T14:11:46Z",
							"lastTransitionTime": "2022-02-07T14:11:46Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-07T14:11:47Z",
							"lastTransitionTime": "2022-02-07T14:11:47Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-07T14:11:48Z",
							"lastTransitionTime": "2022-02-07T14:11:48Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment gitops-primer-controller-manager to become ready: deployment \"gitops-primer-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-07T14:11:49Z",
							"lastTransitionTime": "2022-02-07T14:11:48Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-07T14:12:14Z",
							"lastTransitionTime": "2022-02-07T14:12:14Z"
						}
					],
					"requirementStatus": [
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "exports.primer.gitops.io",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "57cf47d5-ec7d-4c83-b488-bac9b88024fa"
						},
						{
							"group": "",
							"version": "v1",
							"kind": "ServiceAccount",
							"name": "gitops-primer-controller-manager",
							"status": "Present",
							"message": "",
							"dependents": [
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"],\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"],\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"create\",\"patch\"],\"apiGroups\":[\"\"],\"resources\":[\"events\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"impersonate\"],\"apiGroups\":[\"\"],\"resources\":[\"users\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\"],\"apiGroups\":[\"*\"],\"resources\":[\"*\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"\"],\"resources\":[\"persistentvolumeclaims\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"\"],\"resources\":[\"secrets\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"\"],\"resources\":[\"serviceaccounts\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"\"],\"resources\":[\"services\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"networkpolicies\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"primer.gitops.io\"],\"resources\":[\"exports\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"update\"],\"apiGroups\":[\"primer.gitops.io\"],\"resources\":[\"exports/finalizers\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"patch\",\"update\"],\"apiGroups\":[\"primer.gitops.io\"],\"resources\":[\"exports/status\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"clusterrolebindings\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"clusterroles\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\"],\"apiGroups\":[\"authentication.k8s.io\"],\"resources\":[\"tokenreviews\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\"],\"apiGroups\":[\"authorization.k8s.io\"],\"resources\":[\"subjectaccessreviews\"]}"
								}
							]
						}
					],
					"certsLastUpdated": "2022-02-07T14:11:48Z",
					"certsRotateAt": "2024-02-06T14:11:48Z"
				}
			},
			{
				"kind": "ClusterServiceVersion",
				"apiVersion": "operators.coreos.com/v1alpha1",
				"metadata": {
					"name": "rhoas-operator.0.9.6",
					"namespace": "jmaury-dev",
					"uid": "bc3f2d4a-9149-4e8f-8bea-957755298327",
					"resourceVersion": "589848897",
					"generation": 1,
					"creationTimestamp": "2022-01-27T19:39:41Z",
					"labels": {
						"olm.api.33c804b44878c7a1": "provided",
						"olm.api.3ff045ab7234da9d": "provided",
						"olm.api.51777442f25956e7": "provided",
						"olm.api.9bef4612eff0600f": "provided",
						"olm.copiedFrom": "rhoas-operator"
					},
					"annotations": {
						"alm-examples": "[\n  {\n    \"apiVersion\": \"rhoas.redhat.com/v1alpha1\",\n    \"kind\": \"ServiceRegistryConnection\",\n    \"metadata\": {\n      \"name\": \"example\",\n      \"namespace\": \"example-namespace\",\n      \"labels\": {\n        \"app.kubernetes.io/component\": \"external-service\",\n        \"app.kubernetes.io/managed-by\": \"rhoas\"\n      }\n    },\n    \"spec\": {\n      \"accessTokenSecretName\": \"rh-managed-services-api-accesstoken\",\n      \"serviceRegistryId\": \"exampleId\",\n      \"credentials\": {\n        \"serviceAccountSecretName\": \"service-account-secret\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"rhoas.redhat.com/v1alpha1\",\n    \"kind\": \"CloudServiceAccountRequest\",\n    \"metadata\": {\n      \"name\": \"example\",\n      \"namespace\": \"example-namespace\"\n    },\n    \"spec\": {\n      \"serviceAccountName\": \"rhoas-sa\",\n      \"serviceAccountDescription\": \"Operator created service account\",\n      \"serviceAccountSecretName\": \"service-account-credentials\",\n      \"accessTokenSecretName\": \"rh-managed-services-api-accesstoken\"\n    }\n  },\n  {\n    \"apiVersion\": \"rhoas.redhat.com/v1alpha1\",\n    \"kind\": \"CloudServicesRequest\",\n    \"metadata\": {\n      \"name\": \"example\",\n      \"namespace\": \"example-namespace\",\n      \"labels\": {\n        \"app.kubernetes.io/component\": \"external-service\",\n        \"app.kubernetes.io/managed-by\": \"rhoas\"\n      }\n    },\n    \"spec\": {\n      \"accessTokenSecretName\": \"rh-cloud-services-api-accesstoken\"\n    }\n  }\n]",
						"capabilities": "Seamless Upgrades",
						"categories": "Developer Tools, OpenShift Optional, Integration \u0026 Delivery",
						"certified": "false",
						"containerImage": "quay.io/rhoas/service-operator:0.9.6",
						"createdAt": "2022-01-27 17:41:01",
						"description": "Red Hat OpenShift Application Services Operator",
						"olm.operatorGroup": "rhoas-group",
						"olm.operatorNamespace": "rhoas-operator",
						"olm.skipRange": "\u003e=0.0.1 \u003c0.9.6",
						"operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.package\",\"value\":{\"packageName\":\"rhoas-operator\",\"version\":\"0.9.6\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"rhoas.redhat.com\",\"kind\":\"CloudServiceAccountRequest\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"rhoas.redhat.com\",\"kind\":\"CloudServicesRequest\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"rhoas.redhat.com\",\"kind\":\"KafkaConnection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"rhoas.redhat.com\",\"kind\":\"ServiceRegistryConnection\",\"version\":\"v1alpha1\"}}]}",
						"repository": "https://github.com/redhat-developer/app-services-operator"
					},
					"managedFields": [
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-01-27T19:39:41Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:metadata": {
									"f:annotations": {
										".": {},
										"f:alm-examples": {},
										"f:capabilities": {},
										"f:categories": {},
										"f:certified": {},
										"f:containerImage": {},
										"f:createdAt": {},
										"f:description": {},
										"f:olm.operatorGroup": {},
										"f:olm.operatorNamespace": {},
										"f:olm.skipRange": {},
										"f:operatorframework.io/properties": {},
										"f:repository": {}
									},
									"f:labels": {
										".": {},
										"f:olm.api.33c804b44878c7a1": {},
										"f:olm.api.3ff045ab7234da9d": {},
										"f:olm.api.51777442f25956e7": {},
										"f:olm.api.9bef4612eff0600f": {},
										"f:olm.copiedFrom": {}
									}
								},
								"f:spec": {
									".": {},
									"f:apiservicedefinitions": {},
									"f:cleanup": {
										".": {},
										"f:enabled": {}
									},
									"f:customresourcedefinitions": {
										".": {},
										"f:owned": {}
									},
									"f:description": {},
									"f:displayName": {},
									"f:icon": {},
									"f:install": {
										".": {},
										"f:spec": {
											".": {},
											"f:deployments": {},
											"f:permissions": {}
										},
										"f:strategy": {}
									},
									"f:installModes": {},
									"f:keywords": {},
									"f:links": {},
									"f:maintainers": {},
									"f:maturity": {},
									"f:provider": {
										".": {},
										"f:name": {},
										"f:url": {}
									},
									"f:replaces": {},
									"f:version": {}
								}
							}
						},
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-01-27T19:39:41Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:status": {
									".": {},
									"f:cleanup": {},
									"f:conditions": {},
									"f:lastTransitionTime": {},
									"f:lastUpdateTime": {},
									"f:message": {},
									"f:phase": {},
									"f:reason": {},
									"f:requirementStatus": {}
								}
							},
							"subresource": "status"
						}
					]
				},
				"spec": {
					"install": {
						"strategy": "deployment",
						"spec": {
							"deployments": [
								{
									"name": "rhoas-operator",
									"spec": {
										"replicas": 1,
										"selector": {
											"matchLabels": {
												"name": "rhoas-operator"
											}
										},
										"template": {
											"metadata": {
												"creationTimestamp": null,
												"labels": {
													"name": "rhoas-operator"
												}
											},
											"spec": {
												"containers": [
													{
														"name": "rhoas-operator",
														"image": "quay.io/rhoas/service-operator:0.9.6",
														"env": [
															{
																"name": "CLOUD_SERVICES_API",
																"value": "https://api.openshift.com"
															}
														],
														"resources": {
															"limits": {
																"cpu": "60m",
																"memory": "512Mi"
															},
															"requests": {
																"cpu": "30m",
																"memory": "128Mi"
															}
														},
														"imagePullPolicy": "Always"
													}
												],
												"serviceAccountName": "rhoas-operator"
											}
										},
										"strategy": {}
									}
								}
							],
							"permissions": [
								{
									"serviceAccountName": "rhoas-operator",
									"rules": [
										{
											"verbs": [
												"get",
												"list",
												"watch"
											],
											"apiGroups": [
												"apiextensions.k8s.io"
											],
											"resources": [
												"customresourcedefinitions"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"secrets"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"rhoas.redhat.com"
											],
											"resources": [
												"kafkaconnections",
												"kafkaconnections/status",
												"kafkaconnections/finalizers",
												"serviceregistryconnections",
												"serviceregistryconnections/status",
												"serviceregistryconnections/finalizers",
												"cloudservicesrequests",
												"cloudservicesrequests/status",
												"cloudservicesrequests/finalizers",
												"cloudserviceaccountrequests",
												"cloudserviceaccountrequests/status",
												"cloudserviceaccountrequests/finalizers"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"console.openshift.io"
											],
											"resources": [
												"consolequickstarts",
												"consolequickstarts/status",
												"consolequickstarts/finalizers"
											]
										}
									]
								}
							]
						}
					},
					"version": "0.9.6",
					"maturity": "beta",
					"customresourcedefinitions": {
						"owned": [
							{
								"name": "cloudserviceaccountrequests.rhoas.redhat.com",
								"version": "v1alpha1",
								"kind": "CloudServiceAccountRequest",
								"displayName": "Cloud Service Account Request",
								"description": "Creates RHOAS Service Accounts"
							},
							{
								"name": "cloudservicesrequests.rhoas.redhat.com",
								"version": "v1alpha1",
								"kind": "CloudServicesRequest",
								"displayName": "Cloud Services Request",
								"description": "Cloud Services Request"
							},
							{
								"name": "kafkaconnections.rhoas.redhat.com",
								"version": "v1alpha1",
								"kind": "KafkaConnection",
								"displayName": "Kafka Connection",
								"description": "Binds Kafka Instance"
							},
							{
								"name": "serviceregistryconnections.rhoas.redhat.com",
								"version": "v1alpha1",
								"kind": "ServiceRegistryConnection",
								"displayName": "Service Registry Connection",
								"description": "Binds Service Registry Instance"
							}
						]
					},
					"apiservicedefinitions": {},
					"displayName": "OpenShift Application Services (RHOAS)",
					"description": "**OpenShift Application Services Operator (RHOAS-Operator)** creates instances of Red Hat OpenShift Application Services in your cluster. Operator is currently available as limited Beta and it cannot be consumed without invitation.\n\nRed Hat OpenShift Application Services, when added to Red Hat OpenShift Dedicated,  provide a streamlined developer experience for building, deploying,  and scaling cloud-native applications in open hybrid-cloud environments.   \n\nRHOAS-Operator enables developers to connect with their Application Services directly in their own cluster by using [RHOAS cli](https://github.com/redhat-developer/app-services-cli) and OpenShift Console UI.  \n\nRHOAS-Operator requires developers to connect with their Red Hat OpenShift Streams for Apache Kafka (RHOSAK) instances.  ",
					"keywords": [
						"cloud",
						"rhoas",
						"kafka",
						"serviceregistry",
						"app-services",
						"application",
						"services"
					],
					"maintainers": [
						{
							"name": "Red Hat",
							"email": "rhosak-eval-support@redhat.com"
						}
					],
					"provider": {
						"name": "Red Hat Inc.",
						"url": "https://github.com/redhat-developer/app-services-operator/"
					},
					"links": [
						{
							"name": "RHOAS Operator Documentation",
							"url": "https://github.com/redhat-developer/app-services-operator/tree/main/docs"
						}
					],
					"icon": [
						{
							"base64data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDI1LjIuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCAzNyAzNyIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgMzcgMzc7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4KPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCS5zdDB7ZmlsbDojRUUwMDAwO30KCS5zdDF7ZmlsbDojRkZGRkZGO30KPC9zdHlsZT4KPGc+Cgk8cGF0aCBkPSJNMjcuNSwwLjVoLTE4Yy00Ljk3LDAtOSw0LjAzLTksOXYxOGMwLDQuOTcsNC4wMyw5LDksOWgxOGM0Ljk3LDAsOS00LjAzLDktOXYtMThDMzYuNSw0LjUzLDMyLjQ3LDAuNSwyNy41LDAuNUwyNy41LDAuNXoiCgkJLz4KCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik0yNS41MSwyMi4xN0gxMi42NGMtMi45OCwwLTUuNDEtMi40Mi01LjQxLTUuNDFjMC0zLjE1LDIuNjctNS43LDUuOTItNS4zOGMxLjE4LTIuMjcsMy41Mi0zLjcsNi4xLTMuNwoJCWMzLjc1LDAsNi44MSwzLjAyLDYuODgsNi43NmMxLjcxLDAuNDQsMi45NCwxLjk4LDIuOTQsMy43OWMwLDEuOTYtMS40NSwzLjYtMy4zMywzLjg5QzI1LjY4LDIyLjE1LDI1LjYsMjIuMTcsMjUuNTEsMjIuMTd6CgkJIE0xMi42NCwxMi42MWMtMi4yOSwwLTQuMTYsMS44Ni00LjE2LDQuMTVzMS44Niw0LjE2LDQuMTYsNC4xNmgxMi41YzEuNDgsMCwyLjY4LTEuMiwyLjY4LTIuNjhjMC0xLjM3LTEuMDMtMi41MS0yLjQtMi42NQoJCWMtMC4zMy0wLjA0LTAuNTgtMC4zMi0wLjU2LTAuNjZsMC4wMS0wLjEyYzAuMDEtMC4wOCwwLjAxLTAuMTcsMC4wMS0wLjI1YzAtMy4xLTIuNTItNS42My01LjYzLTUuNjNjLTIuMjQsMC00LjI3LDEuMzMtNS4xNiwzLjM5CgkJYy0wLjEyLDAuMjctMC40LDAuNDItMC42OSwwLjM3QzEzLjE1LDEyLjYzLDEyLjg5LDEyLjYxLDEyLjY0LDEyLjYxeiIvPgoJPHBhdGggY2xhc3M9InN0MCIgZD0iTTI1LjUsMjMuODdjLTEuMjMsMC0yLjI2LDAuODUtMi41NCwyaC0xLjkyYy0wLjIzLTAuOTQtMC45Ny0xLjY4LTEuOTItMS45MnYtNy45NWwwLjkzLDAuOTMKCQljMC4xMiwwLjEyLDAuMjgsMC4xOCwwLjQ0LDAuMThzMC4zMi0wLjA2LDAuNDQtMC4xOGMwLjI0LTAuMjQsMC4yNC0wLjY0LDAtMC44OGwtMi0yYy0wLjI0LTAuMjQtMC42NC0wLjI0LTAuODgsMGwtMiwyCgkJYy0wLjI0LDAuMjQtMC4yNCwwLjY0LDAsMC44OGMwLjI0LDAuMjQsMC42NCwwLjI0LDAuODgsMGwwLjkzLTAuOTN2Ny45NWMtMC45NCwwLjIzLTEuNjgsMC45Ny0xLjkyLDEuOTJoLTEuOTIKCQljLTAuMjgtMS4xNS0xLjMxLTItMi41NC0yYy0xLjQ1LDAtMi42MiwxLjE4LTIuNjIsMi42MnMxLjE4LDIuNjIsMi42MiwyLjYyYzEuMjMsMCwyLjI2LTAuODUsMi41NC0yaDEuOTJjMC4yOCwxLjE1LDEuMzEsMiwyLjU0LDIKCQlzMi4yNi0wLjg1LDIuNTQtMmgxLjkyYzAuMjgsMS4xNSwxLjMxLDIsMi41NCwyYzEuNDUsMCwyLjYyLTEuMTgsMi42Mi0yLjYyUzI2Ljk1LDIzLjg3LDI1LjUsMjMuODd6IE0xMS41LDI3Ljg3CgkJYy0wLjc2LDAtMS4zOC0wLjYyLTEuMzgtMS4zOHMwLjYyLTEuMzgsMS4zOC0xLjM4czEuMzgsMC42MiwxLjM4LDEuMzhTMTIuMjYsMjcuODcsMTEuNSwyNy44N3ogTTE4LjUsMjcuODcKCQljLTAuNzYsMC0xLjM4LTAuNjItMS4zOC0xLjM4czAuNjItMS4zOCwxLjM4LTEuMzhzMS4zOCwwLjYyLDEuMzgsMS4zOFMxOS4yNiwyNy44NywxOC41LDI3Ljg3eiBNMjUuNSwyNy44NwoJCWMtMC43NiwwLTEuMzgtMC42Mi0xLjM4LTEuMzhzMC42Mi0xLjM4LDEuMzgtMS4zOHMxLjM4LDAuNjIsMS4zOCwxLjM4UzI2LjI2LDI3Ljg3LDI1LjUsMjcuODd6Ii8+CjwvZz4KPC9zdmc+Cg==",
							"mediatype": "image/svg+xml"
						}
					],
					"installModes": [
						{
							"type": "OwnNamespace",
							"supported": false
						},
						{
							"type": "SingleNamespace",
							"supported": false
						},
						{
							"type": "MultiNamespace",
							"supported": false
						},
						{
							"type": "AllNamespaces",
							"supported": true
						}
					],
					"replaces": "rhoas-operator.0.9.5"
				},
				"status": {
					"phase": "Succeeded",
					"message": "The operator is running in rhoas-operator but is managing this namespace",
					"reason": "Copied",
					"lastUpdateTime": "2022-01-27T19:30:31Z",
					"lastTransitionTime": "2022-01-27T19:30:31Z",
					"conditions": [
						{
							"phase": "Pending",
							"message": "requirements not yet checked",
							"reason": "RequirementsUnknown",
							"lastUpdateTime": "2022-01-27T19:30:15Z",
							"lastTransitionTime": "2022-01-27T19:30:15Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-01-27T19:30:17Z",
							"lastTransitionTime": "2022-01-27T19:30:17Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-01-27T19:30:18Z",
							"lastTransitionTime": "2022-01-27T19:30:18Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment rhoas-operator to become ready: deployment \"rhoas-operator\" waiting for 1 outdated replica(s) to be terminated",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-01-27T19:30:18Z",
							"lastTransitionTime": "2022-01-27T19:30:18Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-01-27T19:30:31Z",
							"lastTransitionTime": "2022-01-27T19:30:31Z"
						}
					],
					"requirementStatus": [
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "cloudserviceaccountrequests.rhoas.redhat.com",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "32e6d65d-503d-441f-811b-93a830565f21"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "cloudservicesrequests.rhoas.redhat.com",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "a25e29a8-83ba-4690-814b-551455e4eb86"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "kafkaconnections.rhoas.redhat.com",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "f2cd83ae-a224-488c-9c26-d0579fbb1c26"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "serviceregistryconnections.rhoas.redhat.com",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "df36b18d-864a-4651-8bd5-8b061e838e33"
						},
						{
							"group": "",
							"version": "v1",
							"kind": "ServiceAccount",
							"name": "rhoas-operator",
							"status": "Present",
							"message": "",
							"dependents": [
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\"],\"apiGroups\":[\"apiextensions.k8s.io\"],\"resources\":[\"customresourcedefinitions\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"\"],\"resources\":[\"secrets\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"rhoas.redhat.com\"],\"resources\":[\"kafkaconnections\",\"kafkaconnections/status\",\"kafkaconnections/finalizers\",\"serviceregistryconnections\",\"serviceregistryconnections/status\",\"serviceregistryconnections/finalizers\",\"cloudservicesrequests\",\"cloudservicesrequests/status\",\"cloudservicesrequests/finalizers\",\"cloudserviceaccountrequests\",\"cloudserviceaccountrequests/status\",\"cloudserviceaccountrequests/finalizers\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"console.openshift.io\"],\"resources\":[\"consolequickstarts\",\"consolequickstarts/status\",\"consolequickstarts/finalizers\"]}"
								}
							]
						}
					]
				}
			},
			{
				"kind": "ClusterServiceVersion",
				"apiVersion": "operators.coreos.com/v1alpha1",
				"metadata": {
					"name": "route-monitor-operator.v0.1.397-e6454d0",
					"namespace": "jmaury-dev",
					"uid": "9675f702-9f63-4394-b445-1a8f0dc5a2fd",
					"resourceVersion": "618250389",
					"generation": 1,
					"creationTimestamp": "2022-01-26T15:43:05Z",
					"labels": {
						"olm.api.924033bb93ea26e4": "provided",
						"olm.api.c0ed25105efc828c": "provided",
						"olm.copiedFrom": "openshift-route-monitor-operator"
					},
					"annotations": {
						"alm-examples": "[]",
						"capabilities": "Basic Install",
						"olm.operatorGroup": "route-monitor-operator",
						"olm.operatorNamespace": "openshift-route-monitor-operator",
						"operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"monitoring.openshift.io\",\"kind\":\"ClusterUrlMonitor\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"monitoring.openshift.io\",\"kind\":\"RouteMonitor\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"route-monitor-operator\",\"version\":\"0.1.397-e6454d0\"}}]}",
						"operators.operatorframework.io/builder": "operator-sdk-v1.13.1",
						"operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3"
					},
					"managedFields": [
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-01-26T15:43:05Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:metadata": {
									"f:annotations": {
										".": {},
										"f:alm-examples": {},
										"f:capabilities": {},
										"f:olm.operatorGroup": {},
										"f:olm.operatorNamespace": {},
										"f:operatorframework.io/properties": {},
										"f:operators.operatorframework.io/builder": {},
										"f:operators.operatorframework.io/project_layout": {}
									},
									"f:labels": {
										".": {},
										"f:olm.api.924033bb93ea26e4": {},
										"f:olm.api.c0ed25105efc828c": {},
										"f:olm.copiedFrom": {}
									}
								},
								"f:spec": {
									".": {},
									"f:apiservicedefinitions": {},
									"f:cleanup": {
										".": {},
										"f:enabled": {}
									},
									"f:customresourcedefinitions": {
										".": {},
										"f:owned": {}
									},
									"f:description": {},
									"f:displayName": {},
									"f:icon": {},
									"f:install": {
										".": {},
										"f:spec": {
											".": {},
											"f:clusterPermissions": {},
											"f:deployments": {},
											"f:permissions": {}
										},
										"f:strategy": {}
									},
									"f:installModes": {},
									"f:keywords": {},
									"f:links": {},
									"f:maintainers": {},
									"f:maturity": {},
									"f:provider": {
										".": {},
										"f:name": {},
										"f:url": {}
									},
									"f:replaces": {},
									"f:version": {}
								}
							}
						},
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-01-26T15:43:05Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:status": {
									".": {},
									"f:cleanup": {},
									"f:conditions": {},
									"f:lastTransitionTime": {},
									"f:lastUpdateTime": {},
									"f:message": {},
									"f:phase": {},
									"f:reason": {},
									"f:requirementStatus": {}
								}
							},
							"subresource": "status"
						}
					]
				},
				"spec": {
					"install": {
						"strategy": "deployment",
						"spec": {
							"deployments": [
								{
									"name": "route-monitor-operator-controller-manager",
									"spec": {
										"replicas": 1,
										"selector": {
											"matchLabels": {
												"app": "route-monitor-operator",
												"component": "operator",
												"control-plane": "controller-manager"
											}
										},
										"template": {
											"metadata": {
												"creationTimestamp": null,
												"labels": {
													"app": "route-monitor-operator",
													"component": "operator",
													"control-plane": "controller-manager"
												}
											},
											"spec": {
												"volumes": [
													{
														"name": "manager-config",
														"configMap": {
															"name": "route-monitor-operator-manager-config"
														}
													}
												],
												"containers": [
													{
														"name": "manager",
														"image": "quay.io/app-sre/route-monitor-operator@sha256:4b285cb15624c3fd4b4518e1ee420ee2224a2869079730a0727dcef630752d06",
														"command": [
															"/manager"
														],
														"args": [
															"--zap-log-level=debug",
															"--blackbox-image=$(BLACKBOX_IMAGE)",
															"--blackbox-namespace=$(BLACKBOX_NAMESPACE)",
															"--config=controller_manager_config.yaml"
														],
														"env": [
															{
																"name": "LOG_LEVEL",
																"value": "1"
															},
															{
																"name": "BLACKBOX_IMAGE",
																"value": "quay.io/prometheus/blackbox-exporter:master"
															},
															{
																"name": "BLACKBOX_NAMESPACE",
																"valueFrom": {
																	"fieldRef": {
																		"fieldPath": "metadata.namespace"
																	}
																}
															}
														],
														"resources": {
															"limits": {
																"cpu": "200m",
																"memory": "300Mi"
															},
															"requests": {
																"cpu": "100m",
																"memory": "20Mi"
															}
														},
														"volumeMounts": [
															{
																"name": "manager-config",
																"mountPath": "/controller_manager_config.yaml",
																"subPath": "controller_manager_config.yaml"
															}
														],
														"livenessProbe": {
															"httpGet": {
																"path": "/healthz",
																"port": 8081
															},
															"initialDelaySeconds": 15,
															"periodSeconds": 20
														},
														"readinessProbe": {
															"httpGet": {
																"path": "/readyz",
																"port": 8081
															},
															"initialDelaySeconds": 5,
															"periodSeconds": 10
														},
														"securityContext": {
															"allowPrivilegeEscalation": false
														}
													}
												],
												"terminationGracePeriodSeconds": 10,
												"serviceAccountName": "route-monitor-operator-system",
												"securityContext": {
													"runAsNonRoot": true
												},
												"affinity": {
													"nodeAffinity": {
														"preferredDuringSchedulingIgnoredDuringExecution": [
															{
																"weight": 1,
																"preference": {
																	"matchExpressions": [
																		{
																			"key": "node-role.kubernetes.io/infra",
																			"operator": "Exists"
																		}
																	]
																}
															}
														]
													}
												},
												"tolerations": [
													{
														"key": "node-role.kubernetes.io/infra",
														"operator": "Exists",
														"effect": "NoSchedule"
													}
												]
											}
										},
										"strategy": {}
									}
								}
							],
							"permissions": [
								{
									"serviceAccountName": "route-monitor-operator-system",
									"rules": [
										{
											"verbs": [
												"get",
												"list",
												"watch",
												"create",
												"update",
												"patch",
												"delete"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"configmaps"
											]
										},
										{
											"verbs": [
												"get",
												"update",
												"patch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"configmaps/status"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"watch",
												"create",
												"update",
												"patch",
												"delete"
											],
											"apiGroups": [
												"coordination.k8s.io"
											],
											"resources": [
												"leases"
											]
										},
										{
											"verbs": [
												"create",
												"patch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"events"
											]
										}
									]
								}
							],
							"clusterPermissions": [
								{
									"serviceAccountName": "route-monitor-operator-system",
									"rules": [
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"watch"
											],
											"apiGroups": [
												"*"
											],
											"resources": [
												"services"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"watch"
											],
											"apiGroups": [
												"apps"
											],
											"resources": [
												"deployments"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"watch"
											],
											"apiGroups": [
												"config.openshift.io"
											],
											"resources": [
												"clusterversions"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"watch"
											],
											"apiGroups": [
												"config.openshift.io"
											],
											"resources": [
												"dnses"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"monitoring.coreos.com"
											],
											"resources": [
												"prometheusrules"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"update",
												"watch"
											],
											"apiGroups": [
												"monitoring.coreos.com"
											],
											"resources": [
												"servicemonitors"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"monitoring.openshift.io"
											],
											"resources": [
												"clusterurlmonitors"
											]
										},
										{
											"verbs": [
												"get",
												"patch",
												"update"
											],
											"apiGroups": [
												"monitoring.openshift.io"
											],
											"resources": [
												"clusterurlmonitors/status"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"monitoring.openshift.io"
											],
											"resources": [
												"routemonitors"
											]
										},
										{
											"verbs": [
												"get",
												"patch",
												"update"
											],
											"apiGroups": [
												"monitoring.openshift.io"
											],
											"resources": [
												"routemonitors/status"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"watch"
											],
											"apiGroups": [
												"route.openshift.io"
											],
											"resources": [
												"routes"
											]
										}
									]
								}
							]
						}
					},
					"version": "0.1.397-e6454d0",
					"maturity": "alpha",
					"customresourcedefinitions": {
						"owned": [
							{
								"name": "clusterurlmonitors.monitoring.openshift.io",
								"version": "v1alpha1",
								"kind": "ClusterUrlMonitor",
								"displayName": "Cluster Url Monitor",
								"description": "ClusterUrlMonitor is the Schema for the clusterurlmonitors API"
							},
							{
								"name": "routemonitors.monitoring.openshift.io",
								"version": "v1alpha1",
								"kind": "RouteMonitor",
								"displayName": "Route Monitor",
								"description": "RouteMonitor is the Schema for the routemonitors API"
							}
						]
					},
					"apiservicedefinitions": {},
					"displayName": "Route Monitor Operator",
					"description": "Automatically enables blackbox probes for routes on OpenShift clusters to be consumed by the Cluster Monitoring Operator or any vanilla Prometheus Operator",
					"keywords": [
						"operator-sdk",
						"golang",
						"monitoring",
						"sre",
						"openshift-dedicated",
						"openshift",
						"redhat"
					],
					"maintainers": [
						{
							"name": "georgettica",
							"email": "11993626+georgettica@users.noreply.github.com"
						}
					],
					"provider": {
						"name": "Red Hat",
						"url": "https://www.redhat.com"
					},
					"links": [
						{
							"name": "Route Monitor Operator",
							"url": "https://github.com/openshift/route-monitor-operator/"
						}
					],
					"icon": [
						{
							"base64data": "iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAKiAAACogG2m71tAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABpRJREFUWIXNmH9s1VcVwD/nfr/vQVvKe/x0wBpjSzeGrVugsBKLA1qkG7PrMkMmmVlVlmm2YTAxoNEYY+aIMSa6JYO5ROU/WEYzN4EBShxF3FYFFkdkqx1IFxjN2Pe1r79e3/ce//iWZ1/fr76O/ThJ03vPufecz/fcd+8936/wIUUhHIcqH3cRaCTQSswneWk2dAmMfBj/MpVJV6HWGPM1VBpBlwFujqE+yGlEj2Ltvij88yMDVDAeTqsIO0BXFBtoTE6jsjOC/5yAvW6AH8CtIs7ToKumCDZRzhi135kJJwsNNPmMCvIB5rsi5rXrCAdwqxXT4RmzUwsw5MygQihmzO9RNl9HsGyR2iOqmwWGs1mzAiq4fSL7FfnKRwuXing0onp3th2fNb19xvz244MDkKaYMXs0S8IyAD3Mt1Vp+1i4xouyycNsm6hOA4zBYoRfTTWGWd1E2SsdOHffN6X5IjxxFWpyAqrIr4GSoj07LuEdP6b8yIu4DauY8cJepj/9LJSWF+spbMR5Kg36WiMG9Sqm4Lk0UeSziyl9djdu45oMm3/23wx+82Hsax3FOVWzIUryMIzPoMiOYuFCm9so/8fJrHAAztIlzDh2iPAPfgKS97hLF/G3p/X7Yb4nZtQTo5P5i0Xm6vAzv9NiJPHSQY3dWDkp/54Y68HnUhm0mK+S+8JPz8rqJmZ0/p1pD7VNPiNAaGNzkO37JnXuCwFTAKii6wqTBRthxpEXMYurioJLRZ0/n7J9e4INVDazwOBxTJ6YnrxLelONjh4/UdSSFpLkm2e17/Yv5VtmD4BeKPfE2FwDBx74ltqrV68r3DWxg4M6+MOfqueEssaOw2ekH27xxZzNlmXTsJ5wazO26z/opUsTltzg1Hwe/AJlnTHY7m40PpC5iiUlmOXLGT12Av/A/iyrbFdKDFaqmFfzR8kUKSnFvetORp9/Pu84p74eff997NtvFxsC1DQaCtRjOaW0hFBLS8FhzsoVmKrKKYUAXONDZu4/JSIk+0wI3vukQXKJwhVTDlcA75OGySIjEbggAJ7IUZDGiSNMZSU4DvZiT1BWSFBbiOuC4yDl5WhfX/4wJSXg+5BIgLVoMpkySVkZEo3C6Cj2/PkJE+XVqPr1wfWmcgwhA9Bt3oD/11dwqioJtbbid3YG+qYm/Avnmf744zB9en5AVRK7dmFPncaprSV55Ejw8LU1+H87icZiOI3rSOzaPYFPj6Fj7X5YmvWQvvfenO3Y3Hlqe3sLn8aJhMZbWjJ8xO9Yo7E5czP0qdsLVsK4etATpxN0+fiHKN3zB+y77wZPXF2dOstMdTW2p4fwli1IaWn+DFrLaHs7tqsr3UdFBba3F4aHMQsWMNj2jfGzzkXVLknzE8PZ/KnJIM5D17hSJdZM/L0xzI+AW67pzKJFOHV1QbuqKr3dHwd3EhWaCKa6GqeuLt3HzTeD66J9fcjCheNnvBPB35OaPt7i4TYi9ui1/vQnfwOeh3/mDWT2bNCxX21ZWbCTZ836v24cUJpOBAYG0KGhoB+PB/8dB3dFHYhgYzGGt30PAFW5Zxb+H7MCAnjG7EJ5uFBinPp6ZN48kocPw0jwvu3UrcBZtYrEM7tTOre1FQmHGd23r5BLEPZGrb1/vCrjHu63dhuT+Ew2betW/NdfJ7TxrsBRRQVm3lzchi+mdM6yZeiFC0x77NFJsPFmwtotE/UZgBUw5KrdCHTn9ibInDno5cvo8DAyezbOmjtIdnSAKppIIOXlmJuq8U+dgrKyQnw9SbV3zod4QUCAGXA5pLYBeCOb3bntNvwzZwBIHnqZ8KOP4HecSNmTBw8RevBB7FtjJdZoEinJ+br9jqhdNwcuZjPmLLXK4JKoXavoSxNtblMjyb/8eazjIqFQ+pXn+5iKG7FdXQDYixeDXZshetRRe3sEchaLeWvBCFyNqraIshVIETgNq/GPBy/jodZ7GP75E7jr1qbmyQ03kPzTAdz1TWOA/8XUpn3RiKN8P6K6oRx68zEULFYFNIJ9MqR2iQpPSTg8LMagAwOYigr0vSswNIT29wcXP+CuW0vy+HF0ZASJRtHubpyaWoAEwm5f7dIo9peT/QxclGhnZ+vI/vYDnjgnB9va/NTp77g6+MDXNbG/XePNzYHODenApk1+fPXqf/ldXW8NwILrDpQBqPozVa1X1YaRgwe/4OGuj2Ee8YzZObR9+8t+d/cVr6TkFzHMYx7ul5Pnzt2vqgtVtXMq8f4HHkBGGhlqrqUAAAAASUVORK5CYII=",
							"mediatype": "image/png"
						}
					],
					"installModes": [
						{
							"type": "OwnNamespace",
							"supported": false
						},
						{
							"type": "SingleNamespace",
							"supported": false
						},
						{
							"type": "MultiNamespace",
							"supported": false
						},
						{
							"type": "AllNamespaces",
							"supported": true
						}
					],
					"replaces": "route-monitor-operator.v0.1.394-4a5a651"
				},
				"status": {
					"phase": "Succeeded",
					"message": "The operator is running in openshift-route-monitor-operator but is managing this namespace",
					"reason": "Copied",
					"lastUpdateTime": "2022-02-04T10:42:01Z",
					"lastTransitionTime": "2022-02-04T10:42:01Z",
					"conditions": [
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment route-monitor-operator-controller-manager to become ready: deployment \"route-monitor-operator-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:13:48Z",
							"lastTransitionTime": "2022-02-04T10:13:45Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:14:48Z",
							"lastTransitionTime": "2022-02-04T10:14:48Z"
						},
						{
							"phase": "Failed",
							"message": "installing: waiting for deployment route-monitor-operator-controller-manager to become ready: deployment \"route-monitor-operator-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "ComponentUnhealthy",
							"lastUpdateTime": "2022-02-04T10:22:36Z",
							"lastTransitionTime": "2022-02-04T10:22:36Z"
						},
						{
							"phase": "Pending",
							"message": "installing: waiting for deployment route-monitor-operator-controller-manager to become ready: deployment \"route-monitor-operator-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-04T10:22:46Z",
							"lastTransitionTime": "2022-02-04T10:22:46Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:22:51Z",
							"lastTransitionTime": "2022-02-04T10:22:51Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:22:54Z",
							"lastTransitionTime": "2022-02-04T10:22:54Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment route-monitor-operator-controller-manager to become ready: deployment \"route-monitor-operator-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:22:57Z",
							"lastTransitionTime": "2022-02-04T10:22:54Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:23:01Z",
							"lastTransitionTime": "2022-02-04T10:23:01Z"
						},
						{
							"phase": "Failed",
							"message": "installing: waiting for deployment route-monitor-operator-controller-manager to become ready: deployment \"route-monitor-operator-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "ComponentUnhealthy",
							"lastUpdateTime": "2022-02-04T10:28:26Z",
							"lastTransitionTime": "2022-02-04T10:28:26Z"
						},
						{
							"phase": "Pending",
							"message": "installing: waiting for deployment route-monitor-operator-controller-manager to become ready: deployment \"route-monitor-operator-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-04T10:28:39Z",
							"lastTransitionTime": "2022-02-04T10:28:39Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:28:43Z",
							"lastTransitionTime": "2022-02-04T10:28:43Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:28:47Z",
							"lastTransitionTime": "2022-02-04T10:28:47Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment route-monitor-operator-controller-manager to become ready: deployment \"route-monitor-operator-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:28:49Z",
							"lastTransitionTime": "2022-02-04T10:28:47Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:31:29Z",
							"lastTransitionTime": "2022-02-04T10:31:29Z"
						},
						{
							"phase": "Failed",
							"message": "installing: waiting for deployment route-monitor-operator-controller-manager to become ready: deployment \"route-monitor-operator-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "ComponentUnhealthy",
							"lastUpdateTime": "2022-02-04T10:38:59Z",
							"lastTransitionTime": "2022-02-04T10:38:59Z"
						},
						{
							"phase": "Pending",
							"message": "installing: waiting for deployment route-monitor-operator-controller-manager to become ready: deployment \"route-monitor-operator-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-04T10:39:04Z",
							"lastTransitionTime": "2022-02-04T10:39:04Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:39:06Z",
							"lastTransitionTime": "2022-02-04T10:39:06Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:39:08Z",
							"lastTransitionTime": "2022-02-04T10:39:08Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment route-monitor-operator-controller-manager to become ready: deployment \"route-monitor-operator-controller-manager\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:39:14Z",
							"lastTransitionTime": "2022-02-04T10:39:08Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:42:01Z",
							"lastTransitionTime": "2022-02-04T10:42:01Z"
						}
					],
					"requirementStatus": [
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "clusterurlmonitors.monitoring.openshift.io",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "91b4af1f-9c9b-483a-8cdb-312390dc3341"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "routemonitors.monitoring.openshift.io",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "958a8c9d-fd1b-4e99-a06e-81f266fe8ebf"
						},
						{
							"group": "",
							"version": "v1",
							"kind": "ServiceAccount",
							"name": "route-monitor-operator-system",
							"status": "Present",
							"message": "",
							"dependents": [
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"],\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"get\",\"update\",\"patch\"],\"apiGroups\":[\"\"],\"resources\":[\"configmaps/status\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"],\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"create\",\"patch\"],\"apiGroups\":[\"\"],\"resources\":[\"events\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"watch\"],\"apiGroups\":[\"*\"],\"resources\":[\"services\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"watch\"],\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"watch\"],\"apiGroups\":[\"config.openshift.io\"],\"resources\":[\"clusterversions\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"watch\"],\"apiGroups\":[\"config.openshift.io\"],\"resources\":[\"dnses\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"prometheusrules\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"update\",\"watch\"],\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"servicemonitors\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"monitoring.openshift.io\"],\"resources\":[\"clusterurlmonitors\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"patch\",\"update\"],\"apiGroups\":[\"monitoring.openshift.io\"],\"resources\":[\"clusterurlmonitors/status\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"monitoring.openshift.io\"],\"resources\":[\"routemonitors\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"patch\",\"update\"],\"apiGroups\":[\"monitoring.openshift.io\"],\"resources\":[\"routemonitors/status\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"watch\"],\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\"]}"
								}
							]
						}
					]
				}
			},
			{
				"kind": "ClusterServiceVersion",
				"apiVersion": "operators.coreos.com/v1alpha1",
				"metadata": {
					"name": "serverless-operator.v1.20.0",
					"namespace": "jmaury-dev",
					"uid": "ca2e9511-56ae-47f5-ae83-8fe09da4c9ec",
					"resourceVersion": "618266144",
					"generation": 1,
					"creationTimestamp": "2022-02-03T20:30:56Z",
					"labels": {
						"olm.api.4fa8c5d8e33af72a": "provided",
						"olm.api.bcd12f4466e2f513": "provided",
						"olm.api.fceaacb4e1c6ac8c": "provided",
						"olm.copiedFrom": "serverless-operator",
						"operatorframework.io/arch.amd64": "supported",
						"operatorframework.io/arch.ppc64le": "supported",
						"operatorframework.io/arch.s390x": "supported"
					},
					"annotations": {
						"alm-examples": "[\n  {\n    \"apiVersion\": \"operator.knative.dev/v1alpha1\",\n    \"kind\": \"KnativeServing\",\n    \"metadata\": {\n      \"name\": \"knative-serving\"\n    },\n    \"spec\": {\n    }\n  },\n  {\n    \"apiVersion\": \"operator.knative.dev/v1alpha1\",\n    \"kind\": \"KnativeEventing\",\n    \"metadata\": {\n      \"name\": \"knative-eventing\"\n    },\n    \"spec\": {\n    }\n  },\n  {\n    \"apiVersion\": \"operator.serverless.openshift.io/v1alpha1\",\n    \"kind\": \"KnativeKafka\",\n    \"metadata\": {\n      \"name\": \"knative-kafka\"\n    },\n    \"spec\": {\n      \"broker\": {\n        \"enabled\": false,\n        \"defaultConfig\": {\n          \"numPartitions\": 10,\n          \"replicationFactor\": 3,\n          \"bootstrapServers\": \"REPLACE_WITH_COMMA_SEPARATED_KAFKA_BOOTSTRAP_SERVERS\"\n        }\n      },\n      \"source\": {\n        \"enabled\": false\n      },\n      \"channel\": {\n        \"enabled\": false,\n        \"bootstrapServers\": \"REPLACE_WITH_COMMA_SEPARATED_KAFKA_BOOTSTRAP_SERVERS\"\n      }\n    }\n  }\n]",
						"capabilities": "Full Lifecycle",
						"categories": "Networking,Integration \u0026 Delivery,Cloud Provider,Developer Tools",
						"certified": "false",
						"createdAt": "2022-01-26T07:00:42Z",
						"description": "Deploy and manage event-driven serverless applications and functions using Knative.",
						"olm.operatorGroup": "serverless-operator",
						"olm.operatorNamespace": "serverless-operator",
						"olm.skipRange": "\u003e=1.19.0 \u003c1.20.0",
						"operatorframework.io/cluster-monitoring": "true",
						"operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.package\",\"value\":{\"packageName\":\"serverless-operator\",\"version\":\"1.20.0\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"operator.knative.dev\",\"kind\":\"KnativeEventing\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"operator.serverless.openshift.io\",\"kind\":\"KnativeKafka\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"operator.knative.dev\",\"kind\":\"KnativeServing\",\"version\":\"v1alpha1\"}}]}",
						"operatorframework.io/suggested-namespace": "openshift-serverless",
						"operators.openshift.io/infrastructure-features": "[\"disconnected\", \"fips\", \"proxy-aware\"]",
						"repository": "https://github.com/openshift-knative/serverless-operator",
						"support": "Red Hat"
					},
					"managedFields": [
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-02-03T20:30:56Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:metadata": {
									"f:annotations": {
										".": {},
										"f:alm-examples": {},
										"f:capabilities": {},
										"f:categories": {},
										"f:certified": {},
										"f:createdAt": {},
										"f:description": {},
										"f:olm.operatorGroup": {},
										"f:olm.operatorNamespace": {},
										"f:olm.skipRange": {},
										"f:operatorframework.io/cluster-monitoring": {},
										"f:operatorframework.io/properties": {},
										"f:operatorframework.io/suggested-namespace": {},
										"f:operators.openshift.io/infrastructure-features": {},
										"f:repository": {},
										"f:support": {}
									},
									"f:labels": {
										".": {},
										"f:olm.api.4fa8c5d8e33af72a": {},
										"f:olm.api.bcd12f4466e2f513": {},
										"f:olm.api.fceaacb4e1c6ac8c": {},
										"f:olm.copiedFrom": {},
										"f:operatorframework.io/arch.amd64": {},
										"f:operatorframework.io/arch.ppc64le": {},
										"f:operatorframework.io/arch.s390x": {}
									}
								},
								"f:spec": {
									".": {},
									"f:apiservicedefinitions": {},
									"f:cleanup": {
										".": {},
										"f:enabled": {}
									},
									"f:customresourcedefinitions": {
										".": {},
										"f:owned": {}
									},
									"f:description": {},
									"f:displayName": {},
									"f:icon": {},
									"f:install": {
										".": {},
										"f:spec": {
											".": {},
											"f:clusterPermissions": {},
											"f:deployments": {}
										},
										"f:strategy": {}
									},
									"f:installModes": {},
									"f:keywords": {},
									"f:links": {},
									"f:maintainers": {},
									"f:maturity": {},
									"f:minKubeVersion": {},
									"f:provider": {
										".": {},
										"f:name": {}
									},
									"f:relatedImages": {},
									"f:replaces": {},
									"f:version": {},
									"f:webhookdefinitions": {}
								}
							}
						},
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-02-03T20:30:56Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:status": {
									".": {},
									"f:certsLastUpdated": {},
									"f:certsRotateAt": {},
									"f:cleanup": {},
									"f:conditions": {},
									"f:lastTransitionTime": {},
									"f:lastUpdateTime": {},
									"f:message": {},
									"f:phase": {},
									"f:reason": {},
									"f:requirementStatus": {}
								}
							},
							"subresource": "status"
						}
					]
				},
				"spec": {
					"install": {
						"strategy": "deployment",
						"spec": {
							"deployments": [
								{
									"name": "knative-operator",
									"spec": {
										"replicas": 1,
										"selector": {
											"matchLabels": {
												"name": "knative-operator"
											}
										},
										"template": {
											"metadata": {
												"creationTimestamp": null,
												"labels": {
													"name": "knative-operator"
												},
												"annotations": {
													"sidecar.istio.io/inject": "false"
												}
											},
											"spec": {
												"containers": [
													{
														"name": "knative-operator",
														"image": "registry.redhat.io/openshift-serverless-1/serverless-rhel8-operator@sha256:b38e0446549dcde3ff960b4c6b660304017501094f1542e7b65b89dea296d7f7",
														"ports": [
															{
																"name": "metrics",
																"containerPort": 9090,
																"protocol": "TCP"
															}
														],
														"env": [
															{
																"name": "POD_NAME",
																"valueFrom": {
																	"fieldRef": {
																		"fieldPath": "metadata.name"
																	}
																}
															},
															{
																"name": "OPERATOR_NAME",
																"value": "knative-operator"
															},
															{
																"name": "SYSTEM_NAMESPACE",
																"valueFrom": {
																	"fieldRef": {
																		"fieldPath": "metadata.namespace"
																	}
																}
															},
															{
																"name": "METRICS_DOMAIN",
																"value": "knative.dev/serving-operator"
															},
															{
																"name": "REQUIRED_SERVING_NAMESPACE",
																"value": "knative-serving"
															},
															{
																"name": "REQUIRED_EVENTING_NAMESPACE",
																"value": "knative-eventing"
															},
															{
																"name": "SERVICE_MONITOR_RBAC_MANIFEST_PATH",
																"value": "/var/run/ko/monitoring/rbac-proxy.yaml"
															},
															{
																"name": "IMAGE_queue-proxy",
																"value": "registry.redhat.io/openshift-serverless-1/serving-queue-rhel8@sha256:ebd14b9efd29d15b09ebab14f3615cea477db47feca37afeeca475f548cd45af"
															},
															{
																"name": "IMAGE_activator",
																"value": "registry.redhat.io/openshift-serverless-1/serving-activator-rhel8@sha256:c4da32d3ba28a571f90fe7c1608c27b60539d22f22e49be2b7ccf39456f01e12"
															},
															{
																"name": "IMAGE_autoscaler",
																"value": "registry.redhat.io/openshift-serverless-1/serving-autoscaler-rhel8@sha256:f7a947f4e4307307e9d978645181d9421c7bf78921cb802b184e5ef540e3501b"
															},
															{
																"name": "IMAGE_autoscaler-hpa",
																"value": "registry.redhat.io/openshift-serverless-1/serving-autoscaler-hpa-rhel8@sha256:8af9752db1b374d2ab7e937430783246c9bfa21208d737cdf3b506624ca34fb3"
															},
															{
																"name": "IMAGE_controller__controller",
																"value": "registry.redhat.io/openshift-serverless-1/serving-controller-rhel8@sha256:61029ddfcd2d6817bc967cf893a66fc9d64ef161918eb275e09ce9fafbb35f8b"
															},
															{
																"name": "IMAGE_webhook__webhook",
																"value": "registry.redhat.io/openshift-serverless-1/serving-webhook-rhel8@sha256:79df0772b7dbaac2443a03390a71c54e325a0c2d425758caa3c611d9844c9add"
															},
															{
																"name": "IMAGE_domain-mapping",
																"value": "registry.redhat.io/openshift-serverless-1/serving-domain-mapping-rhel8@sha256:f2893793ca05047bf11ce6c89ace163dbee0ef0c20f605cab860eb7eb8978c4a"
															},
															{
																"name": "IMAGE_domainmapping-webhook",
																"value": "registry.redhat.io/openshift-serverless-1/serving-domain-mapping-webhook-rhel8@sha256:f510e34ca5d46e728e0c5f58b8df51994955dfe75752e6df092825d86ac6069b"
															},
															{
																"name": "IMAGE_storage-version-migration-serving-serving-0.26.0__migrate",
																"value": "registry.redhat.io/openshift-serverless-1/serving-storage-version-migration-rhel8@sha256:7b1010d1a250a04c82f74eea92f2eb2e889c6a2acbc892d7e8c7b603cd8f5c48"
															},
															{
																"name": "IMAGE_kourier-gateway",
																"value": "registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:13f566dca713189e5bdb4c67c1754fafc1ebc3f8b9696ccb2093f927d186737f"
															},
															{
																"name": "IMAGE_kourier-control",
																"value": "registry.redhat.io/openshift-serverless-1/kourier-control-rhel8@sha256:430744d0e8d108f1cdacc41d8c020d4b3869cae1158abb361bfa893077cbef85"
															},
															{
																"name": "IMAGE_net-kourier-controller__controller",
																"value": "registry.redhat.io/openshift-serverless-1/kourier-control-rhel8@sha256:430744d0e8d108f1cdacc41d8c020d4b3869cae1158abb361bfa893077cbef85"
															},
															{
																"name": "IMAGE_net-istio-controller__controller",
																"value": "registry.redhat.io/openshift-serverless-1/net-istio-controller-rhel8@sha256:ff83481b41f502ae6c7e629ed0aae8692fc7efc180034890650d93784dea0a0a"
															},
															{
																"name": "IMAGE_net-istio-webhook__webhook",
																"value": "registry.redhat.io/openshift-serverless-1/net-istio-webhook-rhel8@sha256:f24348abc22959bd0e378121181098ebd8ee27d22498c4fc3a4ff5f6f93424c1"
															},
															{
																"name": "IMAGE_eventing-controller__eventing-controller",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-controller-rhel8@sha256:8df9c7d974607b2bc51dccf9205621323b4d7cfa9fd5a6bc5997dd10d9d24461"
															},
															{
																"name": "IMAGE_sugar-controller__controller",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-sugar-controller-rhel8@sha256:d9949b5ca998775677f1ded9f9e69ed8d97794c979e0d3cfcd2cb5aa21b14c56"
															},
															{
																"name": "IMAGE_eventing-webhook__eventing-webhook",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-webhook-rhel8@sha256:286591b2d982d0f7596644bd634fc4c363b6426c1d8f3a983ec1c9677436a309"
															},
															{
																"name": "IMAGE_storage-version-migration-eventing-eventing-0.26.0__migrate",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-storage-version-migration-rhel8@sha256:27dee9e0ca2a5578bee9d777190c35570bb141a6910a5b97b439148d7699faa5"
															},
															{
																"name": "IMAGE_mt-broker-controller__mt-broker-controller",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-mtchannel-broker-rhel8@sha256:3d27912976ee6c6d24e0ba09d18008f7d8b26198700595be29ccb6183d271467"
															},
															{
																"name": "IMAGE_mt-broker-filter__filter",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-mtbroker-filter-rhel8@sha256:3edf6e507eb078b2222308cc6eed252ce5eda16e64260590646c28bcf911305a"
															},
															{
																"name": "IMAGE_mt-broker-ingress__ingress",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-mtbroker-ingress-rhel8@sha256:3243beab3e944a62ce3f696a2701908343c7d9b57694e9d27d6e8063a47bcd51"
															},
															{
																"name": "IMAGE_imc-controller__controller",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-in-memory-channel-controller-rhel8@sha256:90aaad80d64f19c37c5ae4af73af1bd6236429742edb9b902219531ea2484fa0"
															},
															{
																"name": "IMAGE_imc-dispatcher__dispatcher",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-in-memory-channel-dispatcher-rhel8@sha256:655cfaaed21a8a021a1c5c79cd4dcc5f1e5c39b59804b510a51d0adfbb98e5fc"
															},
															{
																"name": "IMAGE_pingsource-mt-adapter__dispatcher",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-mtping-rhel8@sha256:fd094c5fe1b03b2dcb02c03c5a6110845040ba3f28d9e7462e9c9d1d07d8af72"
															},
															{
																"name": "IMAGE_APISERVER_RA_IMAGE",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-apiserver-receive-adapter-rhel8@sha256:18b03a7e7a698fd1507c1082d7013d4a254a1852280718b2c63f864ea7000c56"
															},
															{
																"name": "IMAGE_DISPATCHER_IMAGE",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-in-memory-channel-dispatcher-rhel8@sha256:655cfaaed21a8a021a1c5c79cd4dcc5f1e5c39b59804b510a51d0adfbb98e5fc"
															},
															{
																"name": "IMAGE_KUBE_RBAC_PROXY",
																"value": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7a7145e20786d051ce14f0b566481ffe5dc71324acc1dffae31dca84dcbf0e24"
															},
															{
																"name": "IMAGE_KN_PLUGIN_EVENT_SENDER",
																"value": "registry.redhat.io/openshift-serverless-1-tech-preview/knative-client-plugin-event-sender-rhel8@sha256:b61ae07d5e3dc7483e050e311962b85d91d9481ca1962dc0c57f62ba13b54c35"
															}
														],
														"resources": {},
														"imagePullPolicy": "Always",
														"securityContext": {
															"capabilities": {
																"drop": [
																	"all"
																]
															},
															"runAsNonRoot": true,
															"readOnlyRootFilesystem": true,
															"allowPrivilegeEscalation": false
														}
													}
												],
												"serviceAccountName": "knative-operator"
											}
										},
										"strategy": {}
									}
								},
								{
									"name": "knative-openshift",
									"spec": {
										"replicas": 1,
										"selector": {
											"matchLabels": {
												"name": "knative-openshift"
											}
										},
										"template": {
											"metadata": {
												"creationTimestamp": null,
												"labels": {
													"name": "knative-openshift"
												}
											},
											"spec": {
												"volumes": [
													{
														"name": "cli-artifacts",
														"emptyDir": {}
													}
												],
												"initContainers": [
													{
														"name": "cli-artifacts",
														"image": "registry.redhat.io/openshift-serverless-1/kn-cli-artifacts-rhel8@sha256:c21e94f825242a1d6adfc8073fee29ba13ae4a6d31bd2cae0954ae5d27f3309e",
														"command": [
															"sh",
															"-c",
															"rm -rf /cli-artifacts/* \u0026\u0026 cp /usr/share/kn/**/* /cli-artifacts \u0026\u0026 chmod 444 /cli-artifacts/*"
														],
														"resources": {},
														"volumeMounts": [
															{
																"name": "cli-artifacts",
																"mountPath": "/cli-artifacts"
															}
														],
														"imagePullPolicy": "Always"
													}
												],
												"containers": [
													{
														"name": "knative-openshift",
														"image": "registry.redhat.io/openshift-serverless-1/knative-rhel8-operator@sha256:0ce21db1875e2e7f7c58c5510d434722ca0bb02fd9ce39e3e0a554988d8aacd6",
														"ports": [
															{
																"name": "http-cli",
																"containerPort": 8080,
																"protocol": "TCP"
															}
														],
														"env": [
															{
																"name": "WATCH_NAMESPACE"
															},
															{
																"name": "NAMESPACE",
																"valueFrom": {
																	"fieldRef": {
																		"fieldPath": "metadata.namespace"
																	}
																}
															},
															{
																"name": "DEPLOYMENT_NAME",
																"value": "knative-openshift"
															},
															{
																"name": "POD_NAME",
																"valueFrom": {
																	"fieldRef": {
																		"fieldPath": "metadata.name"
																	}
																}
															},
															{
																"name": "OPERATOR_NAME",
																"value": "knative-openshift"
															},
															{
																"name": "REQUIRED_SERVING_NAMESPACE",
																"value": "knative-serving"
															},
															{
																"name": "REQUIRED_EVENTING_NAMESPACE",
																"value": "knative-eventing"
															},
															{
																"name": "REQUIRED_KAFKA_NAMESPACE",
																"value": "knative-eventing"
															},
															{
																"name": "KAFKACHANNEL_MANIFEST_PATH",
																"value": "deploy/resources/knativekafka/channel"
															},
															{
																"name": "KAFKASOURCE_MANIFEST_PATH",
																"value": "deploy/resources/knativekafka/source"
															},
															{
																"name": "KAFKABROKER_MANIFEST_PATH",
																"value": "deploy/resources/knativekafka/broker"
															},
															{
																"name": "QUICKSTART_MANIFEST_PATH",
																"value": "deploy/resources/quickstart/serverless-application-quickstart.yaml"
															},
															{
																"name": "DASHBOARDS_ROOT_MANIFEST_PATH",
																"value": "deploy/resources/dashboards"
															},
															{
																"name": "SOURCES_USE_CLUSTER_MONITORING",
																"value": "true"
															},
															{
																"name": "SOURCES_GENERATE_SERVICE_MONITORS",
																"value": "true"
															},
															{
																"name": "IMAGE_queue-proxy",
																"value": "registry.redhat.io/openshift-serverless-1/serving-queue-rhel8@sha256:ebd14b9efd29d15b09ebab14f3615cea477db47feca37afeeca475f548cd45af"
															},
															{
																"name": "IMAGE_activator",
																"value": "registry.redhat.io/openshift-serverless-1/serving-activator-rhel8@sha256:c4da32d3ba28a571f90fe7c1608c27b60539d22f22e49be2b7ccf39456f01e12"
															},
															{
																"name": "IMAGE_autoscaler",
																"value": "registry.redhat.io/openshift-serverless-1/serving-autoscaler-rhel8@sha256:f7a947f4e4307307e9d978645181d9421c7bf78921cb802b184e5ef540e3501b"
															},
															{
																"name": "IMAGE_autoscaler-hpa",
																"value": "registry.redhat.io/openshift-serverless-1/serving-autoscaler-hpa-rhel8@sha256:8af9752db1b374d2ab7e937430783246c9bfa21208d737cdf3b506624ca34fb3"
															},
															{
																"name": "IMAGE_controller__controller",
																"value": "registry.redhat.io/openshift-serverless-1/serving-controller-rhel8@sha256:61029ddfcd2d6817bc967cf893a66fc9d64ef161918eb275e09ce9fafbb35f8b"
															},
															{
																"name": "IMAGE_webhook__webhook",
																"value": "registry.redhat.io/openshift-serverless-1/serving-webhook-rhel8@sha256:79df0772b7dbaac2443a03390a71c54e325a0c2d425758caa3c611d9844c9add"
															},
															{
																"name": "IMAGE_domain-mapping",
																"value": "registry.redhat.io/openshift-serverless-1/serving-domain-mapping-rhel8@sha256:f2893793ca05047bf11ce6c89ace163dbee0ef0c20f605cab860eb7eb8978c4a"
															},
															{
																"name": "IMAGE_domainmapping-webhook",
																"value": "registry.redhat.io/openshift-serverless-1/serving-domain-mapping-webhook-rhel8@sha256:f510e34ca5d46e728e0c5f58b8df51994955dfe75752e6df092825d86ac6069b"
															},
															{
																"name": "IMAGE_storage-version-migration-serving-serving-0.26.0__migrate",
																"value": "registry.redhat.io/openshift-serverless-1/serving-storage-version-migration-rhel8@sha256:7b1010d1a250a04c82f74eea92f2eb2e889c6a2acbc892d7e8c7b603cd8f5c48"
															},
															{
																"name": "IMAGE_kourier-gateway",
																"value": "registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:13f566dca713189e5bdb4c67c1754fafc1ebc3f8b9696ccb2093f927d186737f"
															},
															{
																"name": "IMAGE_kourier-control",
																"value": "registry.redhat.io/openshift-serverless-1/kourier-control-rhel8@sha256:430744d0e8d108f1cdacc41d8c020d4b3869cae1158abb361bfa893077cbef85"
															},
															{
																"name": "IMAGE_net-kourier-controller__controller",
																"value": "registry.redhat.io/openshift-serverless-1/kourier-control-rhel8@sha256:430744d0e8d108f1cdacc41d8c020d4b3869cae1158abb361bfa893077cbef85"
															},
															{
																"name": "IMAGE_net-istio-controller__controller",
																"value": "registry.redhat.io/openshift-serverless-1/net-istio-controller-rhel8@sha256:ff83481b41f502ae6c7e629ed0aae8692fc7efc180034890650d93784dea0a0a"
															},
															{
																"name": "IMAGE_net-istio-webhook__webhook",
																"value": "registry.redhat.io/openshift-serverless-1/net-istio-webhook-rhel8@sha256:f24348abc22959bd0e378121181098ebd8ee27d22498c4fc3a4ff5f6f93424c1"
															},
															{
																"name": "IMAGE_eventing-controller__eventing-controller",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-controller-rhel8@sha256:8df9c7d974607b2bc51dccf9205621323b4d7cfa9fd5a6bc5997dd10d9d24461"
															},
															{
																"name": "IMAGE_sugar-controller__controller",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-sugar-controller-rhel8@sha256:d9949b5ca998775677f1ded9f9e69ed8d97794c979e0d3cfcd2cb5aa21b14c56"
															},
															{
																"name": "IMAGE_eventing-webhook__eventing-webhook",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-webhook-rhel8@sha256:286591b2d982d0f7596644bd634fc4c363b6426c1d8f3a983ec1c9677436a309"
															},
															{
																"name": "IMAGE_storage-version-migration-eventing-eventing-0.26.0__migrate",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-storage-version-migration-rhel8@sha256:27dee9e0ca2a5578bee9d777190c35570bb141a6910a5b97b439148d7699faa5"
															},
															{
																"name": "IMAGE_mt-broker-controller__mt-broker-controller",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-mtchannel-broker-rhel8@sha256:3d27912976ee6c6d24e0ba09d18008f7d8b26198700595be29ccb6183d271467"
															},
															{
																"name": "IMAGE_mt-broker-filter__filter",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-mtbroker-filter-rhel8@sha256:3edf6e507eb078b2222308cc6eed252ce5eda16e64260590646c28bcf911305a"
															},
															{
																"name": "IMAGE_mt-broker-ingress__ingress",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-mtbroker-ingress-rhel8@sha256:3243beab3e944a62ce3f696a2701908343c7d9b57694e9d27d6e8063a47bcd51"
															},
															{
																"name": "IMAGE_imc-controller__controller",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-in-memory-channel-controller-rhel8@sha256:90aaad80d64f19c37c5ae4af73af1bd6236429742edb9b902219531ea2484fa0"
															},
															{
																"name": "IMAGE_imc-dispatcher__dispatcher",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-in-memory-channel-dispatcher-rhel8@sha256:655cfaaed21a8a021a1c5c79cd4dcc5f1e5c39b59804b510a51d0adfbb98e5fc"
															},
															{
																"name": "IMAGE_pingsource-mt-adapter__dispatcher",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-mtping-rhel8@sha256:fd094c5fe1b03b2dcb02c03c5a6110845040ba3f28d9e7462e9c9d1d07d8af72"
															},
															{
																"name": "IMAGE_APISERVER_RA_IMAGE",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-apiserver-receive-adapter-rhel8@sha256:18b03a7e7a698fd1507c1082d7013d4a254a1852280718b2c63f864ea7000c56"
															},
															{
																"name": "IMAGE_DISPATCHER_IMAGE",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-in-memory-channel-dispatcher-rhel8@sha256:655cfaaed21a8a021a1c5c79cd4dcc5f1e5c39b59804b510a51d0adfbb98e5fc"
															},
															{
																"name": "IMAGE_KUBE_RBAC_PROXY",
																"value": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7a7145e20786d051ce14f0b566481ffe5dc71324acc1dffae31dca84dcbf0e24"
															},
															{
																"name": "IMAGE_KN_PLUGIN_EVENT_SENDER",
																"value": "registry.redhat.io/openshift-serverless-1-tech-preview/knative-client-plugin-event-sender-rhel8@sha256:b61ae07d5e3dc7483e050e311962b85d91d9481ca1962dc0c57f62ba13b54c35"
															},
															{
																"name": "KAFKA_IMAGE_kafka-controller-manager__manager",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-kafka-source-controller-rhel8@sha256:9678fba882afd9b3a694f5e7963dc8288848d8732bbc64324d563038447887d8"
															},
															{
																"name": "KAFKA_IMAGE_KAFKA_RA_IMAGE",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-kafka-source-receive-adapter-rhel8@sha256:d827b639bed34b01017a0e285dfb1d82a7735fcd77c4d3451fad653571b5bc8a"
															},
															{
																"name": "KAFKA_IMAGE_kafka-ch-controller__controller",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-kafka-channel-controller-rhel8@sha256:3ae993986aad5cf3d6ab0764883d888973708805d9e2eed5029938217dded1e8"
															},
															{
																"name": "KAFKA_IMAGE_DISPATCHER_IMAGE",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-kafka-channel-dispatcher-rhel8@sha256:8c2ffee91216f1473a2a83c4c7da79e5aec2b6e27f7d2e080313b52ec9210dcc"
															},
															{
																"name": "KAFKA_IMAGE_kafka-webhook__kafka-webhook",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-kafka-channel-webhook-rhel8@sha256:593c8dd85b72fc61c544a2a80c14e76ba8a80bae289859f9901d027fd8789e34"
															},
															{
																"name": "KAFKA_IMAGE_v0.26-eventing-kafka-channel-post-install-job__post-install",
																"value": "registry.redhat.io/openshift-serverless-1/eventing-kafka-channel-cleanup-rhel8@sha256:7a7e2f6fa568d5dc39d702c2b95a9a2a389533c7fcd3c881399e4c9ce3a1813e"
															},
															{
																"name": "KAFKA_IMAGE_kafka-broker-receiver__kafka-broker-receiver",
																"value": "registry.redhat.io/openshift-serverless-1-tech-preview/eventing-kafka-broker-receiver-rhel8@sha256:c4138cb979dc9b1ce7d890aa25fdc194f1d6669df17e9ee564c321986bc75895"
															},
															{
																"name": "KAFKA_IMAGE_kafka-broker-dispatcher__kafka-broker-dispatcher",
																"value": "registry.redhat.io/openshift-serverless-1-tech-preview/eventing-kafka-broker-dispatcher-rhel8@sha256:53f63604e0557a1f0936c0fdb8484e8c41555ea6c36bd7813b74a83a56fbe7aa"
															},
															{
																"name": "KAFKA_IMAGE_kafka-controller__controller",
																"value": "registry.redhat.io/openshift-serverless-1-tech-preview/eventing-kafka-broker-controller-rhel8@sha256:e7af2251f613b58c9661b9822942226a16c722b95bed4ca661fbd2fd84916272"
															},
															{
																"name": "KAFKA_IMAGE_kafka-webhook-eventing__kafka-webhook-eventing",
																"value": "registry.redhat.io/openshift-serverless-1-tech-preview/eventing-kafka-broker-webhook-rhel8@sha256:a2c3e8d41578a2236125c3e5a949e2b6c82139cb033db4a457577aeeebe562c5"
															},
															{
																"name": "KNATIVE_EVENTING_KAFKA_VERSION",
																"value": "0.26.0"
															}
														],
														"resources": {},
														"volumeMounts": [
															{
																"name": "cli-artifacts",
																"mountPath": "/cli-artifacts"
															}
														],
														"livenessProbe": {
															"httpGet": {
																"path": "/healthz",
																"port": 8687
															}
														},
														"readinessProbe": {
															"httpGet": {
																"path": "/readyz",
																"port": 8687
															}
														},
														"imagePullPolicy": "Always",
														"securityContext": {
															"capabilities": {
																"drop": [
																	"all"
																]
															},
															"runAsNonRoot": true,
															"readOnlyRootFilesystem": true,
															"allowPrivilegeEscalation": false
														}
													}
												],
												"serviceAccountName": "knative-operator"
											}
										},
										"strategy": {}
									}
								},
								{
									"name": "knative-openshift-ingress",
									"spec": {
										"replicas": 1,
										"selector": {
											"matchLabels": {
												"name": "knative-openshift-ingress"
											}
										},
										"template": {
											"metadata": {
												"creationTimestamp": null,
												"labels": {
													"name": "knative-openshift-ingress"
												}
											},
											"spec": {
												"containers": [
													{
														"name": "knative-openshift-ingress",
														"image": "registry.redhat.io/openshift-serverless-1/ingress-rhel8-operator@sha256:9e9439eeaaefd0367879717305c98ecba2a83ed6558d526246b4157d0660a574",
														"ports": [
															{
																"name": "metrics",
																"containerPort": 9090,
																"protocol": "TCP"
															}
														],
														"env": [
															{
																"name": "METRICS_DOMAIN",
																"value": "knative.dev/serving"
															},
															{
																"name": "WATCH_NAMESPACE"
															},
															{
																"name": "POD_NAME",
																"valueFrom": {
																	"fieldRef": {
																		"fieldPath": "metadata.name"
																	}
																}
															},
															{
																"name": "OPERATOR_NAME",
																"value": "knative-openshift-ingress"
															},
															{
																"name": "SYSTEM_NAMESPACE",
																"valueFrom": {
																	"fieldRef": {
																		"fieldPath": "metadata.namespace"
																	}
																}
															}
														],
														"resources": {},
														"imagePullPolicy": "Always",
														"securityContext": {
															"capabilities": {
																"drop": [
																	"all"
																]
															},
															"runAsNonRoot": true,
															"readOnlyRootFilesystem": true,
															"allowPrivilegeEscalation": false
														}
													}
												],
												"serviceAccountName": "knative-openshift-ingress"
											}
										},
										"strategy": {}
									}
								}
							],
							"clusterPermissions": [
								{
									"serviceAccountName": "knative-operator",
									"rules": [
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"configmaps",
												"events",
												"namespaces",
												"secrets",
												"serviceaccounts",
												"services"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"apps"
											],
											"resources": [
												"deployments",
												"deployments/finalizers"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"autoscaling"
											],
											"resources": [
												"horizontalpodautoscalers"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"batch"
											],
											"resources": [
												"jobs"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"policy"
											],
											"resources": [
												"poddisruptionbudgets"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"rbac.authorization.k8s.io"
											],
											"resources": [
												"clusterrolebindings",
												"clusterroles",
												"rolebindings",
												"roles"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"admissionregistration.k8s.io"
											],
											"resources": [
												"mutatingwebhookconfigurations",
												"validatingwebhookconfigurations"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"networking.k8s.io"
											],
											"resources": [
												"networkpolicies"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"apiextensions.k8s.io"
											],
											"resources": [
												"customresourcedefinitions"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"caching.internal.knative.dev"
											],
											"resources": [
												"images"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"monitoring.coreos.com"
											],
											"resources": [
												"servicemonitors"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"console.openshift.io"
											],
											"resources": [
												"consolequickstarts",
												"consoleclidownloads"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"route.openshift.io"
											],
											"resources": [
												"routes",
												"routes/custom-host"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"coordination.k8s.io"
											],
											"resources": [
												"leases"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"operator.knative.dev"
											],
											"resources": [
												"knativeservings",
												"knativeservings/status",
												"knativeservings/finalizers",
												"knativeeventings",
												"knativeeventings/status",
												"knativeeventings/finalizers"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"operator.serverless.openshift.io"
											],
											"resources": [
												"knativekafkas",
												"knativekafkas/status",
												"knativekafkas/finalizers"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"watch"
											],
											"apiGroups": [
												"config.openshift.io"
											],
											"resources": [
												"ingresses"
											]
										}
									]
								},
								{
									"serviceAccountName": "knative-openshift-ingress",
									"rules": [
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"events"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"watch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"configmaps"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"watch",
												"patch"
											],
											"apiGroups": [
												"networking.internal.knative.dev"
											],
											"resources": [
												"ingresses",
												"ingresses/finalizers"
											]
										},
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"route.openshift.io"
											],
											"resources": [
												"routes",
												"routes/custom-host"
											]
										}
									]
								}
							]
						}
					},
					"version": "1.20.0",
					"maturity": "stable",
					"customresourcedefinitions": {
						"owned": [
							{
								"name": "knativeservings.operator.knative.dev",
								"version": "v1alpha1",
								"kind": "KnativeServing",
								"displayName": "Knative Serving",
								"description": "Represents an installation of a particular version of Knative Serving",
								"statusDescriptors": [
									{
										"path": "version",
										"displayName": "Version",
										"description": "The version of Knative Serving installed"
									},
									{
										"path": "conditions",
										"displayName": "Conditions",
										"description": "Conditions of Knative Serving installed",
										"x-descriptors": [
											"urn:alm:descriptor:io.kubernetes.conditions"
										]
									}
								]
							},
							{
								"name": "knativeeventings.operator.knative.dev",
								"version": "v1alpha1",
								"kind": "KnativeEventing",
								"displayName": "Knative Eventing",
								"description": "Represents an installation of a particular version of Knative Eventing",
								"statusDescriptors": [
									{
										"path": "version",
										"displayName": "Version",
										"description": "The version of Knative Eventing installed"
									}
								]
							},
							{
								"name": "knativekafkas.operator.serverless.openshift.io",
								"version": "v1alpha1",
								"kind": "KnativeKafka",
								"displayName": "Knative Kafka",
								"description": "Represents an installation of a particular version of Knative Kafka components"
							}
						]
					},
					"apiservicedefinitions": {},
					"webhookdefinitions": [
						{
							"generateName": "validating.knativeeventings.operator.serverless.openshift.io",
							"type": "ValidatingAdmissionWebhook",
							"deploymentName": "knative-openshift",
							"containerPort": 9876,
							"rules": [
								{
									"operations": [
										"CREATE",
										"UPDATE"
									],
									"apiGroups": [
										"operator.knative.dev"
									],
									"apiVersions": [
										"v1alpha1"
									],
									"resources": [
										"knativeeventings"
									]
								}
							],
							"failurePolicy": "Ignore",
							"sideEffects": "None",
							"admissionReviewVersions": [
								"v1beta1"
							],
							"webhookPath": "/validate-knativeeventings"
						},
						{
							"generateName": "validating.knativeservings.operator.serverless.openshift.io",
							"type": "ValidatingAdmissionWebhook",
							"deploymentName": "knative-openshift",
							"containerPort": 9876,
							"rules": [
								{
									"operations": [
										"CREATE",
										"UPDATE"
									],
									"apiGroups": [
										"operator.knative.dev"
									],
									"apiVersions": [
										"v1alpha1"
									],
									"resources": [
										"knativeservings"
									]
								}
							],
							"failurePolicy": "Ignore",
							"sideEffects": "None",
							"admissionReviewVersions": [
								"v1beta1"
							],
							"webhookPath": "/validate-knativeservings"
						},
						{
							"generateName": "validating.knativekafkas.operator.serverless.openshift.io",
							"type": "ValidatingAdmissionWebhook",
							"deploymentName": "knative-openshift",
							"containerPort": 9876,
							"rules": [
								{
									"operations": [
										"CREATE",
										"UPDATE"
									],
									"apiGroups": [
										"operator.serverless.openshift.io"
									],
									"apiVersions": [
										"v1alpha1"
									],
									"resources": [
										"knativekafkas"
									]
								}
							],
							"failurePolicy": "Ignore",
							"sideEffects": "None",
							"admissionReviewVersions": [
								"v1beta1"
							],
							"webhookPath": "/validate-knativekafkas"
						},
						{
							"generateName": "mutating.knativeeventings.operator.serverless.openshift.io",
							"type": "MutatingAdmissionWebhook",
							"deploymentName": "knative-openshift",
							"containerPort": 9876,
							"rules": [
								{
									"operations": [
										"CREATE",
										"UPDATE"
									],
									"apiGroups": [
										"operator.knative.dev"
									],
									"apiVersions": [
										"v1alpha1"
									],
									"resources": [
										"knativeeventings"
									]
								}
							],
							"failurePolicy": "Ignore",
							"sideEffects": "None",
							"admissionReviewVersions": [
								"v1beta1"
							],
							"webhookPath": "/mutate-knativeeventings"
						},
						{
							"generateName": "mutating.knativeservings.operator.serverless.openshift.io",
							"type": "MutatingAdmissionWebhook",
							"deploymentName": "knative-openshift",
							"containerPort": 9876,
							"rules": [
								{
									"operations": [
										"CREATE",
										"UPDATE"
									],
									"apiGroups": [
										"operator.knative.dev"
									],
									"apiVersions": [
										"v1alpha1"
									],
									"resources": [
										"knativeservings"
									]
								}
							],
							"failurePolicy": "Ignore",
							"sideEffects": "None",
							"admissionReviewVersions": [
								"v1beta1"
							],
							"webhookPath": "/mutate-knativeservings"
						}
					],
					"minKubeVersion": "1.19.0",
					"displayName": "Red Hat OpenShift Serverless",
					"description": "The Red Hat OpenShift Serverless operator provides a collection of APIs that\nenables containers, microservices and functions to run \"serverless\".\nServerless applications can scale up and down (to zero) on demand and be triggered by a\nnumber of event sources. OpenShift Serverless integrates with a number of\nplatform services, such as Monitoring and it is based on the open\nsource project Knative.\n\n# Prerequisites\nKnative Serving (and Knative Eventing respectively) can only be installed into the\n`knative-serving` (`knative-eventing`) namespace. These namespaces will be\nautomatically created when installing the operator.\n\nThe components provided with the OpenShift Serverless operator require minimum cluster sizes on\nOpenShift Container Platform. For more information, see the documentation on [Getting started\nwith OpenShift Serverless](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html-single/serverless/index#serverless-getting-started).\n\n# Supported Features\n- **Easy to get started:** Provides a simplified developer experience to deploy\n  and run cloud native applications on Kubernetes, providing powerful\n  abstractions.\n- **Immutable Revisions:** Deploy new features performing canary, A/B or\n  blue-green testing with gradual traffic rollout following best practices.\n- **Use any programming language or runtime of choice:** From Java, Python, Go\n  and JavaScript to Quarkus, SpringBoot or Node.js.\n- **Automatic scaling:** Removes the requirement to configure numbers of replicas\n  or idling behavior. Applications automatically scale to zero when not in use,\n  or scale up to meet demand, with built in reliability and fault tolerance.\n- **Event Driven Applications:** You can build loosely coupled, distributed applications\n  that can be connected to a variety of either built in or third party event sources,\n  powered by operators.\n- **Ready for the hybrid cloud:** Provides true, portable serverless functionality,\n  that can run anywhere OpenShift Container Platform runs. You can leverage data\n  locality and SaaS as you need it.\n\n# Components \u0026 APIs\nThis operator provides the following components:\n\n## Knative Serving\nKnative Serving builds on Kubernetes to support deploying and serving of applications and functions as serverless containers.\nServing simplifies the application deployment, dynamically scales based on in incoming traffic and supports custom rollout strategies with traffic splitting.\nOther features include:\n- Simplified deployment of serverless containers\n- Traffic-based auto-scaling, including scale-to-zero\n- Routing and network programming\n- Point-in-time application snapshots and their configurations\n\n## Knative Eventing\nKnative Eventing provides a platform that offers composable primitives to enable late-binding event sources and\nevent consumers.\nKnative Eventing supports the following architectural cloud-native concepts:\n\n- Services are loosely coupled during development and deployed independently to production\n- A producer can generate events before a consumer is listening, and a consumer can express an interest in an event or class of events that are not yet being produced.\n- Services can be connected to create new applications\n   * without modifying producer or consumer, and\n   * with the ability to select a specific subset of events from a particular producer\n\n## Serverless functions\nServerless functions extend Knative allowing developers to write functions that let them focus on business logic.\nThese functions are deployed as Knative Services and take advantage of Knative Serving and Eventing.\nServerless functions bring greater efficiency, more scalability and faster development that facilitate rapid go-to-market.\n\nOther features include:\n- Based on Buildpacks\n- Quarkus, Node and Go support\n- Local developer experience through the kn CLI\n- Project templates\n- Support for receiving CloudEvents and plain HTTP requests\n\n## Knative CLI `kn`\nThe Knative client `kn` allows you to create Knative resources from the command line or from within\nShell scripts.\nWith its extensive help pages and autocompletion support, it frees you from memorizing the detailed structure of the Knative resource schemas.\n\n`kn` offers you:\n- Full support for managing all features of Knative Serving: Services, Revisions and Routes\n- Support for managing Knative Eventing entities: Sources, Brokers, Triggers, Channels and Subscriptions\n- A kubectl-like plugin architecture to extend the built-in functionality\n- Easy integration of Knative into Tekton pipelines by using `kn` in a Tekton task\n- Support for creating, building and deploying serverless functions for multiple runtimes (Node, Quarkus, Golang)\n\n# Further Information\nFor documentation on OpenShift Serverless, see:\n- [Installation\nGuide](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/serverless/administration-guide#installing-openshift-serverless)\n- [Getting\nstarted](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/serverless/serverless-getting-started)",
					"keywords": [
						"serverless",
						"FaaS",
						"microservices",
						"scale to zero",
						"knative",
						"serving",
						"eventing",
						"kafka"
					],
					"maintainers": [
						{
							"name": "Serverless Team",
							"email": "support@redhat.com"
						}
					],
					"provider": {
						"name": "Red Hat"
					},
					"links": [
						{
							"name": "Documentation",
							"url": "https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/serverless/index"
						},
						{
							"name": "Source Repository",
							"url": "https://github.com/openshift-knative/serverless-operator"
						}
					],
					"icon": [
						{
							"base64data": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzOCIgaGVpZ2h0PSIzOCIgdmlld0JveD0iMCAwIDM4IDM4Ij48ZGVmcz48c3R5bGU+LmF7ZmlsbDojZmZmO30uYntmaWxsOiNlMDA7fTwvc3R5bGU+PC9kZWZzPjxwYXRoIGNsYXNzPSJhIiBkPSJNMjgsMUgxMGE5LDksMCwwLDAtOSw5VjI4YTksOSwwLDAsMCw5LDlIMjhhOSw5LDAsMCwwLDktOVYxMGE5LDksMCwwLDAtOS05WiIvPjxwYXRoIGQ9Ik0yOCwyLjI1QTcuNzU4Nyw3Ljc1ODcsMCwwLDEsMzUuNzUsMTBWMjhBNy43NTg3LDcuNzU4NywwLDAsMSwyOCwzNS43NUgxMEE3Ljc1ODcsNy43NTg3LDAsMCwxLDIuMjUsMjhWMTBBNy43NTg3LDcuNzU4NywwLDAsMSwxMCwyLjI1SDI4TTI4LDFIMTBhOSw5LDAsMCwwLTksOVYyOGE5LDksMCwwLDAsOSw5SDI4YTksOSwwLDAsMCw5LTlWMTBhOSw5LDAsMCwwLTktOVoiLz48cGF0aCBjbGFzcz0iYiIgZD0iTTE0LDIzLjQ3NjZIMTBhLjYyNTMuNjI1MywwLDAsMS0uNjI1LS42MjV2LTRhLjYyNTIuNjI1MiwwLDAsMSwuNjI1LS42MjVoNGEuNjI1Mi42MjUyLDAsMCwxLC42MjUuNjI1djRBLjYyNTMuNjI1MywwLDAsMSwxNCwyMy40NzY2Wm0tMy4zNzUtMS4yNWgyLjc1di0yLjc1aC0yLjc1WiIvPjxwYXRoIGNsYXNzPSJiIiBkPSJNMjEsMjMuNDc2NkgxN2EuNjI1My42MjUzLDAsMCwxLS42MjUtLjYyNXYtNGEuNjI1Mi42MjUyLDAsMCwxLC42MjUtLjYyNWg0YS42MjUyLjYyNTIsMCwwLDEsLjYyNS42MjV2NEEuNjI1My42MjUzLDAsMCwxLDIxLDIzLjQ3NjZabS0zLjM3NS0xLjI1aDIuNzV2LTIuNzVoLTIuNzVaIi8+PHBhdGggY2xhc3M9ImIiIGQ9Ik0xNy41LDE2LjQ3NjZoLTRhLjYyNTMuNjI1MywwLDAsMS0uNjI1LS42MjV2LTRhLjYyNTIuNjI1MiwwLDAsMSwuNjI1LS42MjVoNGEuNjI1Mi42MjUyLDAsMCwxLC42MjUuNjI1djRBLjYyNTMuNjI1MywwLDAsMSwxNy41LDE2LjQ3NjZabS0zLjM3NS0xLjI1aDIuNzV2LTIuNzVoLTIuNzVaIi8+PHBhdGggY2xhc3M9ImIiIGQ9Ik0yNC41LDE2LjQ3NjZoLTRhLjYyNTMuNjI1MywwLDAsMS0uNjI1LS42MjV2LTRhLjYyNTIuNjI1MiwwLDAsMSwuNjI1LS42MjVoNGEuNjI1Mi42MjUyLDAsMCwxLC42MjUuNjI1djRBLjYyNTMuNjI1MywwLDAsMSwyNC41LDE2LjQ3NjZabS0zLjM3NS0xLjI1aDIuNzV2LTIuNzVoLTIuNzVaIi8+PHBhdGggY2xhc3M9ImIiIGQ9Ik0yOCwyMy40NzY2SDI0YS42MjUzLjYyNTMsMCwwLDEtLjYyNS0uNjI1di00YS42MjUyLjYyNTIsMCwwLDEsLjYyNS0uNjI1aDRhLjYyNTIuNjI1MiwwLDAsMSwuNjI1LjYyNXY0QS42MjUzLjYyNTMsMCwwLDEsMjgsMjMuNDc2NlptLTMuMzc1LTEuMjVoMi43NXYtMi43NWgtMi43NVoiLz48cGF0aCBkPSJNMjksMjYuNDc2Nkg5YS42MjUuNjI1LDAsMCwxLDAtMS4yNUgyOWEuNjI1LjYyNSwwLDAsMSwwLDEuMjVaIi8+PC9zdmc+",
							"mediatype": "image/svg+xml"
						}
					],
					"installModes": [
						{
							"type": "OwnNamespace",
							"supported": false
						},
						{
							"type": "SingleNamespace",
							"supported": false
						},
						{
							"type": "MultiNamespace",
							"supported": false
						},
						{
							"type": "AllNamespaces",
							"supported": true
						}
					],
					"replaces": "serverless-operator.v1.19.0"
				},
				"status": {
					"phase": "Succeeded",
					"message": "The operator is running in serverless-operator but is managing this namespace",
					"reason": "Copied",
					"lastUpdateTime": "2022-02-04T10:55:52Z",
					"lastTransitionTime": "2022-02-04T10:55:52Z",
					"conditions": [
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:28:46Z",
							"lastTransitionTime": "2022-02-04T10:28:46Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:28:48Z",
							"lastTransitionTime": "2022-02-04T10:28:48Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment knative-openshift to become ready: deployment \"knative-openshift\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:28:56Z",
							"lastTransitionTime": "2022-02-04T10:28:48Z"
						},
						{
							"phase": "Failed",
							"message": "install timeout",
							"reason": "InstallCheckFailed",
							"lastUpdateTime": "2022-02-04T10:33:48Z",
							"lastTransitionTime": "2022-02-04T10:33:48Z"
						},
						{
							"phase": "Pending",
							"message": "installing: waiting for deployment knative-openshift to become ready: deployment \"knative-openshift\" not available: Deployment does not have minimum availability.",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-04T10:34:04Z",
							"lastTransitionTime": "2022-02-04T10:34:04Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:34:14Z",
							"lastTransitionTime": "2022-02-04T10:34:14Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:34:17Z",
							"lastTransitionTime": "2022-02-04T10:34:17Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment knative-openshift to become ready: deployment \"knative-openshift\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:34:20Z",
							"lastTransitionTime": "2022-02-04T10:34:17Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:38:02Z",
							"lastTransitionTime": "2022-02-04T10:38:02Z"
						},
						{
							"phase": "Failed",
							"message": "installing: waiting for deployment knative-openshift to become ready: deployment \"knative-openshift\" not available: Deployment does not have minimum availability.",
							"reason": "ComponentUnhealthy",
							"lastUpdateTime": "2022-02-04T10:39:02Z",
							"lastTransitionTime": "2022-02-04T10:39:02Z"
						},
						{
							"phase": "Pending",
							"message": "installing: waiting for deployment knative-openshift to become ready: deployment \"knative-openshift\" not available: Deployment does not have minimum availability.",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-04T10:39:07Z",
							"lastTransitionTime": "2022-02-04T10:39:07Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:39:12Z",
							"lastTransitionTime": "2022-02-04T10:39:12Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:39:15Z",
							"lastTransitionTime": "2022-02-04T10:39:15Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment knative-openshift to become ready: deployment \"knative-openshift\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:39:19Z",
							"lastTransitionTime": "2022-02-04T10:39:15Z"
						},
						{
							"phase": "Failed",
							"message": "install timeout",
							"reason": "InstallCheckFailed",
							"lastUpdateTime": "2022-02-04T10:52:53Z",
							"lastTransitionTime": "2022-02-04T10:52:53Z"
						},
						{
							"phase": "Pending",
							"message": "installing: waiting for deployment knative-openshift to become ready: deployment \"knative-openshift\" not available: Deployment does not have minimum availability.",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-04T10:53:05Z",
							"lastTransitionTime": "2022-02-04T10:53:05Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:53:08Z",
							"lastTransitionTime": "2022-02-04T10:53:08Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:53:10Z",
							"lastTransitionTime": "2022-02-04T10:53:10Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment knative-openshift to become ready: deployment \"knative-openshift\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:53:14Z",
							"lastTransitionTime": "2022-02-04T10:53:10Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:55:52Z",
							"lastTransitionTime": "2022-02-04T10:55:52Z"
						}
					],
					"requirementStatus": [
						{
							"group": "operators.coreos.com",
							"version": "v1alpha1",
							"kind": "ClusterServiceVersion",
							"name": "serverless-operator.v1.20.0",
							"status": "Present",
							"message": "CSV minKubeVersion (1.19.0) less than server version (v1.22.3+e790d7f)"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "knativeeventings.operator.knative.dev",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "23897dea-5bce-4d86-a0a6-ee05c9876be0"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "knativekafkas.operator.serverless.openshift.io",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "d2325e5a-de79-4eec-9ff6-6886c1ca1d20"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "knativeservings.operator.knative.dev",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "5a299634-9609-4bd0-8c1d-69ea671199d5"
						},
						{
							"group": "",
							"version": "v1",
							"kind": "ServiceAccount",
							"name": "knative-operator",
							"status": "Present",
							"message": "",
							"dependents": [
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"\"],\"resources\":[\"configmaps\",\"events\",\"namespaces\",\"secrets\",\"serviceaccounts\",\"services\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\",\"deployments/finalizers\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"autoscaling\"],\"resources\":[\"horizontalpodautoscalers\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"policy\"],\"resources\":[\"poddisruptionbudgets\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"clusterrolebindings\",\"clusterroles\",\"rolebindings\",\"roles\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"admissionregistration.k8s.io\"],\"resources\":[\"mutatingwebhookconfigurations\",\"validatingwebhookconfigurations\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"networkpolicies\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"apiextensions.k8s.io\"],\"resources\":[\"customresourcedefinitions\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"caching.internal.knative.dev\"],\"resources\":[\"images\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"servicemonitors\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"console.openshift.io\"],\"resources\":[\"consolequickstarts\",\"consoleclidownloads\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\",\"routes/custom-host\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"operator.knative.dev\"],\"resources\":[\"knativeservings\",\"knativeservings/status\",\"knativeservings/finalizers\",\"knativeeventings\",\"knativeeventings/status\",\"knativeeventings/finalizers\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"operator.serverless.openshift.io\"],\"resources\":[\"knativekafkas\",\"knativekafkas/status\",\"knativekafkas/finalizers\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"watch\"],\"apiGroups\":[\"config.openshift.io\"],\"resources\":[\"ingresses\"]}"
								}
							]
						},
						{
							"group": "",
							"version": "v1",
							"kind": "ServiceAccount",
							"name": "knative-openshift-ingress",
							"status": "Present",
							"message": "",
							"dependents": [
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"\"],\"resources\":[\"events\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"watch\"],\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"patch\"],\"apiGroups\":[\"networking.internal.knative.dev\"],\"resources\":[\"ingresses\",\"ingresses/finalizers\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\",\"routes/custom-host\"]}"
								}
							]
						}
					],
					"certsLastUpdated": "2022-02-04T10:53:11Z",
					"certsRotateAt": "2024-02-03T10:53:11Z"
				}
			},
			{
				"kind": "ClusterServiceVersion",
				"apiVersion": "operators.coreos.com/v1alpha1",
				"metadata": {
					"name": "service-binding-operator.v1.0.0",
					"namespace": "jmaury-dev",
					"uid": "04270478-10d2-4c81-a029-44627e21cbb4",
					"resourceVersion": "618210261",
					"generation": 1,
					"creationTimestamp": "2022-01-17T10:28:24Z",
					"labels": {
						"olm.api.1194832194fe0425": "provided",
						"olm.api.65bbb91f940668a5": "provided",
						"olm.api.beb3c1939f5b75dd": "provided",
						"olm.copiedFrom": "service-binding-operator",
						"operatorframework.io/arch.amd64": "supported",
						"operatorframework.io/arch.ppc64le": "supported",
						"operatorframework.io/arch.s390x": "supported"
					},
					"annotations": {
						"alm-examples": "[\n  {\n    \"apiVersion\": \"binding.operators.coreos.com/v1alpha1\",\n    \"kind\": \"ServiceBinding\",\n    \"metadata\": {\n      \"name\": \"example-servicebinding\"\n    },\n    \"spec\": {\n      \"application\": {\n        \"group\": \"apps\",\n        \"name\": \"nodejs-rest-http-crud\",\n        \"resource\": \"deployments\",\n        \"version\": \"v1\"\n      },\n      \"services\": [\n        {\n          \"group\": \"postgresql.example.dev\",\n          \"kind\": \"Database\",\n          \"name\": \"pg-instance\",\n          \"version\": \"v1alpha1\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"servicebinding.io/v1alpha3\",\n    \"kind\": \"ServiceBinding\",\n    \"metadata\": {\n      \"name\": \"servicebinding-sample\"\n    },\n    \"spec\": {\n      \"application\": {\n        \"Kind\": \"Ddeployment\",\n        \"apiVersion\": \"apps/v1\",\n        \"name\": \"nodejs-rest-http-crud\"\n      },\n      \"service\": {\n        \"apiVersion\": \"postgresql.example.dev/v1alpha1\",\n        \"kind\": \"Database\",\n        \"name\": \"pg-instance\"\n      }\n    }\n  }\n]",
						"capabilities": "Basic Install",
						"categories": "Developer Tools, OpenShift Optional, Integration \u0026 Delivery",
						"containerImage": "registry.redhat.io/ocp-tools-4/service-binding-rhel8-operator@sha256:7694bc679e186e430fcf9ba011c0e1dd2de4fa9879bd8ecbc0c1b8903318ed40",
						"description": "An operator to support binding capabilities between imported apps and operator backed services",
						"olm.operatorGroup": "service-binding-operator-group",
						"olm.operatorNamespace": "service-binding-operator",
						"operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"binding.operators.coreos.com\",\"kind\":\"BindableKinds\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"binding.operators.coreos.com\",\"kind\":\"ServiceBinding\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"servicebinding.io\",\"kind\":\"ServiceBinding\",\"version\":\"v1alpha3\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"rh-service-binding-operator\",\"version\":\"1.0.0\"}}]}",
						"operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
						"operators.operatorframework.io/builder": "operator-sdk-v1.3.0",
						"operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
						"repository": "https://github.com/redhat-developer/service-binding-operator",
						"support": "Service Binding Operator Community"
					},
					"managedFields": [
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-01-17T10:28:24Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:metadata": {
									"f:annotations": {
										".": {},
										"f:alm-examples": {},
										"f:capabilities": {},
										"f:categories": {},
										"f:containerImage": {},
										"f:description": {},
										"f:olm.operatorGroup": {},
										"f:olm.operatorNamespace": {},
										"f:operatorframework.io/properties": {},
										"f:operators.openshift.io/infrastructure-features": {},
										"f:operators.operatorframework.io/builder": {},
										"f:operators.operatorframework.io/project_layout": {},
										"f:repository": {},
										"f:support": {}
									},
									"f:labels": {
										".": {},
										"f:olm.api.1194832194fe0425": {},
										"f:olm.api.65bbb91f940668a5": {},
										"f:olm.api.beb3c1939f5b75dd": {},
										"f:olm.copiedFrom": {},
										"f:operatorframework.io/arch.amd64": {},
										"f:operatorframework.io/arch.ppc64le": {},
										"f:operatorframework.io/arch.s390x": {}
									}
								},
								"f:spec": {
									".": {},
									"f:apiservicedefinitions": {},
									"f:cleanup": {
										".": {},
										"f:enabled": {}
									},
									"f:customresourcedefinitions": {
										".": {},
										"f:owned": {}
									},
									"f:description": {},
									"f:displayName": {},
									"f:icon": {},
									"f:install": {
										".": {},
										"f:spec": {
											".": {},
											"f:clusterPermissions": {},
											"f:deployments": {},
											"f:permissions": {}
										},
										"f:strategy": {}
									},
									"f:installModes": {},
									"f:keywords": {},
									"f:links": {},
									"f:maintainers": {},
									"f:maturity": {},
									"f:minKubeVersion": {},
									"f:provider": {
										".": {},
										"f:name": {},
										"f:url": {}
									},
									"f:relatedImages": {},
									"f:replaces": {},
									"f:version": {},
									"f:webhookdefinitions": {}
								}
							}
						},
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-01-17T10:28:24Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:status": {
									".": {},
									"f:certsLastUpdated": {},
									"f:certsRotateAt": {},
									"f:cleanup": {},
									"f:conditions": {},
									"f:lastTransitionTime": {},
									"f:lastUpdateTime": {},
									"f:message": {},
									"f:phase": {},
									"f:reason": {},
									"f:requirementStatus": {}
								}
							},
							"subresource": "status"
						}
					]
				},
				"spec": {
					"install": {
						"strategy": "deployment",
						"spec": {
							"deployments": [
								{
									"name": "service-binding-operator",
									"spec": {
										"replicas": 1,
										"selector": {
											"matchLabels": {
												"control-plane": "service-binding-controller-manager"
											}
										},
										"template": {
											"metadata": {
												"creationTimestamp": null,
												"labels": {
													"control-plane": "service-binding-controller-manager"
												}
											},
											"spec": {
												"volumes": [
													{
														"name": "cert",
														"secret": {
															"secretName": "service-binding-operator-service-cert",
															"defaultMode": 420
														}
													}
												],
												"containers": [
													{
														"name": "manager",
														"image": "registry.redhat.io/ocp-tools-4/service-binding-rhel8-operator@sha256:7694bc679e186e430fcf9ba011c0e1dd2de4fa9879bd8ecbc0c1b8903318ed40",
														"command": [
															"/manager"
														],
														"args": [
															"--leader-elect"
														],
														"ports": [
															{
																"name": "webhook-server",
																"containerPort": 9443,
																"protocol": "TCP"
															}
														],
														"env": [
															{
																"name": "WATCH_NAMESPACE",
																"valueFrom": {
																	"fieldRef": {
																		"fieldPath": "metadata.annotations['olm.targetNamespaces']"
																	}
																}
															}
														],
														"resources": {},
														"volumeMounts": [
															{
																"name": "cert",
																"readOnly": true,
																"mountPath": "/tmp/k8s-webhook-server/serving-certs"
															}
														],
														"livenessProbe": {
															"httpGet": {
																"path": "/healthz",
																"port": 8081
															},
															"initialDelaySeconds": 15,
															"periodSeconds": 20
														},
														"readinessProbe": {
															"httpGet": {
																"path": "/readyz",
																"port": 8081
															},
															"initialDelaySeconds": 5,
															"periodSeconds": 10
														}
													}
												],
												"terminationGracePeriodSeconds": 10,
												"serviceAccountName": "service-binding-operator"
											}
										},
										"strategy": {}
									}
								}
							],
							"permissions": [
								{
									"serviceAccountName": "service-binding-operator",
									"rules": [
										{
											"verbs": [
												"get",
												"list",
												"watch",
												"create",
												"update",
												"patch",
												"delete"
											],
											"apiGroups": [
												"",
												"coordination.k8s.io"
											],
											"resources": [
												"configmaps",
												"leases"
											]
										},
										{
											"verbs": [
												"create",
												"patch"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"events"
											]
										}
									]
								}
							],
							"clusterPermissions": [
								{
									"serviceAccountName": "service-binding-operator",
									"rules": [
										{
											"verbs": [
												"get",
												"list"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"configmaps",
												"endpoints",
												"pods",
												"secrets",
												"services"
											]
										},
										{
											"verbs": [
												"patch",
												"update"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"pods",
												"secrets"
											]
										},
										{
											"verbs": [
												"create"
											],
											"apiGroups": [
												""
											],
											"resources": [
												"secrets"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"apiextensions.k8s.io"
											],
											"resources": [
												"customresourcedefinitions"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"patch",
												"update"
											],
											"apiGroups": [
												"apps"
											],
											"resources": [
												"daemonsets",
												"deployments",
												"replicasets",
												"statefulsets"
											]
										},
										{
											"verbs": [
												"get",
												"list",
												"patch",
												"update"
											],
											"apiGroups": [
												"apps.openshift.io"
											],
											"resources": [
												"deploymentconfigs"
											]
										},
										{
											"verbs": [
												"create"
											],
											"apiGroups": [
												"authentication.k8s.io"
											],
											"resources": [
												"tokenreviews"
											]
										},
										{
											"verbs": [
												"create"
											],
											"apiGroups": [
												"authorization.k8s.io"
											],
											"resources": [
												"selfsubjectaccessreviews"
											]
										},
										{
											"verbs": [
												"create"
											],
											"apiGroups": [
												"authorization.k8s.io"
											],
											"resources": [
												"subjectaccessreviews"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"binding.operators.coreos.com"
											],
											"resources": [
												"bindablekinds"
											]
										},
										{
											"verbs": [
												"update"
											],
											"apiGroups": [
												"binding.operators.coreos.com"
											],
											"resources": [
												"bindablekinds/finalizers"
											]
										},
										{
											"verbs": [
												"get",
												"patch",
												"update"
											],
											"apiGroups": [
												"binding.operators.coreos.com"
											],
											"resources": [
												"bindablekinds/status"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"binding.operators.coreos.com"
											],
											"resources": [
												"servicebindings"
											]
										},
										{
											"verbs": [
												"update"
											],
											"apiGroups": [
												"binding.operators.coreos.com"
											],
											"resources": [
												"servicebindings/finalizers"
											]
										},
										{
											"verbs": [
												"get",
												"patch",
												"update"
											],
											"apiGroups": [
												"binding.operators.coreos.com"
											],
											"resources": [
												"servicebindings/status"
											]
										},
										{
											"verbs": [
												"get",
												"list"
											],
											"apiGroups": [
												"operators.coreos.com"
											],
											"resources": [
												"clusterserviceversions"
											]
										},
										{
											"verbs": [
												"get",
												"list"
											],
											"apiGroups": [
												"route.openshift.io"
											],
											"resources": [
												"routes"
											]
										},
										{
											"verbs": [
												"create",
												"delete",
												"get",
												"list",
												"patch",
												"update",
												"watch"
											],
											"apiGroups": [
												"servicebinding.io"
											],
											"resources": [
												"servicebindings"
											]
										},
										{
											"verbs": [
												"update"
											],
											"apiGroups": [
												"servicebinding.io"
											],
											"resources": [
												"servicebindings/finalizers"
											]
										},
										{
											"verbs": [
												"get",
												"patch",
												"update"
											],
											"apiGroups": [
												"servicebinding.io"
											],
											"resources": [
												"servicebindings/status"
											]
										}
									]
								}
							]
						}
					},
					"version": "1.0.0",
					"maturity": "candidate",
					"customresourcedefinitions": {
						"owned": [
							{
								"name": "bindablekinds.binding.operators.coreos.com",
								"version": "v1alpha1",
								"kind": "BindableKinds",
								"displayName": "Bindable Kinds",
								"description": "BindableKinds contains a list of bindable type (group, version, kind) found in the cluster. It is cluster-scoped and there is only single instance named 'bindable-kinds'."
							},
							{
								"name": "servicebindings.binding.operators.coreos.com",
								"version": "v1alpha1",
								"kind": "ServiceBinding",
								"displayName": "Service Binding",
								"description": "Service Binding expresses intent to bind a backing service with an application workload."
							},
							{
								"name": "servicebindings.servicebinding.io",
								"version": "v1alpha3",
								"kind": "ServiceBinding",
								"displayName": "Service Binding (Spec API Tech Preview)",
								"description": "(Tech Preview) Service Binding implementing community specification (https://github.com/k8s-service-bindings/spec) describing the connection between a backing service and an application workload. Available as tech preview but subjected to change in near future."
							}
						]
					},
					"apiservicedefinitions": {},
					"webhookdefinitions": [
						{
							"generateName": "vservicebinding.kb.io",
							"type": "ValidatingAdmissionWebhook",
							"deploymentName": "service-binding-operator",
							"containerPort": 443,
							"targetPort": 9443,
							"rules": [
								{
									"operations": [
										"CREATE",
										"UPDATE"
									],
									"apiGroups": [
										"binding.operators.coreos.com"
									],
									"apiVersions": [
										"v1alpha1"
									],
									"resources": [
										"servicebindings"
									]
								}
							],
							"failurePolicy": "Fail",
							"sideEffects": "None",
							"admissionReviewVersions": [
								"v1beta1"
							],
							"webhookPath": "/validate-binding-operators-coreos-com-v1alpha1-servicebinding"
						},
						{
							"generateName": "vspecservicebinding.kb.io",
							"type": "ValidatingAdmissionWebhook",
							"deploymentName": "service-binding-operator",
							"containerPort": 443,
							"targetPort": 9443,
							"rules": [
								{
									"operations": [
										"CREATE",
										"UPDATE"
									],
									"apiGroups": [
										"servicebinding.io"
									],
									"apiVersions": [
										"v1alpha3"
									],
									"resources": [
										"servicebindings"
									]
								}
							],
							"failurePolicy": "Fail",
							"sideEffects": "None",
							"admissionReviewVersions": [
								"v1beta1"
							],
							"webhookPath": "/validate-servicebinding-io-v1alpha3-servicebinding"
						},
						{
							"generateName": "mservicebinding.kb.io",
							"type": "MutatingAdmissionWebhook",
							"deploymentName": "service-binding-operator",
							"containerPort": 443,
							"targetPort": 9443,
							"rules": [
								{
									"operations": [
										"CREATE",
										"UPDATE"
									],
									"apiGroups": [
										"binding.operators.coreos.com"
									],
									"apiVersions": [
										"v1alpha1"
									],
									"resources": [
										"servicebindings"
									]
								}
							],
							"failurePolicy": "Fail",
							"sideEffects": "None",
							"admissionReviewVersions": [
								"v1beta1"
							],
							"webhookPath": "/mutate-servicebinding"
						},
						{
							"generateName": "mspec-servicebinding.kb.io",
							"type": "MutatingAdmissionWebhook",
							"deploymentName": "service-binding-operator",
							"containerPort": 443,
							"targetPort": 9443,
							"rules": [
								{
									"operations": [
										"CREATE",
										"UPDATE"
									],
									"apiGroups": [
										"servicebinding.io"
									],
									"apiVersions": [
										"v1alpha3"
									],
									"resources": [
										"servicebindings"
									]
								}
							],
							"failurePolicy": "Fail",
							"sideEffects": "None",
							"admissionReviewVersions": [
								"v1beta1"
							],
							"webhookPath": "/mutate-servicebinding"
						}
					],
					"minKubeVersion": "1.16.0",
					"displayName": "Service Binding Operator",
					"description": "The Service Binding Operator manages the data plane for applications and backing services. It enables developers to connect their\napplications to backing services (REST API, databases, event buses and others) with a consistent and predictable\nexperience. The operator reads data made available by the control plane of backing services and projects the bindings\ndata to applications either as accessible files mounted into the application’s container or environment variables.\n\nIn Kubernetes, each service suggests a different way to access their secrets and developers will consume them in their\napplication in a custom way. While this provides a good deal of flexibility, it also creates discrepancies and\ncomplexity dealing with each specific services, which leads large development teams to lose overall velocity.\n\nService Binding Operator removes the error-prone manual configuration of binding information, provides service operators\na low-touch administrative experience to provision and manage access to services and enriches development lifecycle.\n\nFor additional details refer to the project [documentation](https://redhat-developer.github.io/service-binding-operator).\n\nGet Started with Service Binding Operator\n* Find out about SBO’s [prerequisites](https://redhat-developer.github.io/service-binding-operator/userguide/getting-started/installing-service-binding.html).\n* Refer to the [Quick Start Guide](https://redhat-developer.github.io/service-binding-operator/userguide/getting-started/quick-start.html) to see SBO in action in a simple scenario.\n\nNeed Help\n* Raise a ticket for bugs, features and enhancement [here](https://github.com/redhat-developer/service-binding-operator/)\n\nLicence\n* Service Binding Operator is licensed under [Apache License 2.0](https://github.com/redhat-developer/service-binding-operator/blob/master/LICENSE)\n\nService Binding Operator is providing and supporting two different APIs.\n* `binding.operators.coreos.com/v1alpha1`: This API is compliant with the Service Binding specification. It is fully supported and considered as the mature API. It’s the API we recommend in production environments.\n* `servicebinding.io/v1alpha3`: This API is the one defined in the Service Binding specification. The specification is still evolving and maturing, as a result the API might change in the future. We recommend you to carefully use that API for testing purposes and preparing your integration to become fully compliant with the specification. It is available in Service Binding Operator 1.x, as Tech Preview.\n\nWe’ll consider supporting only the API from the specification, once the Service Binding specification will be officially GA. Of course, that will be a breaking change and handle in a safe way for you.\n",
					"keywords": [
						""
					],
					"maintainers": [
						{
							"name": "Openshift Application Services",
							"email": "service-binding-support@redhat.com"
						}
					],
					"provider": {
						"name": "Red Hat",
						"url": "redhat.com"
					},
					"links": [
						{
							"name": "Documentation",
							"url": "https://redhat-developer.github.io/service-binding-operator"
						}
					],
					"icon": [
						{
							"base64data": "PHN2ZyB3aWR0aD0iMzIuODgybW0iIGhlaWdodD0iMjIuNjI3bW0iIHZlcnNpb249IjEuMSIgdmlld0JveD0iMCAwIDMyLjg4MiAyMi42MjciIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+PGcgdHJhbnNmb3JtPSJtYXRyaXgoLS4xNzE4OSAwIDAgLS4xNzE4OSAzNC40OSAyNS43NzMpIj48ZyBmaWxsPSIjODhkNjVkIj48cGF0aCB0cmFuc2Zvcm09Im1hdHJpeCgtMS41MzkyIDAgMCAtMS41MzkyIDM3Ny4zOSAzMTEuMykiIGQ9Im0yMDEuNzcgMTA0LjczYy0xMC4wNjQgMC0xOC4xNjYgOC4xMDIyLTE4LjE2NiAxOC4xNjZ2NDguOTUzYzAgMTAuMDY0IDguMTAyMiAxOC4xNjYgMTguMTY2IDE4LjE2NmgxOS4xN2MxMC4wNjQgMCAxOC4xNjYtOC4xMDIyIDE4LjE2Ni0xOC4xNjZ2LTQ4Ljk1M2MwLTEwLjA2NC04LjEwMjItMTguMTY2LTE4LjE2Ni0xOC4xNjZ6bS01LjQzMTYgMTIuOTNjMy44MjAyIDAuMTY0NjcgNi43ODY0IDMuMzkwMyA2LjYzMDkgNy4yMTA5LTAuMTU1MzUgMy44MjA4LTMuMzc0MSA2Ljc5NS03LjE5NTMgNi42NDg0LTMuODIxNS0wLjE0NzAzLTYuODAyOC0zLjM1OTgtNi42NjQxLTcuMTgxNmwyZS0zIC0wLjA2MDVjMC4xNzE4OS0zLjgyMTIgMy40MDUxLTYuNzgxNyA3LjIyNjYtNi42MTcyem0wIDI0LjU1N2MzLjgyMDIgMC4xNjQ2NyA2Ljc4NjQgMy4zOTAzIDYuNjMwOSA3LjIxMDktMC4xNTUzNSAzLjgyMDgtMy4zNzQxIDYuNzk1LTcuMTk1MyA2LjY0ODQtMy44MjE1LTAuMTQ3MDMtNi44MDI4LTMuMzU5OC02LjY2NDEtNy4xODE2bDJlLTMgLTAuMDYwNWMwLjE3MTg5LTMuODIxMiAzLjQwNTEtNi43ODE3IDcuMjI2Ni02LjYxNzJ6bTAgMjQuNTU3YzMuODIwMiAwLjE2NDY3IDYuNzg2NCAzLjM5MDMgNi42MzA5IDcuMjEwOS0wLjE1NTM0IDMuODIwOC0zLjM3NDEgNi43OTUtNy4xOTUzIDYuNjQ4NC0zLjgyMTUtMC4xNDcwMy02LjgwMjgtMy4zNTk4LTYuNjY0MS03LjE4MTZsMmUtMyAtMC4wNjA1YzAuMTcxODktMy44MjEyIDMuNDA1MS02Ljc4MTcgNy4yMjY2LTYuNjE3MnoiLz48cGF0aCB0cmFuc2Zvcm09Im1hdHJpeCgtMS41MzkyIDAgMCAtMS41MzkyIDM3Ny4zOSAzMTEuMykiIGQ9Im0xMTQuODMgMTA1LjIxdjg1LjAzOWg1NS4yNTR2LTg1LjAzOXptNDMuMTE1IDEyLjQ1MWMzLjgyMSAwLjE2MzYzIDYuNzg4MyAzLjM4OTYgNi42MzI4IDcuMjEwOS0wLjE1NTM0IDMuODIxNi0zLjM3NTMgNi43OTYxLTcuMTk3MyA2LjY0ODQtMy44MjE1LTAuMTQ3MDMtNi44MDI4LTMuMzU5OC02LjY2NDEtNy4xODE2bDRlLTMgLTAuMDYwNWMwLjE3MTktMy44MjA0IDMuNDAzOS02Ljc4MDYgNy4yMjQ2LTYuNjE3MnptMCAyNC41NTdjMy44MjEgMC4xNjM2MyA2Ljc4ODMgMy4zODk2IDYuNjMyOCA3LjIxMDktMC4xNTUzNCAzLjgyMTYtMy4zNzUzIDYuNzk2MS03LjE5NzMgNi42NDg0LTMuODIxNS0wLjE0NzAzLTYuODAyOC0zLjM1OTgtNi42NjQxLTcuMTgxNmw0ZS0zIC0wLjA2MDVjMC4xNzE5LTMuODIwNCAzLjQwMzktNi43ODA2IDcuMjI0Ni02LjYxNzJ6bTAgMjQuNTU3YzMuODIxIDAuMTYzNjMgNi43ODgzIDMuMzg5NiA2LjYzMjggNy4yMTA5LTAuMTU1MzMgMy44MjE2LTMuMzc1MyA2Ljc5NjEtNy4xOTczIDYuNjQ4NC0zLjgyMTUtMC4xNDcwMy02LjgwMjgtMy4zNTk4LTYuNjY0MS03LjE4MTZsNGUtMyAtMC4wNjA1YzAuMTcxOS0zLjgyMDQgMy40MDM5LTYuNzgwNiA3LjIyNDYtNi42MTcyeiIvPjwvZz48ZyBmaWxsPSIjNjJiYjJmIj48cmVjdCB4PSI3NS4wMzIiIHk9IjExNS4yMyIgd2lkdGg9IjU5LjkzNSIgaGVpZ2h0PSI4LjU3NDQiLz48cmVjdCB4PSI3NS4wMzIiIHk9Ijc3LjQzNiIgd2lkdGg9IjU5LjkzNSIgaGVpZ2h0PSI4LjU3NDQiLz48cmVjdCB4PSI3NS4wMzIiIHk9IjM5LjYzOCIgd2lkdGg9IjU5LjkzNSIgaGVpZ2h0PSI4LjU3NDQiLz48L2c+PC9nPjwvc3ZnPgo=",
							"mediatype": "image/svg+xml"
						}
					],
					"installModes": [
						{
							"type": "OwnNamespace",
							"supported": true
						},
						{
							"type": "SingleNamespace",
							"supported": true
						},
						{
							"type": "MultiNamespace",
							"supported": false
						},
						{
							"type": "AllNamespaces",
							"supported": true
						}
					],
					"replaces": "service-binding-operator.v0.11.0"
				},
				"status": {
					"phase": "Succeeded",
					"message": "The operator is running in service-binding-operator but is managing this namespace",
					"reason": "Copied",
					"lastUpdateTime": "2022-02-04T10:37:36Z",
					"lastTransitionTime": "2022-02-04T10:37:36Z",
					"conditions": [
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:14:57Z",
							"lastTransitionTime": "2022-02-04T10:14:57Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment service-binding-operator to become ready: deployment \"service-binding-operator\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:15:00Z",
							"lastTransitionTime": "2022-02-04T10:14:57Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:15:35Z",
							"lastTransitionTime": "2022-02-04T10:15:35Z"
						},
						{
							"phase": "Failed",
							"message": "installing: waiting for deployment service-binding-operator to become ready: deployment \"service-binding-operator\" not available: Deployment does not have minimum availability.",
							"reason": "ComponentUnhealthy",
							"lastUpdateTime": "2022-02-04T10:22:44Z",
							"lastTransitionTime": "2022-02-04T10:22:44Z"
						},
						{
							"phase": "Pending",
							"message": "installing: waiting for deployment service-binding-operator to become ready: deployment \"service-binding-operator\" not available: Deployment does not have minimum availability.",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-04T10:22:50Z",
							"lastTransitionTime": "2022-02-04T10:22:50Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:22:53Z",
							"lastTransitionTime": "2022-02-04T10:22:53Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:22:55Z",
							"lastTransitionTime": "2022-02-04T10:22:55Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment service-binding-operator to become ready: deployment \"service-binding-operator\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:23:01Z",
							"lastTransitionTime": "2022-02-04T10:22:55Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:23:09Z",
							"lastTransitionTime": "2022-02-04T10:23:09Z"
						},
						{
							"phase": "Failed",
							"message": "installing: waiting for deployment service-binding-operator to become ready: deployment \"service-binding-operator\" not available: Deployment does not have minimum availability.",
							"reason": "ComponentUnhealthy",
							"lastUpdateTime": "2022-02-04T10:28:30Z",
							"lastTransitionTime": "2022-02-04T10:28:30Z"
						},
						{
							"phase": "Pending",
							"message": "installing: waiting for deployment service-binding-operator to become ready: deployment \"service-binding-operator\" not available: Deployment does not have minimum availability.",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-04T10:28:44Z",
							"lastTransitionTime": "2022-02-04T10:28:44Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:28:47Z",
							"lastTransitionTime": "2022-02-04T10:28:47Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:28:51Z",
							"lastTransitionTime": "2022-02-04T10:28:51Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment service-binding-operator to become ready: deployment \"service-binding-operator\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:28:55Z",
							"lastTransitionTime": "2022-02-04T10:28:51Z"
						},
						{
							"phase": "Failed",
							"message": "install timeout",
							"reason": "InstallCheckFailed",
							"lastUpdateTime": "2022-02-04T10:34:01Z",
							"lastTransitionTime": "2022-02-04T10:34:01Z"
						},
						{
							"phase": "Pending",
							"message": "installing: waiting for deployment service-binding-operator to become ready: deployment \"service-binding-operator\" not available: Deployment does not have minimum availability.",
							"reason": "NeedsReinstall",
							"lastUpdateTime": "2022-02-04T10:34:15Z",
							"lastTransitionTime": "2022-02-04T10:34:15Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-02-04T10:34:17Z",
							"lastTransitionTime": "2022-02-04T10:34:17Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:34:19Z",
							"lastTransitionTime": "2022-02-04T10:34:19Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment service-binding-operator to become ready: deployment \"service-binding-operator\" not available: Deployment does not have minimum availability.",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-02-04T10:34:22Z",
							"lastTransitionTime": "2022-02-04T10:34:19Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-02-04T10:37:36Z",
							"lastTransitionTime": "2022-02-04T10:37:36Z"
						}
					],
					"requirementStatus": [
						{
							"group": "operators.coreos.com",
							"version": "v1alpha1",
							"kind": "ClusterServiceVersion",
							"name": "service-binding-operator.v1.0.0",
							"status": "Present",
							"message": "CSV minKubeVersion (1.16.0) less than server version (v1.22.3+e790d7f)"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "bindablekinds.binding.operators.coreos.com",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "7faeb6dc-7091-43e4-9917-2dbb8d8ee5d1"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "servicebindings.binding.operators.coreos.com",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "eab4011e-fce0-4266-9fe9-87c6f35856b7"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "servicebindings.servicebinding.io",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "e1ec98a7-7b8b-47ea-a4cf-78d9b8709571"
						},
						{
							"group": "",
							"version": "v1",
							"kind": "ServiceAccount",
							"name": "service-binding-operator",
							"status": "Present",
							"message": "",
							"dependents": [
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"],\"apiGroups\":[\"\",\"coordination.k8s.io\"],\"resources\":[\"configmaps\",\"leases\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"create\",\"patch\"],\"apiGroups\":[\"\"],\"resources\":[\"events\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\"],\"apiGroups\":[\"\"],\"resources\":[\"configmaps\",\"endpoints\",\"pods\",\"secrets\",\"services\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"patch\",\"update\"],\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"secrets\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\"],\"apiGroups\":[\"\"],\"resources\":[\"secrets\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"apiextensions.k8s.io\"],\"resources\":[\"customresourcedefinitions\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"patch\",\"update\"],\"apiGroups\":[\"apps\"],\"resources\":[\"daemonsets\",\"deployments\",\"replicasets\",\"statefulsets\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"patch\",\"update\"],\"apiGroups\":[\"apps.openshift.io\"],\"resources\":[\"deploymentconfigs\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\"],\"apiGroups\":[\"authentication.k8s.io\"],\"resources\":[\"tokenreviews\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\"],\"apiGroups\":[\"authorization.k8s.io\"],\"resources\":[\"selfsubjectaccessreviews\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\"],\"apiGroups\":[\"authorization.k8s.io\"],\"resources\":[\"subjectaccessreviews\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"binding.operators.coreos.com\"],\"resources\":[\"bindablekinds\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"update\"],\"apiGroups\":[\"binding.operators.coreos.com\"],\"resources\":[\"bindablekinds/finalizers\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"patch\",\"update\"],\"apiGroups\":[\"binding.operators.coreos.com\"],\"resources\":[\"bindablekinds/status\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"binding.operators.coreos.com\"],\"resources\":[\"servicebindings\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"update\"],\"apiGroups\":[\"binding.operators.coreos.com\"],\"resources\":[\"servicebindings/finalizers\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"patch\",\"update\"],\"apiGroups\":[\"binding.operators.coreos.com\"],\"resources\":[\"servicebindings/status\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\"],\"apiGroups\":[\"operators.coreos.com\"],\"resources\":[\"clusterserviceversions\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"list\"],\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"],\"apiGroups\":[\"servicebinding.io\"],\"resources\":[\"servicebindings\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"update\"],\"apiGroups\":[\"servicebinding.io\"],\"resources\":[\"servicebindings/finalizers\"]}"
								},
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "cluster rule:{\"verbs\":[\"get\",\"patch\",\"update\"],\"apiGroups\":[\"servicebinding.io\"],\"resources\":[\"servicebindings/status\"]}"
								}
							]
						}
					],
					"certsLastUpdated": "2022-02-04T10:34:20Z",
					"certsRotateAt": "2024-02-03T10:34:20Z"
				}
			},
			{
				"kind": "ClusterServiceVersion",
				"apiVersion": "operators.coreos.com/v1alpha1",
				"metadata": {
					"name": "web-terminal.v1.4.0",
					"namespace": "jmaury-dev",
					"uid": "bdf7d0c0-2344-409e-a514-bb623a9e1921",
					"resourceVersion": "583248736",
					"generation": 1,
					"creationTimestamp": "2022-01-26T01:04:16Z",
					"labels": {
						"olm.api.853988a042d5bcb": "required",
						"olm.api.e4fffb40fe6ac452": "required",
						"olm.copiedFrom": "crw"
					},
					"annotations": {
						"alm-examples": "[\n]",
						"capabilities": "Basic Install",
						"categories": "Developer Tools",
						"certified": "false",
						"containerImage": "registry.redhat.io/web-terminal-tech-preview/web-terminal-rhel8-operator@sha256:b1f2431eb4a466055fa7986e75f6b7e0a454e2dcf091e6d827f2bc509b29e174",
						"createdAt": "2021-10-26T07:24:32Z",
						"description": "Start a Web Terminal in your browser with common CLI tools for interacting with the cluster",
						"olm.operatorGroup": "devworkspace-operator",
						"olm.operatorNamespace": "crw",
						"operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.package\",\"value\":{\"packageName\":\"web-terminal\",\"version\":\"1.4.0\"}},{\"type\":\"olm.package.required\",\"value\":{\"packageName\":\"devworkspace-operator\",\"versionRange\":\"\\u003e=0.6.0\"}},{\"type\":\"olm.gvk.required\",\"value\":{\"group\":\"controller.devfile.io\",\"version\":\"v1alpha1\",\"kind\":\"DevWorkspaceRouting\"}},{\"type\":\"olm.gvk.required\",\"value\":{\"group\":\"workspace.devfile.io\",\"version\":\"v1alpha1\",\"kind\":\"DevWorkspace\"}}]}",
						"operatorframework.io/suggested-namespace": "openshift-operators",
						"repository": "https://github.com/redhat-developer/web-terminal-operator/",
						"support": "Red Hat, Inc."
					},
					"managedFields": [
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-01-26T01:04:16Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:metadata": {
									"f:annotations": {
										".": {},
										"f:alm-examples": {},
										"f:capabilities": {},
										"f:categories": {},
										"f:certified": {},
										"f:containerImage": {},
										"f:createdAt": {},
										"f:description": {},
										"f:olm.operatorGroup": {},
										"f:olm.operatorNamespace": {},
										"f:operatorframework.io/properties": {},
										"f:operatorframework.io/suggested-namespace": {},
										"f:repository": {},
										"f:support": {}
									},
									"f:labels": {
										".": {},
										"f:olm.api.853988a042d5bcb": {},
										"f:olm.api.e4fffb40fe6ac452": {},
										"f:olm.copiedFrom": {}
									}
								},
								"f:spec": {
									".": {},
									"f:apiservicedefinitions": {},
									"f:cleanup": {
										".": {},
										"f:enabled": {}
									},
									"f:customresourcedefinitions": {
										".": {},
										"f:required": {}
									},
									"f:description": {},
									"f:displayName": {},
									"f:install": {
										".": {},
										"f:spec": {
											".": {},
											"f:deployments": {},
											"f:permissions": {}
										},
										"f:strategy": {}
									},
									"f:installModes": {},
									"f:keywords": {},
									"f:links": {},
									"f:maintainers": {},
									"f:maturity": {},
									"f:provider": {
										".": {},
										"f:name": {}
									},
									"f:relatedImages": {},
									"f:replaces": {},
									"f:version": {}
								}
							}
						},
						{
							"manager": "olm",
							"operation": "Update",
							"apiVersion": "operators.coreos.com/v1alpha1",
							"time": "2022-01-26T01:04:16Z",
							"fieldsType": "FieldsV1",
							"fieldsV1": {
								"f:status": {
									".": {},
									"f:cleanup": {},
									"f:conditions": {},
									"f:lastTransitionTime": {},
									"f:lastUpdateTime": {},
									"f:message": {},
									"f:phase": {},
									"f:reason": {},
									"f:requirementStatus": {}
								}
							},
							"subresource": "status"
						}
					]
				},
				"spec": {
					"install": {
						"strategy": "deployment",
						"spec": {
							"deployments": [
								{
									"name": "web-terminal-controller",
									"spec": {
										"replicas": 1,
										"selector": {
											"matchLabels": {
												"app.kubernetes.io/name": "web-terminal-controller",
												"app.kubernetes.io/part-of": "web-terminal-operator"
											}
										},
										"template": {
											"metadata": {
												"creationTimestamp": null,
												"labels": {
													"app.kubernetes.io/name": "web-terminal-controller",
													"app.kubernetes.io/part-of": "web-terminal-operator"
												},
												"annotations": {
													"kubectl.kubernetes.io/restartedAt": ""
												}
											},
											"spec": {
												"containers": [
													{
														"name": "web-terminal-controller",
														"image": "registry.redhat.io/web-terminal-tech-preview/web-terminal-rhel8-operator@sha256:b1f2431eb4a466055fa7986e75f6b7e0a454e2dcf091e6d827f2bc509b29e174",
														"env": [
															{
																"name": "POD_NAME",
																"valueFrom": {
																	"fieldRef": {
																		"fieldPath": "metadata.name"
																	}
																}
															},
															{
																"name": "OPERATOR_NAME",
																"value": "web-terminal-operator"
															},
															{
																"name": "RELATED_IMAGE_web_terminal_tooling",
																"value": "registry.redhat.io/web-terminal-tech-preview/web-terminal-tooling-rhel8@sha256:a3c0b20b51a8e3cf794d2d6363d3058ff25310a43ba5ccb65abf6d01ba10289b"
															},
															{
																"name": "RELATED_IMAGE_web_terminal_exec",
																"value": "registry.redhat.io/web-terminal-tech-preview/web-terminal-exec-rhel8@sha256:f7d9a7d8bb5ec1113452755515e9ca67254c4a75a754230a3117404ef9fb92be"
															}
														],
														"resources": {},
														"imagePullPolicy": "Always"
													}
												],
												"serviceAccountName": "web-terminal-controller"
											}
										},
										"strategy": {}
									}
								}
							],
							"permissions": [
								{
									"serviceAccountName": "web-terminal-controller",
									"rules": [
										{
											"verbs": [
												"*"
											],
											"apiGroups": [
												"workspace.devfile.io"
											],
											"resources": [
												"devworkspacetemplates"
											]
										}
									]
								}
							]
						}
					},
					"version": "1.4.0",
					"maturity": "alpha",
					"customresourcedefinitions": {
						"required": [
							{
								"name": "devworkspaceroutings.controller.devfile.io",
								"version": "v1alpha1",
								"kind": "DevWorkspaceRouting"
							},
							{
								"name": "devworkspaces.workspace.devfile.io",
								"version": "v1alpha1",
								"kind": "DevWorkspace"
							}
						]
					},
					"apiservicedefinitions": {},
					"displayName": "Web Terminal",
					"description": "Start a Web Terminal in your browser with common CLI tools for interacting with\nthe cluster.\n\n**Note:** The Web Terminal Operator integrates with the OpenShift Console in\nOpenShift 4.5.3 and higher to simplify Web Terminal instance creation and\nautomate OpenShift login. In earlier versions of OpenShift, the operator can\nbe installed but Web Terminals will have to be created and accessed manually.\n\n## Description\nThe Web Terminal Operator leverages the\n[DevWorkspace Operator](https://github.com/devfile/devworkspace-operator)\nto provision enviroments which support common cloud CLI tools. When this\noperator is installed, the DevWorkspace Operator will be installed as a\ndependency.\n\n## How to Install\nPress the **Install** button, choose the upgrade strategy, and wait for the\n**Installed** Operator status.\n\nWhen the operator is installed, you will see a terminal button appear on the\ntop right of the console after refreshing the OpenShift console window.\n\n## How to Uninstall\nThe Web Terminal Operator requires manual steps to fully uninstall the operator.\nAs the Web Terminal Operator is designed as a way to access the OpenShift\ncluster, Web Terminal instances store user credentials. To avoid exposing these\ncredentials to unwanted parties, the operator deploys webhooks and finalizers\nthat aren't removed when the operator is uninstalled. See the\n[uninstall guide](https://docs.openshift.com/container-platform/latest/web_console/odc-about-web-terminal.html) \nfor more details.\n\n## Known Issues\n1. [Occasionally you will need to press enter to get a prompt inside of the web-terminal](https://issues.redhat.com/browse/WTO-43)\n2. [DevWorkspace is created but not opened after previous devworkspace is removed](https://issues.redhat.com/browse/WTO-44)\n",
					"keywords": [
						"workspace",
						"devtools",
						"developer",
						"ide",
						"terminal"
					],
					"maintainers": [
						{
							"name": "David Festal",
							"email": "dfestal@redhat.com"
						},
						{
							"name": "Josh Pinkney",
							"email": "jpinkney@redhat.com"
						},
						{
							"name": "Angel Misevski",
							"email": "amisevsk@redhat.com"
						}
					],
					"provider": {
						"name": "Red Hat"
					},
					"links": [
						{
							"name": "Web Terminal Repo",
							"url": "https://github.com/redhat-developer/web-terminal-operator/"
						}
					],
					"installModes": [
						{
							"type": "OwnNamespace",
							"supported": false
						},
						{
							"type": "SingleNamespace",
							"supported": false
						},
						{
							"type": "MultiNamespace",
							"supported": false
						},
						{
							"type": "AllNamespaces",
							"supported": true
						}
					],
					"replaces": "web-terminal.v1.3.0"
				},
				"status": {
					"phase": "Succeeded",
					"message": "The operator is running in crw but is managing this namespace",
					"reason": "Copied",
					"lastUpdateTime": "2022-01-26T00:49:25Z",
					"lastTransitionTime": "2022-01-26T00:49:25Z",
					"conditions": [
						{
							"phase": "Pending",
							"message": "requirements not yet checked",
							"reason": "RequirementsUnknown",
							"lastUpdateTime": "2022-01-26T00:49:18Z",
							"lastTransitionTime": "2022-01-26T00:49:18Z"
						},
						{
							"phase": "InstallReady",
							"message": "all requirements found, attempting install",
							"reason": "AllRequirementsMet",
							"lastUpdateTime": "2022-01-26T00:49:19Z",
							"lastTransitionTime": "2022-01-26T00:49:19Z"
						},
						{
							"phase": "Installing",
							"message": "waiting for install components to report healthy",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-01-26T00:49:20Z",
							"lastTransitionTime": "2022-01-26T00:49:20Z"
						},
						{
							"phase": "Installing",
							"message": "installing: waiting for deployment web-terminal-controller to become ready: deployment \"web-terminal-controller\" waiting for 1 outdated replica(s) to be terminated",
							"reason": "InstallWaiting",
							"lastUpdateTime": "2022-01-26T00:49:21Z",
							"lastTransitionTime": "2022-01-26T00:49:20Z"
						},
						{
							"phase": "Succeeded",
							"message": "install strategy completed with no errors",
							"reason": "InstallSucceeded",
							"lastUpdateTime": "2022-01-26T00:49:25Z",
							"lastTransitionTime": "2022-01-26T00:49:25Z"
						}
					],
					"requirementStatus": [
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "devworkspaceroutings.controller.devfile.io",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "dbc93b9c-9670-4fc0-83fd-458084aa4807"
						},
						{
							"group": "apiextensions.k8s.io",
							"version": "v1",
							"kind": "CustomResourceDefinition",
							"name": "devworkspaces.workspace.devfile.io",
							"status": "Present",
							"message": "CRD is present and Established condition is true",
							"uuid": "78d3f939-f499-4014-9da2-d041345dfc9a"
						},
						{
							"group": "",
							"version": "v1",
							"kind": "ServiceAccount",
							"name": "web-terminal-controller",
							"status": "Present",
							"message": "",
							"dependents": [
								{
									"group": "rbac.authorization.k8s.io",
									"version": "v1",
									"kind": "PolicyRule",
									"status": "Satisfied",
									"message": "namespaced rule:{\"verbs\":[\"*\"],\"apiGroups\":[\"workspace.devfile.io\"],\"resources\":[\"devworkspacetemplates\"]}"
								}
							]
						}
					]
				}
			}
		]
	}
}
