# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  configure_sonar:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Save Sonar config on PR
        run: |
          mkdir -p ./prInfo
          echo ${{ github.event.number }} > ./prInfo/PR
          echo ${{ github.base_ref }} > ./prInfo/base_ref
          echo ${{ github.head_ref }} > ./prInfo/head_ref
      - uses: actions/upload-artifact@v2
        with:
          name: prInfo
          path: prInfo/
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build --continue
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ matrix.os }}-test-reports
          path: |
            build/test-results/**/*.xml
            build/jacoco/

  openshift-integration-tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: manusa/actions-setup-openshift@v1.1.2
        name: Start cluster
        with:
          oc version: 'v3.11.0'
          dns ip: '1.1.1.1'
      - name: Setup cluster
        run: |
          oc cluster add service-catalog
          oc cluster add template-service-broker
          oc cluster add automation-service-broker
          curl https://raw.githubusercontent.com/minishift/minishift/master/addons/xpaas/v3.10/xpaas-streams/openjdk18-image-stream.json --location --output openjdk18-image-stream.json
          oc login -u system:admin
          oc apply -f openjdk18-image-stream.json -n openshift
          oc login -u developer -p dummy
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew integrationTest --continue
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: linux-integration-test-reports
          path: |
            build/test-results/**/*.xml
            build/jacoco/
