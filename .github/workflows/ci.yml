# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  configure_sonar:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Save Sonar config on PR
        run: |
          mkdir -p ./prInfo
          echo ${{ github.event.number }} > ./prInfo/PR
          echo ${{ github.base_ref }} > ./prInfo/base_ref
          echo ${{ github.head_ref }} > ./prInfo/head_ref
      - uses: actions/upload-artifact@v2
        with:
          name: prInfo
          path: prInfo/

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build --continue
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ matrix.os }}-test-reports
          path: |
            build/test-results/**/*.xml
            build/jacoco/

  kubernetes-integration-tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: engineerd/setup-kind@v0.5.0
        name: Start cluster
        with:
          version: v0.11.1
      - name: Setup cluster
        run: |
          curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.18.3/install.sh | bash -s v0.18.3
          kubectl create -f https://operatorhub.io/install/cloud-native-postgresql.yaml
          nb=`kubectl get pods -n operators --no-headers --ignore-not-found | grep postgres-operator | grep Running | wc -l`
          echo -n "Waiting for operator to show up "
          while [ "$nb" = "0" ]
          do
            echo -n "."
            sleep 1
            nb=`kubectl get pods -n operators --no-headers --ignore-not-found | grep postgres-operator | grep Running | wc -l`
          done
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew integrationTest --continue
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: linux-integration-test-reports
          path: |
            build/test-results/**/*.xml
            build/jacoco/
