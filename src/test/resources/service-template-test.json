{
  "apiVersion": "v1",
  "items": [
    {
      "apiVersion": "operators.coreos.com/v1alpha1",
      "kind": "ClusterServiceVersion",
      "metadata": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.3.1\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.3\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.3.1\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.3.1\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.3.1\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
          "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example Strimzi Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
          "capabilities": "Deep Insights",
          "categories": "Streaming \u0026 Messaging",
          "certified": "false",
          "containerImage": "quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c",
          "createdAt": "2022-10-31 17:05:00",
          "description": "Strimzi provides a way to run an Apache Kafka cluster on Kubernetes or OpenShift in various deployment configurations.",
          "olm.operatorGroup": "global-operators",
          "olm.operatorNamespace": "openshift-operators",
          "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"core.strimzi.io\",\"kind\":\"StrimziPodSet\",\"version\":\"v1beta2\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"kafka.strimzi.io\",\"kind\":\"Kafka\",\"version\":\"v1beta2\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"kafka.strimzi.io\",\"kind\":\"KafkaBridge\",\"version\":\"v1beta2\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"kafka.strimzi.io\",\"kind\":\"KafkaConnect\",\"version\":\"v1beta2\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"kafka.strimzi.io\",\"kind\":\"KafkaConnector\",\"version\":\"v1beta2\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"kafka.strimzi.io\",\"kind\":\"KafkaMirrorMaker\",\"version\":\"v1beta2\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"kafka.strimzi.io\",\"kind\":\"KafkaMirrorMaker2\",\"version\":\"v1beta2\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"kafka.strimzi.io\",\"kind\":\"KafkaRebalance\",\"version\":\"v1beta2\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"kafka.strimzi.io\",\"kind\":\"KafkaTopic\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"kafka.strimzi.io\",\"kind\":\"KafkaTopic\",\"version\":\"v1beta1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"kafka.strimzi.io\",\"kind\":\"KafkaTopic\",\"version\":\"v1beta2\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"kafka.strimzi.io\",\"kind\":\"KafkaUser\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"kafka.strimzi.io\",\"kind\":\"KafkaUser\",\"version\":\"v1beta1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"kafka.strimzi.io\",\"kind\":\"KafkaUser\",\"version\":\"v1beta2\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"strimzi-kafka-operator\",\"version\":\"0.32.0\"}}]}",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
          "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
          "repository": "https://github.com/strimzi/strimzi-kafka-operator",
          "support": "Strimzi"
        },
        "creationTimestamp": "2022-11-24T16:08:35Z",
        "generation": 1,
        "labels": {
          "olm.copiedFrom": "openshift-operators",
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.s390x": "supported",
          "operatorframework.io/os.linux": "supported"
        },
        "name": "strimzi-cluster-operator.v0.32.0",
        "namespace": "default",
        "resourceVersion": "62254",
        "uid": "dc3d1fad-9021-4a5d-b08b-ba621e4e8c58"
      },
      "spec": {
        "apiservicedefinitions": {},
        "cleanup": {
          "enabled": false
        },
        "customresourcedefinitions": {
          "owned": [
            {
              "description": "Represents a Kafka cluster",
              "displayName": "Kafka",
              "kind": "Kafka",
              "name": "kafkas.kafka.strimzi.io",
              "resources": [
                {
                  "kind": "Route",
                  "name": "",
                  "version": "route.openshift.io/v1"
                },
                {
                  "kind": "Service",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "StatefulSet",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "Deployment",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "ReplicaSet",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "Pod",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "Secret",
                  "name": "",
                  "version": "v1"
                }
              ],
              "specDescriptors": [
                {
                  "description": "Kafka version",
                  "displayName": "Version",
                  "path": "kafka.version",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "description": "The desired number of Kafka brokers.",
                  "displayName": "Kafka Brokers",
                  "path": "kafka.replicas",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "description": "The type of storage used by Kafka brokers",
                  "displayName": "Kafka storage",
                  "path": "kafka.storage.type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                    "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                    "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                  ]
                },
                {
                  "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                  "displayName": "Kafka Resource Requirements",
                  "path": "kafka.resources",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "description": "The desired number of Zookeeper nodes.",
                  "displayName": "Zookeeper Nodes",
                  "path": "zookeeper.replicas",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "description": "The type of storage used by Zookeeper nodes",
                  "displayName": "Zookeeper storage",
                  "path": "zookeeper.storage.type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                    "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                    "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                  ]
                },
                {
                  "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                  "displayName": "Zookeeper Resource Requirements",
                  "path": "zookeeper.resources",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                }
              ],
              "statusDescriptors": [
                {
                  "description": "Kafka cluster conditions",
                  "displayName": "Conditions",
                  "path": "conditions",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "version": "v1beta2"
            },
            {
              "description": "Represents a Kafka Connect cluster",
              "displayName": "Kafka Connect",
              "kind": "KafkaConnect",
              "name": "kafkaconnects.kafka.strimzi.io",
              "resources": [
                {
                  "kind": "Service",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "Deployment",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "ReplicaSet",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "Pod",
                  "name": "",
                  "version": "v1"
                }
              ],
              "specDescriptors": [
                {
                  "description": "The desired number of Kafka Connect nodes.",
                  "displayName": "Connect nodes",
                  "path": "replicas",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "description": "Kafka Connect version",
                  "displayName": "Version",
                  "path": "version",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "description": "The address of the bootstrap server",
                  "displayName": "Bootstrap server",
                  "path": "bootstrapServers",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                  "displayName": "Resource Requirements",
                  "path": "resources",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                }
              ],
              "statusDescriptors": [
                {
                  "description": "Kafka Connect conditions",
                  "displayName": "Conditions",
                  "path": "conditions",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "version": "v1beta2"
            },
            {
              "description": "Represents a Kafka MirrorMaker cluster",
              "displayName": "Kafka Mirror Maker",
              "kind": "KafkaMirrorMaker",
              "name": "kafkamirrormakers.kafka.strimzi.io",
              "resources": [
                {
                  "kind": "Deployment",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "ReplicaSet",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "Pod",
                  "name": "",
                  "version": "v1"
                }
              ],
              "specDescriptors": [
                {
                  "description": "The desired number of Kafka MirrorMaker nodes.",
                  "displayName": "MirrorMaker nodes",
                  "path": "replicas",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "description": "Kafka Mirror Maker version",
                  "displayName": "Version",
                  "path": "version",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "description": "The bootstrap address of the Source cluster",
                  "displayName": "Source cluster",
                  "path": "consumer.bootstrapServers",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "description": "The bootstrap address of the Target cluster",
                  "displayName": "Target cluster",
                  "path": "producer.bootstrapServers",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "description": "Expression specifying the topics which should be mirrored",
                  "displayName": "Mirrored topics",
                  "path": "include",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                  "displayName": "Resource Requirements",
                  "path": "resources",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                }
              ],
              "statusDescriptors": [
                {
                  "description": "Kafka MirrorMaker conditions",
                  "displayName": "Conditions",
                  "path": "conditions",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "version": "v1beta2"
            },
            {
              "description": "Represents a Kafka Bridge cluster",
              "displayName": "Kafka Bridge",
              "kind": "KafkaBridge",
              "name": "kafkabridges.kafka.strimzi.io",
              "resources": [
                {
                  "kind": "Deployment",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "ReplicaSet",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "Pod",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "Service",
                  "name": "",
                  "version": "v1"
                }
              ],
              "specDescriptors": [
                {
                  "description": "The desired number of Kafka Bridge nodes.",
                  "displayName": "Bridge nodes",
                  "path": "replicas",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "description": "The bootstrap address of the Kafka cluster",
                  "displayName": "Kafka cluster",
                  "path": "bootstrapServers",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "description": "The port where the HTTP Bridge is listening",
                  "displayName": "HTTP port",
                  "path": "http.port",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                  "displayName": "Resource Requirements",
                  "path": "resources",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                }
              ],
              "statusDescriptors": [
                {
                  "description": "Kafka Bridge conditions",
                  "displayName": "Conditions",
                  "path": "conditions",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "version": "v1beta2"
            },
            {
              "description": "Represents a topic inside a Kafka cluster",
              "displayName": "Kafka Topic",
              "kind": "KafkaTopic",
              "name": "kafkatopics.kafka.strimzi.io",
              "specDescriptors": [
                {
                  "description": "The number of partitions",
                  "displayName": "Partitions",
                  "path": "partitions",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "description": "The number of replicas",
                  "displayName": "Replication factor",
                  "path": "replicas",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                }
              ],
              "statusDescriptors": [
                {
                  "description": "Kafka topic conditions",
                  "displayName": "Conditions",
                  "path": "conditions",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "version": "v1beta2"
            },
            {
              "description": "Represents a user inside a Kafka cluster",
              "displayName": "Kafka User",
              "kind": "KafkaUser",
              "name": "kafkausers.kafka.strimzi.io",
              "resources": [
                {
                  "kind": "Secret",
                  "name": "",
                  "version": "v1"
                }
              ],
              "specDescriptors": [
                {
                  "description": "Authentication type",
                  "displayName": "Authentication type",
                  "path": "authentication.type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:tls",
                    "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                  ]
                },
                {
                  "description": "Authorization type",
                  "displayName": "Authorization type",
                  "path": "authorization.type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:simple"
                  ]
                }
              ],
              "statusDescriptors": [
                {
                  "description": "Kafka user conditions",
                  "displayName": "Conditions",
                  "path": "conditions",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "version": "v1beta2"
            },
            {
              "description": "Represents a Connector inside a Kafka Connect cluster",
              "displayName": "Kafka Connector",
              "kind": "KafkaConnector",
              "name": "kafkaconnectors.kafka.strimzi.io",
              "specDescriptors": [
                {
                  "description": "Class of the Kafka Connect connector",
                  "displayName": "Class",
                  "path": "class",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "description": "Maximum number of tasks used by the connector",
                  "displayName": "Max number of tasks",
                  "path": "tasksMax",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                }
              ],
              "statusDescriptors": [
                {
                  "description": "Connector conditions",
                  "displayName": "Conditions",
                  "path": "conditions",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "version": "v1beta2"
            },
            {
              "description": "Represents a Kafka MirrorMaker 2 cluster",
              "displayName": "Kafka MirrorMaker 2",
              "kind": "KafkaMirrorMaker2",
              "name": "kafkamirrormaker2s.kafka.strimzi.io",
              "resources": [
                {
                  "kind": "Deployment",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "ReplicaSet",
                  "name": "",
                  "version": "v1"
                },
                {
                  "kind": "Pod",
                  "name": "",
                  "version": "v1"
                }
              ],
              "specDescriptors": [
                {
                  "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                  "displayName": "MirrorMaker2 nodes",
                  "path": "replicas",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "description": "Kafka MirrorMaker 2 version",
                  "displayName": "Version",
                  "path": "version",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "description": "The Kafka cluster where the underlying Kafka Connect connects",
                  "displayName": "Connect cluster",
                  "path": "connectCluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                  "displayName": "Resource Requirements",
                  "path": "resources",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                }
              ],
              "statusDescriptors": [
                {
                  "description": "Kafka MirrorMaker conditions",
                  "displayName": "Conditions",
                  "path": "conditions",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "version": "v1beta2"
            },
            {
              "description": "Triggeres rebalance of replicas in a Kafka cluster",
              "displayName": "Kafka Rebalance",
              "kind": "KafkaRebalance",
              "name": "kafkarebalances.kafka.strimzi.io",
              "specDescriptors": [
                {
                  "description": "Skip hard Cruise Cotnrol goals",
                  "displayName": "Skip hard goals",
                  "path": "skipHardGoalCheck",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                }
              ],
              "statusDescriptors": [
                {
                  "description": "Kafka Rebalance conditions",
                  "displayName": "Conditions",
                  "path": "conditions",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "version": "v1beta2"
            },
            {
              "description": "Internal custom resource used to manage Strimzi pods",
              "displayName": "Strimzi Pod Set",
              "kind": "StrimziPodSet",
              "name": "strimzipodsets.core.strimzi.io",
              "specDescriptors": [
                {
                  "description": "Selector used to match pods managed by this resource",
                  "displayName": "Pod Selector",
                  "path": "selector",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                  ]
                }
              ],
              "statusDescriptors": [
                {
                  "description": "Number of desired pods",
                  "displayName": "Pods",
                  "path": "pods",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "description": "Number of pods which are ready",
                  "displayName": "Ready Pods",
                  "path": "readyPods",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "description": "Number of pods which are up-to-date",
                  "displayName": "Up-to-date Pods",
                  "path": "currentPods",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                }
              ],
              "version": "v1beta2"
            }
          ]
        },
        "description": "Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.\n\n**From the 0.32.0 release, Strimzi supports only Kubernetes 1.19 and newer! Kubernetes 1.16, 1.17 and 1.18 are not supported anymore.**\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from Strimzi 0.22 or earlier is not supported anymore!**  You have to upgrade first to one of the previous versions of Strimzi.  You will also need to convert the CRD resources.  For more details, see the [documentation](https://strimzi.io/docs/operators/0.32.0/deploying.html#assembly-upgrade-str).\n### New in 0.32.0\n* Add support for Kafka 3.3.1 and remove support for Kafka 3.1.0, 3.1.1, and 3.1.2\n* Update KafkaConnector CR status so the 'NotReady' condition is added if the connector or any tasks are reporting a 'FAILED' state.\n* Add auto-approval mechanism on KafkaRebalance resource when an optimization proposal is ready\n* The ControlPlaneListener feature gate moves to GA\n* Add client rack-awareness support to Strimzi Bridge pods\n* Add support for OpenTelemetry for distributed tracing\n* ZookeeperRoller considers unready pods\n* Support multiple operations per ACLRule\n* Add new listener type \"cluster-ip\" which is using per-broker services instead of the pod DNS names\n* Update Strimzi OAuth library to 0.11.0\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe Strimzi Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nStrimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).\n### Getting help\nIf you encounter any issues while using Strimzi, you can get help using:\n* [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n* [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n### Contributing\nYou can contribute by:\n* Raising any issues you find using Strimzi\n* Fixing issues by opening Pull Requests\n* Improving documentation\n* Talking about Strimzi\nAll bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with [\"good-start\"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.\nThe [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.\nThe [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.\nIf you want to get in touch with us first before contributing, you can use:\n* [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n* [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n### License\nStrimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).\n",
        "displayName": "Strimzi",
        "icon": [
          {
            "base64data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIyLjAuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA1MTIgNTk1IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTk1OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+CjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+Cgkuc3Qwe2ZpbGw6IzE5MkM0Nzt9Cgkuc3Qxe2ZpbGw6dXJsKCNTVkdJRF8xXyk7fQoJLnN0MntmaWxsOnVybCgjU1ZHSURfMl8pO30KCS5zdDN7ZmlsbDp1cmwoI1NWR0lEXzNfKTt9Cgkuc3Q0e2ZpbGw6dXJsKCNTVkdJRF80Xyk7fQoJLnN0NXtmaWxsOnVybCgjU1ZHSURfNV8pO30KCS5zdDZ7ZmlsbDp1cmwoI1NWR0lEXzZfKTt9Cjwvc3R5bGU+CjxnPgoJPHBvbHlnb24gY2xhc3M9InN0MCIgcG9pbnRzPSIyNTYsNSAxLDE1Mi4yIDEsNDQ2LjcgMjU2LDU5My45IDUxMSw0NDYuNyA1MTEsMTUyLjIgMjU2LDUgCSIvPgoJPGxpbmVhckdyYWRpZW50IGlkPSJTVkdJRF8xXyIgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiIHgxPSIxMDkuNDk5NiIgeTE9Ijg0Ljk2MjIiIHgyPSI0NDAuOTUxNyIgeTI9Ijc5My44MTAyIj4KCQk8c3RvcCAgb2Zmc2V0PSIwIiBzdHlsZT0ic3RvcC1jb2xvcjojRkZGRkZGIi8+CgkJPHN0b3AgIG9mZnNldD0iMSIgc3R5bGU9InN0b3AtY29sb3I6IzU0QkFEOCIvPgoJPC9saW5lYXJHcmFkaWVudD4KCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik0yNTYsNTYxbDIyNi41LTEzMC44di0yNi4zYy0zNy42LTcuMy04NC45LTE0LjMtMTQzLjUtMTkuM2MtMTk5LjItMTcuMi0xNC44LTU2LjYsNjguOS0xMjcuMQoJCVMxMzAsMTY1LjcsMTMwLDE2NS43czE0Ny42LDMxLDEzMi44LDUwYy0xMC41LDEzLjUtMTM0LjMsNDMuNS0yMzMuMyw4OC4xdjEyNi41TDI1Niw1NjF6Ii8+CjwvZz4KPC9zdmc+Cg==",
            "mediatype": "image/svg+xml"
          }
        ],
        "install": {
          "spec": {
            "clusterPermissions": [
              {
                "rules": [
                  {
                    "apiGroups": [
                      "rbac.authorization.k8s.io"
                    ],
                    "resources": [
                      "clusterrolebindings"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "create",
                      "delete",
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "storage.k8s.io"
                    ],
                    "resources": [
                      "storageclasses"
                    ],
                    "verbs": [
                      "get"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "nodes"
                    ],
                    "verbs": [
                      "get",
                      "list"
                    ]
                  }
                ],
                "serviceAccountName": "strimzi-cluster-operator"
              }
            ],
            "deployments": [
              {
                "name": "strimzi-cluster-operator-v0.32.0",
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "name": "strimzi-cluster-operator",
                      "strimzi.io/kind": "cluster-operator"
                    }
                  },
                  "strategy": {
                    "type": "Recreate"
                  },
                  "template": {
                    "metadata": {
                      "creationTimestamp": null,
                      "labels": {
                        "name": "strimzi-cluster-operator",
                        "strimzi.io/kind": "cluster-operator"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "args": [
                            "/opt/strimzi/bin/cluster_operator_run.sh"
                          ],
                          "env": [
                            {
                              "name": "STRIMZI_NAMESPACE",
                              "valueFrom": {
                                "fieldRef": {
                                  "fieldPath": "metadata.annotations['olm.targetNamespaces']"
                                }
                              }
                            },
                            {
                              "name": "STRIMZI_FULL_RECONCILIATION_INTERVAL_MS",
                              "value": "120000"
                            },
                            {
                              "name": "STRIMZI_OPERATION_TIMEOUT_MS",
                              "value": "300000"
                            },
                            {
                              "name": "STRIMZI_DEFAULT_TLS_SIDECAR_ENTITY_OPERATOR_IMAGE",
                              "value": "quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173"
                            },
                            {
                              "name": "STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE",
                              "value": "quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173"
                            },
                            {
                              "name": "STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE",
                              "value": "quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173"
                            },
                            {
                              "name": "STRIMZI_KAFKA_IMAGES",
                              "value": "3.2.0=quay.io/strimzi/kafka@sha256:bb97008b7f928ed98939b2008a7baf8909c88e726a59aaf607f2eeba55375cc0\n3.2.1=quay.io/strimzi/kafka@sha256:8c9f38b45dd814e617c9c51cc90fd51e23d7dd23e8efe7e9eff013522bd6a5a0\n3.2.3=quay.io/strimzi/kafka@sha256:4bacf5b54041bd0ab9199c8c5d51e8058758139db4b7abc380cf0400737716ef\n3.3.1=quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173\n"
                            },
                            {
                              "name": "STRIMZI_KAFKA_CONNECT_IMAGES",
                              "value": "3.2.0=quay.io/strimzi/kafka@sha256:bb97008b7f928ed98939b2008a7baf8909c88e726a59aaf607f2eeba55375cc0\n3.2.1=quay.io/strimzi/kafka@sha256:8c9f38b45dd814e617c9c51cc90fd51e23d7dd23e8efe7e9eff013522bd6a5a0\n3.2.3=quay.io/strimzi/kafka@sha256:4bacf5b54041bd0ab9199c8c5d51e8058758139db4b7abc380cf0400737716ef\n3.3.1=quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173\n"
                            },
                            {
                              "name": "STRIMZI_KAFKA_MIRROR_MAKER_IMAGES",
                              "value": "3.2.0=quay.io/strimzi/kafka@sha256:bb97008b7f928ed98939b2008a7baf8909c88e726a59aaf607f2eeba55375cc0\n3.2.1=quay.io/strimzi/kafka@sha256:8c9f38b45dd814e617c9c51cc90fd51e23d7dd23e8efe7e9eff013522bd6a5a0\n3.2.3=quay.io/strimzi/kafka@sha256:4bacf5b54041bd0ab9199c8c5d51e8058758139db4b7abc380cf0400737716ef\n3.3.1=quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173\n"
                            },
                            {
                              "name": "STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES",
                              "value": "3.2.0=quay.io/strimzi/kafka@sha256:bb97008b7f928ed98939b2008a7baf8909c88e726a59aaf607f2eeba55375cc0\n3.2.1=quay.io/strimzi/kafka@sha256:8c9f38b45dd814e617c9c51cc90fd51e23d7dd23e8efe7e9eff013522bd6a5a0\n3.2.3=quay.io/strimzi/kafka@sha256:4bacf5b54041bd0ab9199c8c5d51e8058758139db4b7abc380cf0400737716ef\n3.3.1=quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173\n"
                            },
                            {
                              "name": "STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE",
                              "value": "quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c"
                            },
                            {
                              "name": "STRIMZI_DEFAULT_USER_OPERATOR_IMAGE",
                              "value": "quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c"
                            },
                            {
                              "name": "STRIMZI_DEFAULT_KAFKA_INIT_IMAGE",
                              "value": "quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c"
                            },
                            {
                              "name": "STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE",
                              "value": "quay.io/strimzi/kafka-bridge@sha256:aad0cee4381cc1c8c6638ab5732b135acd271b5889486ca9a33312cce67e4a02"
                            },
                            {
                              "name": "STRIMZI_DEFAULT_JMXTRANS_IMAGE",
                              "value": "quay.io/strimzi/jmxtrans@sha256:208928133b2854f60bb34912e07561a3511de895b815960e73d565be2d553918"
                            },
                            {
                              "name": "STRIMZI_DEFAULT_KANIKO_EXECUTOR_IMAGE",
                              "value": "quay.io/strimzi/kaniko-executor@sha256:dc27d8aeb851245c79fb7276febe98769cc098d678bea096b338caaaf111dd27"
                            },
                            {
                              "name": "STRIMZI_DEFAULT_MAVEN_BUILDER",
                              "value": "quay.io/strimzi/maven-builder@sha256:593e9980b786ca8ad3223151c3e17f16c7652ee0e86d722af4c34b023038ecc2"
                            },
                            {
                              "name": "STRIMZI_OPERATOR_NAMESPACE",
                              "valueFrom": {
                                "fieldRef": {
                                  "fieldPath": "metadata.namespace"
                                }
                              }
                            },
                            {
                              "name": "STRIMZI_FEATURE_GATES"
                            },
                            {
                              "name": "STRIMZI_LEADER_ELECTION_ENABLED",
                              "value": "true"
                            },
                            {
                              "name": "STRIMZI_LEADER_ELECTION_LEASE_NAME",
                              "value": "strimzi-cluster-operator"
                            },
                            {
                              "name": "STRIMZI_LEADER_ELECTION_LEASE_NAMESPACE",
                              "valueFrom": {
                                "fieldRef": {
                                  "fieldPath": "metadata.namespace"
                                }
                              }
                            },
                            {
                              "name": "STRIMZI_LEADER_ELECTION_IDENTITY",
                              "valueFrom": {
                                "fieldRef": {
                                  "fieldPath": "metadata.name"
                                }
                              }
                            }
                          ],
                          "image": "quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c",
                          "livenessProbe": {
                            "httpGet": {
                              "path": "/healthy",
                              "port": "http"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 30
                          },
                          "name": "strimzi-cluster-operator",
                          "ports": [
                            {
                              "containerPort": 8080,
                              "name": "http",
                              "protocol": "TCP"
                            }
                          ],
                          "readinessProbe": {
                            "httpGet": {
                              "path": "/ready",
                              "port": "http"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 30
                          },
                          "resources": {},
                          "volumeMounts": [
                            {
                              "mountPath": "/tmp",
                              "name": "strimzi-tmp"
                            },
                            {
                              "mountPath": "/opt/strimzi/custom-config/",
                              "name": "co-config-volume"
                            }
                          ]
                        }
                      ],
                      "serviceAccountName": "strimzi-cluster-operator",
                      "volumes": [
                        {
                          "emptyDir": {
                            "medium": "Memory"
                          },
                          "name": "strimzi-tmp"
                        },
                        {
                          "configMap": {
                            "name": "strimzi-cluster-operator"
                          },
                          "name": "co-config-volume"
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "permissions": [
              {
                "rules": [
                  {
                    "apiGroups": [
                      "rbac.authorization.k8s.io"
                    ],
                    "resources": [
                      "rolebindings"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "create",
                      "delete",
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "rbac.authorization.k8s.io"
                    ],
                    "resources": [
                      "roles"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "create",
                      "delete",
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "pods",
                      "serviceaccounts",
                      "configmaps",
                      "services",
                      "endpoints",
                      "secrets",
                      "persistentvolumeclaims"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "create",
                      "delete",
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "kafka.strimzi.io"
                    ],
                    "resources": [
                      "kafkas",
                      "kafkas/status",
                      "kafkaconnects",
                      "kafkaconnects/status",
                      "kafkaconnectors",
                      "kafkaconnectors/status",
                      "kafkamirrormakers",
                      "kafkamirrormakers/status",
                      "kafkabridges",
                      "kafkabridges/status",
                      "kafkamirrormaker2s",
                      "kafkamirrormaker2s/status",
                      "kafkarebalances",
                      "kafkarebalances/status",
                      "kafkatopics",
                      "kafkatopics/status",
                      "kafkausers",
                      "kafkausers/status"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "create",
                      "delete",
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "core.strimzi.io"
                    ],
                    "resources": [
                      "strimzipodsets",
                      "strimzipodsets/status"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "create",
                      "delete",
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "apps"
                    ],
                    "resources": [
                      "deployments",
                      "deployments/scale",
                      "deployments/status",
                      "statefulsets",
                      "replicasets"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "create",
                      "delete",
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "",
                      "events.k8s.io"
                    ],
                    "resources": [
                      "events"
                    ],
                    "verbs": [
                      "create"
                    ]
                  },
                  {
                    "apiGroups": [
                      "build.openshift.io"
                    ],
                    "resources": [
                      "buildconfigs",
                      "buildconfigs/instantiate",
                      "builds"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "create",
                      "delete",
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "networking.k8s.io"
                    ],
                    "resources": [
                      "networkpolicies",
                      "ingresses"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "create",
                      "delete",
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "route.openshift.io"
                    ],
                    "resources": [
                      "routes",
                      "routes/custom-host"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "create",
                      "delete",
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "policy"
                    ],
                    "resources": [
                      "poddisruptionbudgets"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "create",
                      "delete",
                      "patch",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": [
                      "coordination.k8s.io"
                    ],
                    "resources": [
                      "leases"
                    ],
                    "verbs": [
                      "create"
                    ]
                  },
                  {
                    "apiGroups": [
                      "coordination.k8s.io"
                    ],
                    "resourceNames": [
                      "strimzi-cluster-operator"
                    ],
                    "resources": [
                      "leases"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch",
                      "delete",
                      "patch",
                      "update"
                    ]
                  }
                ],
                "serviceAccountName": "strimzi-cluster-operator"
              }
            ]
          },
          "strategy": "deployment"
        },
        "installModes": [
          {
            "supported": true,
            "type": "OwnNamespace"
          },
          {
            "supported": true,
            "type": "SingleNamespace"
          },
          {
            "supported": true,
            "type": "MultiNamespace"
          },
          {
            "supported": true,
            "type": "AllNamespaces"
          }
        ],
        "keywords": [
          "kafka",
          "messaging",
          "kafka-connect",
          "kafka-streams",
          "data-streaming",
          "data-streams",
          "streaming",
          "streams"
        ],
        "labels": {
          "name": "strimzi-cluster-operator"
        },
        "links": [
          {
            "name": "Website",
            "url": "https://strimzi.io/"
          },
          {
            "name": "Documentation",
            "url": "https://strimzi.io/documentation/"
          },
          {
            "name": "Mailing list",
            "url": "https://lists.cncf.io/g/cncf-strimzi-users/topics"
          },
          {
            "name": "Slack",
            "url": "https://cloud-native.slack.com/messages/strimzi"
          },
          {
            "name": "GitHub",
            "url": "https://github.com/strimzi/strimzi-kafka-operator"
          }
        ],
        "maintainers": [
          {
            "email": "cncf-strimzi-users@lists.cncf.io",
            "name": "Strimzi"
          }
        ],
        "maturity": "stable",
        "minKubeVersion": "1.19.0",
        "provider": {
          "name": "Strimzi"
        },
        "relatedImages": [
          {
            "image": "quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c",
            "name": "strimzi-cluster-operator"
          },
          {
            "image": "quay.io/strimzi/kafka@sha256:bb97008b7f928ed98939b2008a7baf8909c88e726a59aaf607f2eeba55375cc0",
            "name": "strimzi-kafka-320"
          },
          {
            "image": "quay.io/strimzi/kafka@sha256:8c9f38b45dd814e617c9c51cc90fd51e23d7dd23e8efe7e9eff013522bd6a5a0",
            "name": "strimzi-kafka-321"
          },
          {
            "image": "quay.io/strimzi/kafka@sha256:4bacf5b54041bd0ab9199c8c5d51e8058758139db4b7abc380cf0400737716ef",
            "name": "strimzi-kafka-323"
          },
          {
            "image": "quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173",
            "name": "strimzi-kafka-331"
          },
          {
            "image": "quay.io/strimzi/kafka-bridge@sha256:aad0cee4381cc1c8c6638ab5732b135acd271b5889486ca9a33312cce67e4a02",
            "name": "strimzi-bridge"
          },
          {
            "image": "quay.io/strimzi/jmxtrans@sha256:208928133b2854f60bb34912e07561a3511de895b815960e73d565be2d553918",
            "name": "strimzi-jmxtrans"
          },
          {
            "image": "quay.io/strimzi/kaniko-executor@sha256:dc27d8aeb851245c79fb7276febe98769cc098d678bea096b338caaaf111dd27",
            "name": "strimzi-kaniko-executor"
          },
          {
            "image": "quay.io/strimzi/maven-builder@sha256:593e9980b786ca8ad3223151c3e17f16c7652ee0e86d722af4c34b023038ecc2",
            "name": "strimzi-maven-builder"
          }
        ],
        "replaces": "strimzi-cluster-operator.v0.31.1",
        "selector": {
          "matchLabels": {
            "name": "strimzi-cluster-operator"
          }
        },
        "version": "0.32.0"
      },
      "status": {
        "cleanup": {},
        "conditions": [
          {
            "lastTransitionTime": "2022-11-24T16:08:27Z",
            "lastUpdateTime": "2022-11-24T16:08:27Z",
            "message": "requirements not yet checked",
            "phase": "Pending",
            "reason": "RequirementsUnknown"
          },
          {
            "lastTransitionTime": "2022-11-24T16:08:27Z",
            "lastUpdateTime": "2022-11-24T16:08:27Z",
            "message": "one or more requirements couldn't be found",
            "phase": "Pending",
            "reason": "RequirementsNotMet"
          },
          {
            "lastTransitionTime": "2022-11-24T16:08:29Z",
            "lastUpdateTime": "2022-11-24T16:08:29Z",
            "message": "all requirements found, attempting install",
            "phase": "InstallReady",
            "reason": "AllRequirementsMet"
          },
          {
            "lastTransitionTime": "2022-11-24T16:08:30Z",
            "lastUpdateTime": "2022-11-24T16:08:30Z",
            "message": "waiting for install components to report healthy",
            "phase": "Installing",
            "reason": "InstallSucceeded"
          },
          {
            "lastTransitionTime": "2022-11-24T16:08:30Z",
            "lastUpdateTime": "2022-11-24T16:08:30Z",
            "message": "installing: waiting for deployment strimzi-cluster-operator-v0.32.0 to become ready: waiting for spec update of deployment \"strimzi-cluster-operator-v0.32.0\" to be observed...",
            "phase": "Installing",
            "reason": "InstallWaiting"
          },
          {
            "lastTransitionTime": "2022-11-24T16:11:31Z",
            "lastUpdateTime": "2022-11-24T16:11:31Z",
            "message": "install strategy completed with no errors",
            "phase": "Succeeded",
            "reason": "InstallSucceeded"
          }
        ],
        "lastTransitionTime": "2022-11-24T16:11:31Z",
        "lastUpdateTime": "2022-11-24T16:11:31Z",
        "message": "The operator is running in openshift-operators but is managing this namespace",
        "phase": "Succeeded",
        "reason": "Copied",
        "requirementStatus": [
          {
            "group": "operators.coreos.com",
            "kind": "ClusterServiceVersion",
            "message": "CSV minKubeVersion (1.19.0) less than server version (v1.24.0+3882f8f)",
            "name": "strimzi-cluster-operator.v0.32.0",
            "status": "Present",
            "version": "v1alpha1"
          },
          {
            "group": "apiextensions.k8s.io",
            "kind": "CustomResourceDefinition",
            "message": "CRD is present and Established condition is true",
            "name": "kafkabridges.kafka.strimzi.io",
            "status": "Present",
            "uuid": "d79b9e32-c512-4795-be1c-0a34b4a4ae9a",
            "version": "v1"
          },
          {
            "group": "apiextensions.k8s.io",
            "kind": "CustomResourceDefinition",
            "message": "CRD is present and Established condition is true",
            "name": "kafkaconnectors.kafka.strimzi.io",
            "status": "Present",
            "uuid": "dd08309f-0c84-4950-9034-953c084a7f59",
            "version": "v1"
          },
          {
            "group": "apiextensions.k8s.io",
            "kind": "CustomResourceDefinition",
            "message": "CRD is present and Established condition is true",
            "name": "kafkaconnects.kafka.strimzi.io",
            "status": "Present",
            "uuid": "09b05e96-8d9e-44e9-a71b-4464ab418112",
            "version": "v1"
          },
          {
            "group": "apiextensions.k8s.io",
            "kind": "CustomResourceDefinition",
            "message": "CRD is present and Established condition is true",
            "name": "kafkamirrormaker2s.kafka.strimzi.io",
            "status": "Present",
            "uuid": "8c9b1f44-7e91-4dc8-b341-b994dc666e18",
            "version": "v1"
          },
          {
            "group": "apiextensions.k8s.io",
            "kind": "CustomResourceDefinition",
            "message": "CRD is present and Established condition is true",
            "name": "kafkamirrormakers.kafka.strimzi.io",
            "status": "Present",
            "uuid": "3ee3622c-17af-4a5a-98a3-7152344696a8",
            "version": "v1"
          },
          {
            "group": "apiextensions.k8s.io",
            "kind": "CustomResourceDefinition",
            "message": "CRD is present and Established condition is true",
            "name": "kafkarebalances.kafka.strimzi.io",
            "status": "Present",
            "uuid": "0d4ccc02-c171-406b-af1e-d1649e8e1892",
            "version": "v1"
          },
          {
            "group": "apiextensions.k8s.io",
            "kind": "CustomResourceDefinition",
            "message": "CRD is present and Established condition is true",
            "name": "kafkas.kafka.strimzi.io",
            "status": "Present",
            "uuid": "fd60ccae-20ce-4035-8771-854878c56aea",
            "version": "v1"
          },
          {
            "group": "apiextensions.k8s.io",
            "kind": "CustomResourceDefinition",
            "message": "CRD is present and Established condition is true",
            "name": "kafkatopics.kafka.strimzi.io",
            "status": "Present",
            "uuid": "323cb81d-b1c2-4455-8f13-09e21bfb10cc",
            "version": "v1"
          },
          {
            "group": "apiextensions.k8s.io",
            "kind": "CustomResourceDefinition",
            "message": "CRD is present and Established condition is true",
            "name": "kafkausers.kafka.strimzi.io",
            "status": "Present",
            "uuid": "cbab0d49-f184-4003-bb0f-9a0c23ec60e8",
            "version": "v1"
          },
          {
            "group": "apiextensions.k8s.io",
            "kind": "CustomResourceDefinition",
            "message": "CRD is present and Established condition is true",
            "name": "strimzipodsets.core.strimzi.io",
            "status": "Present",
            "uuid": "08e1b36f-fd77-4a2b-9bb5-9b862691f494",
            "version": "v1"
          },
          {
            "dependents": [
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\",\"patch\",\"update\"],\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"rolebindings\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\",\"patch\",\"update\"],\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"roles\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\",\"patch\",\"update\"],\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"serviceaccounts\",\"configmaps\",\"services\",\"endpoints\",\"secrets\",\"persistentvolumeclaims\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\",\"patch\",\"update\"],\"apiGroups\":[\"kafka.strimzi.io\"],\"resources\":[\"kafkas\",\"kafkas/status\",\"kafkaconnects\",\"kafkaconnects/status\",\"kafkaconnectors\",\"kafkaconnectors/status\",\"kafkamirrormakers\",\"kafkamirrormakers/status\",\"kafkabridges\",\"kafkabridges/status\",\"kafkamirrormaker2s\",\"kafkamirrormaker2s/status\",\"kafkarebalances\",\"kafkarebalances/status\",\"kafkatopics\",\"kafkatopics/status\",\"kafkausers\",\"kafkausers/status\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\",\"patch\",\"update\"],\"apiGroups\":[\"core.strimzi.io\"],\"resources\":[\"strimzipodsets\",\"strimzipodsets/status\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\",\"patch\",\"update\"],\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\",\"deployments/scale\",\"deployments/status\",\"statefulsets\",\"replicasets\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "namespaced rule:{\"verbs\":[\"create\"],\"apiGroups\":[\"\",\"events.k8s.io\"],\"resources\":[\"events\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\",\"patch\",\"update\"],\"apiGroups\":[\"build.openshift.io\"],\"resources\":[\"buildconfigs\",\"buildconfigs/instantiate\",\"builds\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\",\"patch\",\"update\"],\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"networkpolicies\",\"ingresses\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\",\"patch\",\"update\"],\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\",\"routes/custom-host\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\",\"patch\",\"update\"],\"apiGroups\":[\"policy\"],\"resources\":[\"poddisruptionbudgets\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "namespaced rule:{\"verbs\":[\"create\"],\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "namespaced rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"delete\",\"patch\",\"update\"],\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"],\"resourceNames\":[\"strimzi-cluster-operator\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "cluster rule:{\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\",\"patch\",\"update\"],\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"clusterrolebindings\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "cluster rule:{\"verbs\":[\"get\"],\"apiGroups\":[\"storage.k8s.io\"],\"resources\":[\"storageclasses\"]}",
                "status": "Satisfied",
                "version": "v1"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "kind": "PolicyRule",
                "message": "cluster rule:{\"verbs\":[\"get\",\"list\"],\"apiGroups\":[\"\"],\"resources\":[\"nodes\"]}",
                "status": "Satisfied",
                "version": "v1"
              }
            ],
            "group": "",
            "kind": "ServiceAccount",
            "message": "",
            "name": "strimzi-cluster-operator",
            "status": "Present",
            "version": "v1"
          }
        ]
      }
    }
  ],
  "kind": "List",
  "metadata": {
    "resourceVersion": ""
  }
}
